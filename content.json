{"meta":{"title":"mt-procode's blog","subtitle":"","description":"","author":"mt-procode","url":"https://mt-procode.github.io","root":"/"},"pages":[],"posts":[{"title":"IntQueue类的实现","date":"2020-05-23T14:08:40.000Z","path":"2020/05/23/IntQueue类的实现/","text":"问题描述 源代码这里是用vector数组实现： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163//class.h#include &lt;vector&gt;using namespace std;class IntQueue&#123; vector &lt;int&gt; element; int sizes;public: IntQueue(); IntQueue(int sizes); IntQueue(const IntQueue&amp; x); IntQueue&amp; operator=(const IntQueue&amp; x); ~IntQueue(); int getSizes(); void enterQueue(int value); int quitQueue(); bool isEmpty();&#125;;//class.cpp#include &lt;iostream&gt;#include \"class.h\"using namespace std;IntQueue::IntQueue()&#123; vector &lt;int&gt; temp(1); element = temp; sizes = 1;&#125;IntQueue::IntQueue(int sizes)&#123; vector &lt;int&gt; temp(sizes); element = temp; this-&gt;sizes = sizes;&#125;IntQueue::IntQueue(const IntQueue&amp; x)&#123; element = x.element; sizes = x.sizes;&#125;IntQueue&amp; IntQueue::operator=(const IntQueue&amp; x)&#123; if(this == &amp;x) return *this; element = x.element; sizes = x.sizes;&#125;IntQueue::~IntQueue()&#123;&#125;;int IntQueue::getSizes()&#123; return sizes;&#125;void IntQueue::enterQueue(int value)&#123; int temp = element.size(); if(temp == 0)&#123; element.push_back(value); sizes++; &#125; else if(temp == sizes)&#123; vector&lt;int&gt; t(sizes*2); for(int i = 0;i&lt;temp;i++) t[i] = element[i]; element = t; element[sizes++] = value; &#125; else element[sizes++] = value; cout &lt;&lt; \"volume:\" &lt;&lt; element.size() &lt;&lt; endl;&#125;bool IntQueue::isEmpty()&#123; if(sizes == 0) return true; return false;&#125;int IntQueue::quitQueue()&#123; bool temp = this-&gt;isEmpty(); if(temp)&#123; cout &lt;&lt; \"this queue is empty!\" &lt;&lt; endl; return 0; &#125; int t = element[0]; vector &lt;int&gt; tt(sizes-1); for(int i = 1;i &lt; sizes;i++) tt[i-1] = element[i]; element = tt; sizes--; return t;&#125;//main.cpp#include &lt;iostream&gt;#include \"class.h\"using namespace std;int main()&#123; IntQueue q1; int flag = q1.quitQueue(); cout &lt;&lt; \"enter the queue:\" &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(1); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(2); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(3); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(4); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(5); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(6); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(7); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; \"quit the queue:\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; return 0;&#125; 测试结果：) 这里使用动态数组实现： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179//class.h#include &lt;vector&gt;using namespace std;class IntQueue&#123; int* element; int sizes; int msize;public: IntQueue(); IntQueue(int sizes); IntQueue(const IntQueue&amp; x); IntQueue&amp; operator=(const IntQueue&amp; x); ~IntQueue(); int getSizes(); void enterQueue(int value); int quitQueue(); bool isEmpty();&#125;;//class.cpp#include &lt;iostream&gt;#include \"class.h\"using namespace std;IntQueue::IntQueue()&#123; element = new int[1]; sizes = 1; msize = 1;&#125;IntQueue::IntQueue(int sizes)&#123; element = new int[sizes]; this-&gt;sizes = sizes; msize = sizes;&#125;IntQueue::IntQueue(const IntQueue&amp; x)&#123; element = new int[x.sizes]; for(int i =0;i &lt; x.sizes;i++) *(element+i) = x.element[i]; sizes = x.sizes; msize = x.msize;&#125;IntQueue&amp; IntQueue::operator=(const IntQueue&amp; x)&#123; if(this == &amp;x) return *this; element = new int[x.sizes]; for(int i =0;i &lt; x.sizes;i++) *(element+i) = x.element[i]; sizes = x.sizes; msize = x.msize;&#125;IntQueue::~IntQueue()&#123; delete []element;&#125;;int IntQueue::getSizes()&#123; return sizes;&#125;void IntQueue::enterQueue(int value)&#123; if(sizes == 0)&#123; element = new int[1]; *element = value; sizes++; &#125; else if(sizes == msize)&#123; int* p = new int[sizes*2]; for(int i = 0;i&lt;sizes;i++) *(p+i) = *(element+i); delete[] element; element = p; p = nullptr; msize = sizes*2; element[sizes++] = value; &#125; else element[sizes++] = value; cout &lt;&lt; \"volume:\" &lt;&lt; msize &lt;&lt; endl;&#125;bool IntQueue::isEmpty()&#123; if(sizes == 0) return true; return false;&#125;int IntQueue::quitQueue()&#123; bool temp = this-&gt;isEmpty(); if(temp)&#123; cout &lt;&lt; \"this queue is empty!\" &lt;&lt; endl; return 0; &#125; int t = *element; int* p = new int[sizes-1]; for(int i = 1;i &lt; sizes;i++) *(p+i-1) = *(element+i); delete[] element; element = p; p = nullptr; sizes--; return t;&#125;//main.cpp#include &lt;iostream&gt;#include \"class.h\"using namespace std;int main()&#123; IntQueue q1; int flag = q1.quitQueue(); cout &lt;&lt; \"enter the queue:\" &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(1); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(2); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(3); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(4); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(5); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(6); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; q1.enterQueue(7); cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"*********************************\" &lt;&lt; endl; cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; \"quit the queue:\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; q1.quitQueue() &lt;&lt; endl; cout &lt;&lt; q1.getSizes() &lt;&lt; endl; cout &lt;&lt; \"------------------------------------------\" &lt;&lt; endl; return 0;&#125; 测试结果：)","raw":"---\ntitle: IntQueue类的实现\ndate: 2020-05-23 22:08:40\ncopyright: true\ntags: [C++,数据结构]\ncategories: [C++]\n---\n\n### 问题描述\n![problem](https://img-blog.csdnimg.cn/20200523220053982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n\n<!-- more -->\n\n\n\n### 源代码\n\n*这里是用vector数组实现：*\n\n```cpp\n//class.h\n#include <vector>\n\nusing namespace std;\n\nclass IntQueue{\n    vector <int> element;\n    int sizes;\n\npublic:\n    IntQueue();\n    IntQueue(int sizes);\n    IntQueue(const IntQueue& x);\n    IntQueue& operator=(const IntQueue& x);\n    ~IntQueue();\n    int getSizes();\n    void enterQueue(int value);\n    int quitQueue();\n    bool isEmpty();\n};\n\n//class.cpp\n#include <iostream>\n#include \"class.h\"\n\nusing namespace std;\n\nIntQueue::IntQueue(){\n    vector <int> temp(1);\n    element = temp;\n    sizes = 1;\n}\n\nIntQueue::IntQueue(int sizes){\n    vector <int> temp(sizes);\n    element = temp;\n    this->sizes = sizes;\n}\n\nIntQueue::IntQueue(const IntQueue& x){\n    element = x.element;\n    sizes = x.sizes;\n}\n\nIntQueue& IntQueue::operator=(const IntQueue& x){\n    if(this == &x)\n        return *this;\n    element = x.element;\n    sizes = x.sizes;\n}\n\nIntQueue::~IntQueue(){};\n\nint IntQueue::getSizes(){\n    return sizes;\n}\n\nvoid IntQueue::enterQueue(int value){\n    int temp = element.size();\n    if(temp == 0){\n        element.push_back(value);\n        sizes++;\n    }\n    else if(temp == sizes){\n         vector<int> t(sizes*2);\n\n         for(int i = 0;i<temp;i++)\n            t[i] = element[i];\n         element = t;\n         element[sizes++] = value;\n    }\n    else\n        element[sizes++] = value;\n\n   cout << \"volume:\" << element.size() << endl;\n}\n\nbool IntQueue::isEmpty(){\n    if(sizes == 0)\n        return true;\n    return false;\n}\n\nint IntQueue::quitQueue(){\n    bool temp = this->isEmpty();\n    if(temp){\n        cout << \"this queue is empty!\" << endl;\n        return 0;\n    }\n    int t = element[0];\n    vector <int> tt(sizes-1);\n    for(int i = 1;i < sizes;i++)\n        tt[i-1] = element[i];\n    element = tt;\n    sizes--;\n    return t;\n}\n\n//main.cpp\n#include <iostream>\n#include \"class.h\"\n\nusing namespace std;\n\nint main()\n{\n    IntQueue q1;\n    int flag = q1.quitQueue();\n    cout << \"enter the queue:\" << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(1);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(2);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(3);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(4);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(5);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(6);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(7);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n\n\n    cout << endl << endl << endl;\n\n    cout << \"quit the queue:\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    return 0;\n}\n\n\n```\n\n\n测试结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200523220425777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/20200523220441880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n*这里使用动态数组实现：*\n\n```cpp\n//class.h\n#include <vector>\n\nusing namespace std;\n\nclass IntQueue{\n    int* element;\n    int sizes;\n    int msize;\n\npublic:\n    IntQueue();\n    IntQueue(int sizes);\n    IntQueue(const IntQueue& x);\n    IntQueue& operator=(const IntQueue& x);\n    ~IntQueue();\n    int getSizes();\n    void enterQueue(int value);\n    int quitQueue();\n    bool isEmpty();\n};\n\n//class.cpp\n\n#include <iostream>\n#include \"class.h\"\n\nusing namespace std;\n\nIntQueue::IntQueue(){\n    element = new int[1];\n    sizes = 1;\n    msize = 1;\n}\n\nIntQueue::IntQueue(int sizes){\n    element = new int[sizes];\n    this->sizes = sizes;\n    msize = sizes;\n}\n\nIntQueue::IntQueue(const IntQueue& x){\n    element = new int[x.sizes];\n    for(int i =0;i < x.sizes;i++)\n        *(element+i) = x.element[i];\n    sizes = x.sizes;\n    msize = x.msize;\n}\n\nIntQueue& IntQueue::operator=(const IntQueue& x){\n    if(this == &x)\n        return *this;\n    element = new int[x.sizes];\n    for(int i =0;i < x.sizes;i++)\n        *(element+i) = x.element[i];\n    sizes = x.sizes;\n    msize = x.msize;\n}\n\nIntQueue::~IntQueue(){\n    delete []element;\n};\n\nint IntQueue::getSizes(){\n    return sizes;\n}\n\nvoid IntQueue::enterQueue(int value){\n    if(sizes == 0){\n        element = new int[1];\n        *element = value;\n        sizes++;\n    }\n\n    else if(sizes == msize){\n         int* p = new int[sizes*2];\n         for(int i = 0;i<sizes;i++)\n            *(p+i) = *(element+i);\n         delete[] element;\n         element = p;\n         p = nullptr;\n         msize = sizes*2;\n         element[sizes++] = value;\n    }\n    else\n        element[sizes++] = value;\n\n   cout << \"volume:\" << msize << endl;\n}\n\nbool IntQueue::isEmpty(){\n    if(sizes == 0)\n        return true;\n    return false;\n}\n\nint IntQueue::quitQueue(){\n    bool temp = this->isEmpty();\n    if(temp){\n        cout << \"this queue is empty!\" << endl;\n        return 0;\n    }\n    int t = *element;\n    int* p = new int[sizes-1];\n    for(int i = 1;i < sizes;i++)\n        *(p+i-1) = *(element+i);\n    delete[] element;\n    element = p;\n    p = nullptr;\n    sizes--;\n    return t;\n}\n\n\n//main.cpp\n#include <iostream>\n#include \"class.h\"\n\nusing namespace std;\n\nint main()\n{\n    IntQueue q1;\n    int flag = q1.quitQueue();\n    cout << \"enter the queue:\" << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(1);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(2);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(3);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(4);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(5);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(6);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n    q1.enterQueue(7);\n    cout << q1.getSizes() << endl;\n    cout << \"*********************************\" << endl;\n\n\n    cout << endl << endl << endl;\n\n    cout << \"quit the queue:\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    cout << q1.quitQueue() << endl;\n    cout << q1.getSizes() << endl;\n    cout << \"------------------------------------------\" << endl;\n    return 0;\n}\n\n```\n\n测试结果：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020052322063665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)![在这里插入图片描述](https://img-blog.csdnimg.cn/20200523220650653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n***\n\n","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p><img src=\"https://img-blog.csdnimg.cn/20200523220053982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"problem\"></p>\n<hr>\n<a id=\"more\"></a>\n\n\n\n<h3 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h3><p><em>这里是用vector数组实现：</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//class.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntQueue</span>&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span> &lt;<span class=\"keyword\">int</span>&gt; element;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sizes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    IntQueue();</span><br><span class=\"line\">    IntQueue(<span class=\"keyword\">int</span> sizes);</span><br><span class=\"line\">    IntQueue(<span class=\"keyword\">const</span> IntQueue&amp; x);</span><br><span class=\"line\">    IntQueue&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> IntQueue&amp; x);</span><br><span class=\"line\">    ~IntQueue();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getSizes</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">enterQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">quitQueue</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//class.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"class.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::IntQueue()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span> &lt;<span class=\"keyword\">int</span>&gt; temp(<span class=\"number\">1</span>);</span><br><span class=\"line\">    element = temp;</span><br><span class=\"line\">    sizes = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::IntQueue(<span class=\"keyword\">int</span> sizes)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span> &lt;<span class=\"keyword\">int</span>&gt; temp(sizes);</span><br><span class=\"line\">    element = temp;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;sizes = sizes;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::IntQueue(<span class=\"keyword\">const</span> IntQueue&amp; x)&#123;</span><br><span class=\"line\">    element = x.element;</span><br><span class=\"line\">    sizes = x.sizes;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue&amp; IntQueue::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> IntQueue&amp; x)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> == &amp;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    element = x.element;</span><br><span class=\"line\">    sizes = x.sizes;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::~IntQueue()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IntQueue::getSizes</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sizes;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">IntQueue::enterQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = element.size();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(temp == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        element.push_back(value);</span><br><span class=\"line\">        sizes++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(temp == sizes)&#123;</span><br><span class=\"line\">         <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; t(sizes*<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;temp;i++)</span><br><span class=\"line\">            t[i] = element[i];</span><br><span class=\"line\">         element = t;</span><br><span class=\"line\">         element[sizes++] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        element[sizes++] = value;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"volume:\"</span> &lt;&lt; element.size() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IntQueue::isEmpty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sizes == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IntQueue::quitQueue</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> temp = <span class=\"keyword\">this</span>-&gt;isEmpty();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(temp)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"this queue is empty!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t = element[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"built_in\">vector</span> &lt;<span class=\"keyword\">int</span>&gt; tt(sizes<span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i &lt; sizes;i++)</span><br><span class=\"line\">        tt[i<span class=\"number\">-1</span>] = element[i];</span><br><span class=\"line\">    element = tt;</span><br><span class=\"line\">    sizes--;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"class.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    IntQueue q1;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flag = q1.quitQueue();</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"enter the queue:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">7</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"quit the queue:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>测试结果：<br><img src=\"https://img-blog.csdnimg.cn/20200523220425777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">)<img src=\"https://img-blog.csdnimg.cn/20200523220441880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><em>这里使用动态数组实现：</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//class.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IntQueue</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>* element;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sizes;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> msize;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    IntQueue();</span><br><span class=\"line\">    IntQueue(<span class=\"keyword\">int</span> sizes);</span><br><span class=\"line\">    IntQueue(<span class=\"keyword\">const</span> IntQueue&amp; x);</span><br><span class=\"line\">    IntQueue&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> IntQueue&amp; x);</span><br><span class=\"line\">    ~IntQueue();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getSizes</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">enterQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">quitQueue</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//class.cpp</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"class.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::IntQueue()&#123;</span><br><span class=\"line\">    element = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">    sizes = <span class=\"number\">1</span>;</span><br><span class=\"line\">    msize = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::IntQueue(<span class=\"keyword\">int</span> sizes)&#123;</span><br><span class=\"line\">    element = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sizes];</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;sizes = sizes;</span><br><span class=\"line\">    msize = sizes;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::IntQueue(<span class=\"keyword\">const</span> IntQueue&amp; x)&#123;</span><br><span class=\"line\">    element = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[x.sizes];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i &lt; x.sizes;i++)</span><br><span class=\"line\">        *(element+i) = x.element[i];</span><br><span class=\"line\">    sizes = x.sizes;</span><br><span class=\"line\">    msize = x.msize;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue&amp; IntQueue::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> IntQueue&amp; x)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> == &amp;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    element = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[x.sizes];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i &lt; x.sizes;i++)</span><br><span class=\"line\">        *(element+i) = x.element[i];</span><br><span class=\"line\">    sizes = x.sizes;</span><br><span class=\"line\">    msize = x.msize;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">IntQueue::~IntQueue()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> []element;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IntQueue::getSizes</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sizes;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">IntQueue::enterQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sizes == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        element = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">        *element = value;</span><br><span class=\"line\">        sizes++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(sizes == msize)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">int</span>* p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sizes*<span class=\"number\">2</span>];</span><br><span class=\"line\">         <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i&lt;sizes;i++)</span><br><span class=\"line\">            *(p+i) = *(element+i);</span><br><span class=\"line\">         <span class=\"keyword\">delete</span>[] element;</span><br><span class=\"line\">         element = p;</span><br><span class=\"line\">         p = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">         msize = sizes*<span class=\"number\">2</span>;</span><br><span class=\"line\">         element[sizes++] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        element[sizes++] = value;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"volume:\"</span> &lt;&lt; msize &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">IntQueue::isEmpty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(sizes == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IntQueue::quitQueue</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> temp = <span class=\"keyword\">this</span>-&gt;isEmpty();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(temp)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"this queue is empty!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t = *element;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* p = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[sizes<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i &lt; sizes;i++)</span><br><span class=\"line\">        *(p+i<span class=\"number\">-1</span>) = *(element+i);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span>[] element;</span><br><span class=\"line\">    element = p;</span><br><span class=\"line\">    p = <span class=\"literal\">nullptr</span>;</span><br><span class=\"line\">    sizes--;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"class.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    IntQueue q1;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> flag = q1.quitQueue();</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"enter the queue:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">4</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">5</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    q1.enterQueue(<span class=\"number\">7</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*********************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"quit the queue:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.quitQueue() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; q1.getSizes() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>测试结果：<br><img src=\"https://img-blog.csdnimg.cn/2020052322063665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">)<img src=\"https://img-blog.csdnimg.cn/20200523220650653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<hr>\n","slug":"IntQueue类的实现","updated":"2020-05-23T14:10:10.273Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/05/23/IntQueue%E7%B1%BB%E7%9A%84%E5%AE%9E%E7%8E%B0/","excerpt":"问题描述","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"数据结构","slug":"数据结构","permalink":"https://mt-procode.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}]},{"title":"建立工资系统（1）-员工与工资","date":"2020-05-19T12:50:57.000Z","path":"2020/05/19/建立工资系统（1）-员工与工资/","text":"问题描述1、创建一个Date类，能够表示一个日期，除了对日期进行输出、设置的一般成员方法以外，还需要一个方法，能够计算对象所保存日期与参数所给日期之间的差距，计算单位为“月”，同时重载Date类的赋值运算符。2、创建一个Employee类，能够保存一个企业员工的基本信息，除了基本信息属性以外，还需要属性保存该员工的月工资、开始工作的日期和上一次发放工资的日期。3、创建一个Salary类，可以用来表示一个工资金额，除基本成员变量和访问方法外，请为Salary类设计+、-运算符的重载函数；4、上面类所有成员变量使用private修饰，为这些属性编写设置和读取方法，同时在设置方法中还需要对每个属性值的设置范围进行检查，如果超出取值范围，请为该值设置初始值并提示用户；请为两个类编写构造方法，初始化所有属性的值。编写一个测试main方法，实例化两个员工对象，其月工资分别为1500和2500，工作日期都是2010年2月10日，请计算需要支付给这两个员工的工资。 问题分析Date类（int year，int month，int day）：默认构造函数传入参数：无输入：无输出：无功能：初始化：year = 2020， month = 5， day = 19 带参数的构造函数传入参数：类的所有成员变量输入：无输出：无功能：完成类成员变量的自定义初始化 拷贝构造函数传入参数：该类类型的const引用输入：无输出：无功能：完成类与类之间的浅拷贝 析构函数传入参数：无输入：无输出：无功能：类对象超出作用于时，回收相应空间和执行收尾工作 赋值运算符重载函数传入参数：该类类型的const引用输入：无输出：无返回值：类类型的引用功能：为类类型的对象赋值 获取类成员变量的方法（year，month，day）传入参数：无输入：无输出：无返回值：int 设置类成员变量值的方法（year，month，day）传入参数：要修改的参数值输入：无输出：无返回值：void 以日期标准格式输出当前对象所表示的日期的方法传入参数：无输入：无输出：X年X月X日返回值：void 计算当前对象与所给参数的差值的方法（以月为单位）传入参数：Date类类型输入：无输出：无返回值：差值（float） Salary类（double money）：默认构造函数传入参数：无输入：无输出：无功能：初始化 money = 0.0 带参数的构造函数传入参数：类的所有成员变量输入：无输出：无功能：money = 传入参数 拷贝构造函数传入参数：该类类型的const引用输入：无输出：无功能：完成类与类之间的浅拷贝 析构函数传入参数：无输入：无输出：无功能：类对象超出作用于时，回收相应空间和执行收尾工作 赋值运算符重载函数传入参数：该类类型的const引用输入：无输出：无返回值：该类类型的引用功能：为类类型的对象赋值 加运算符重载函数传入参数：该类类型的const引用输入：无输出：无返回值：Salary&amp;功能：this.money + 传入参数.money 减运算符重载函数传入参数：该类类型的const引用输入：无输出：无返回值：Salary&amp;功能：this.money - 传入参数.money 获取类成员变量的方法（money）传入参数：无输入：无输出：无返回值：double 设置类成员变量值的方法（money）传入参数：要修改的参数值输入：无输出：无返回值：void Employee类（int no，string name，Salary sal，Date sDate，Date lDate）：Static int counts = 0默认构造函数传入参数：无输入：无输出：无功能：初始化：no = ++counts， name = null，sal = 0.0，sDate，lDate 带参数的构造函数传入参数：类的所有成员变量输入：无输出：无功能：成员变量 = 传入参数 拷贝构造函数传入参数：该类类型的const引用输入：无输出：无功能：完成类与类之间的浅拷贝 析构函数传入参数：无输入：无输出：无功能：类对象超出作用于时，回收相应空间和执行收尾工作 赋值运算符重载函数传入参数：该类类型的const引用输入：无输出：无返回值：该类类型的引用功能：为类类型的对象赋值 获取类成员变量的方法（no，name，money，sDate，lDate）传入参数：无输入：无输出：无返回值：int，string，double，sDate，IDate 设置类成员变量值的方法（no，name，money，sDate，lDate）传入参数：要修改的参数值输入：无输出：无返回值：void 类图设计)) 源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298//class.h#include &lt;string&gt;using namespace std;class Date&#123; int year; int month; int day;public: Date(); Date(int year,int month,int day); Date(const Date&amp; x); ~Date(); Date&amp; operator=(const Date&amp; x); int getYear(); void setYear(int year); int getMonth(); void setMonth(int month); int getDay(); void setDay(int day); void pritDate(); float returnSub(Date s);&#125;;class Salary&#123; double money;public: Salary(); Salary(double money); Salary(const Salary&amp; x); ~Salary(); Salary&amp; operator=(const Salary&amp; x); Salary&amp; operator+(const Salary&amp; x); Salary&amp; operator-(const Salary&amp; x); double getMoney(); void setMoney(double money);&#125;;class Employee&#123; static int counts; int no; string name; Salary sal; Date start; Date last;public: Employee(); Employee(string name,Salary sal,Date start,Date last); Employee(const Employee&amp; x); ~Employee(); Employee&amp; operator=(const Employee&amp; x); int getNo(); string getName(); void setName(string name); Salary getSalary(); void setSalary(Salary sal); Date getStart(); void setStart(Date start); Date getLast(); void setLast(Date last);&#125;;//class.cpp#include \"classDefine.h\"#include &lt;iostream&gt;using namespace std;Date::Date()&#123; year = 2020; month = 5; day = 19;&#125;Date::Date(int year,int month,int day)&#123; this-&gt;year = year; this-&gt;month = month; this-&gt;day = day;&#125;Date::Date(const Date&amp; x)&#123; year = x.year; month = x.month; day = x.day;&#125;Date::~Date()&#123;&#125;;Date&amp; Date::operator=(const Date&amp; x)&#123; if(this == &amp;x) return *this; year = x.year; month = x.month; day = x.day; return *this;&#125;int Date:: getYear()&#123; return year;&#125;void Date::setYear(int year)&#123; if(year &lt;= 0)&#123; cout &lt;&lt; \"data is illegal!\" &lt;&lt; endl; this-&gt;year = 2020; &#125; else this-&gt;year = year;&#125;int Date::getMonth()&#123; return month;&#125;void Date::setMonth(int month)&#123; if(month &lt;= 0 || month &gt;12)&#123; cout &lt;&lt; \"data is illegal!\" &lt;&lt; endl; this-&gt;month = 5; &#125; else this-&gt;month = month;&#125;int Date::getDay()&#123; return day;&#125;void Date::setDay(int day)&#123; if(day &lt;= 0 || day &gt; 31)&#123; cout &lt;&lt; \"data is illegal!\" &lt;&lt; endl; this-&gt;day = 19; &#125; else this-&gt;day = day;&#125;void Date::pritDate()&#123; cout &lt;&lt; year &lt;&lt; \"-\" &lt;&lt; month &lt;&lt; \"-\" &lt;&lt; day &lt;&lt; endl;&#125;float Date::returnSub(Date s)&#123; return ((year-s.year)*12 + ((month+day/30) - (s.month +s.day/30)));&#125;Salary::Salary()&#123; money = 0.0;&#125;Salary::Salary(double money)&#123; this-&gt;money = money;&#125;Salary::Salary(const Salary&amp; x)&#123; money = x.money;&#125;Salary::~Salary()&#123;&#125;;Salary&amp; Salary::operator=(const Salary&amp; x)&#123; if(this == &amp;x) return *this; money = x.money; return *this;&#125;Salary&amp; Salary::operator+(const Salary&amp; x)&#123; money += x.money; return *this;&#125;Salary&amp; Salary::operator-(const Salary&amp; x)&#123; money -= x.money; return *this;&#125;double Salary::getMoney()&#123; return money;&#125;void Salary::setMoney(double money)&#123; if(money &lt; 0)&#123; cout &lt;&lt; \"data is illegal!\" &lt;&lt; endl; this-&gt;money = 0.0; &#125; else this-&gt;money = money;&#125;int Employee::counts = 0;Employee::Employee()&#123; no = ++counts; name = \"null\"; sal = 0.0;&#125;Employee::Employee(string name,Salary sal,Date start,Date last)&#123; no = ++counts; this-&gt;name = name; this-&gt;sal = sal; this-&gt;start = start; this-&gt;last = last;&#125;Employee::Employee(const Employee&amp; x)&#123; no = ++counts; name = x.name; sal = x.sal; start = x.start; last = x.last;&#125;Employee::~Employee()&#123;&#125;;Employee&amp; Employee::operator=(const Employee&amp; x)&#123; if(this == &amp;x) return *this; no = ++counts; name = x.name; sal = x.sal; start = x.start; last = x.last; return *this;&#125;int Employee::getNo()&#123; return no;&#125;string Employee::getName()&#123; return name;&#125;void Employee::setName(string name)&#123; this-&gt;name = name;&#125;Salary Employee:: getSalary()&#123; return sal;&#125;void Employee::setSalary(Salary sal)&#123; double temp = sal.getMoney(); if(temp &lt; 0)&#123; cout &lt;&lt; \"date is illegal!\" &lt;&lt; endl; this-&gt;sal = 0.0; &#125; else this-&gt;sal = sal;&#125;Date Employee:: getStart()&#123; return start;&#125;void Employee::setStart(Date start)&#123; this-&gt;start = start;&#125;Date Employee::getLast()&#123; return last;&#125;void Employee::setLast(Date last)&#123; this-&gt;last = last;&#125;//main.cpp#include &lt;iostream&gt;#include \"classDefine.h\"using namespace std;int main()&#123; Date d1; Date d2(2010,2,10); Employee e1(\"jack\",1500,d1,d2); Employee e2(\"Tom\",2500,d1,d2); Date t1 = e1.getStart(); Date t2 = e2.getStart(); Salary ss1 = e1.getSalary(); Salary ss2 = e2.getSalary(); double s1 = ss1.getMoney(); double s2 = ss2.getMoney(); float re1 = t1.returnSub(d2) * s1 ; float re2 = t2.returnSub(d2) * s2; cout &lt;&lt; re1 &lt;&lt; endl; cout &lt;&lt; re2 &lt;&lt; endl; return 0;&#125; 测试","raw":"---\ntitle: 建立工资系统（1）-员工与工资\ndate: 2020-05-19 20:50:57\ncopyright: true\ntags: [C++,类,算法]\ncategories: [C++]\n---\n\n### 问题描述\n1、创建一个Date类，能够表示一个日期，除了对日期进行输出、设置的一般成员方法以外，还需要一个方法，能够计算对象所保存日期与参数所给日期之间的差距，计算单位为“月”，同时重载Date类的赋值运算符。\n2、创建一个Employee类，能够保存一个企业员工的基本信息，除了基本信息属性以外，还需要属性保存该员工的月工资、开始工作的日期和上一次发放工资的日期。\n3、创建一个Salary类，可以用来表示一个工资金额，除基本成员变量和访问方法外，请为Salary类设计+、-运算符的重载函数；\n4、上面类所有成员变量使用private修饰，为这些属性编写设置和读取方法，同时在设置方法中还需要对每个属性值的设置范围进行检查，如果超出取值范围，请为该值设置初始值并提示用户；请为两个类编写构造方法，初始化所有属性的值。\n编写一个测试main方法，实例化两个员工对象，其月工资分别为1500和2500，工作日期都是2010年2月10日，请计算需要支付给这两个员工的工资。\n\n***\n\n<!-- more -->\n\n### 问题分析\n\nDate类（int year，int month，int day）：\n默认构造函数\n传入参数：无\n输入：无\n输出：无\n功能：初始化：year = 2020， month = 5， day = 19\n\n带参数的构造函数\n传入参数：类的所有成员变量\n输入：无\n输出：无\n功能：完成类成员变量的自定义初始化\n\n拷贝构造函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n功能：完成类与类之间的浅拷贝\n\n析构函数\n传入参数：无\n输入：无\n输出：无\n功能：类对象超出作用于时，回收相应空间和执行收尾工作\n\n赋值运算符重载函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n返回值：类类型的引用\n功能：为类类型的对象赋值\n\n获取类成员变量的方法（year，month，day）\n传入参数：无\n输入：无\n输出：无\n返回值：int\n\n设置类成员变量值的方法（year，month，day）\n传入参数：要修改的参数值\n输入：无\n输出：无\n返回值：void\n\n以日期标准格式输出当前对象所表示的日期的方法\n传入参数：无\n输入：无\n输出：X年X月X日\n返回值：void\n\n计算当前对象与所给参数的差值的方法（以月为单位）\n传入参数：Date类类型\n输入：无\n输出：无\n返回值：差值（float）\n\nSalary类（double money）：\n默认构造函数\n传入参数：无\n输入：无\n输出：无\n功能：初始化 money = 0.0 \n\n带参数的构造函数\n传入参数：类的所有成员变量\n输入：无\n输出：无\n功能：money = 传入参数\n\n拷贝构造函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n功能：完成类与类之间的浅拷贝\n\n析构函数\n传入参数：无\n输入：无\n输出：无\n功能：类对象超出作用于时，回收相应空间和执行收尾工作\n\n赋值运算符重载函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n返回值：该类类型的引用\n功能：为类类型的对象赋值\n\n加运算符重载函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n返回值：Salary&\n功能：this.money + 传入参数.money\n\n减运算符重载函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n返回值：Salary&\n功能：this.money - 传入参数.money\n\n\n获取类成员变量的方法（money）\n传入参数：无\n输入：无\n输出：无\n返回值：double\n\n设置类成员变量值的方法（money）\n传入参数：要修改的参数值\n输入：无\n输出：无\n返回值：void\n\nEmployee类（int no，string name，Salary sal，Date sDate，Date lDate）：\nStatic int counts = 0\n默认构造函数\n传入参数：无\n输入：无\n输出：无\n功能：初始化：no = ++counts， name = null，sal = 0.0，sDate，lDate  \n\n带参数的构造函数\n传入参数：类的所有成员变量\n输入：无\n输出：无\n功能：成员变量 = 传入参数\n\n拷贝构造函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n功能：完成类与类之间的浅拷贝\n\n析构函数\n传入参数：无\n输入：无\n输出：无\n功能：类对象超出作用于时，回收相应空间和执行收尾工作\n\n赋值运算符重载函数\n传入参数：该类类型的const引用\n输入：无\n输出：无\n返回值：该类类型的引用\n功能：为类类型的对象赋值\n\n\n获取类成员变量的方法（no，name，money，sDate，lDate）\n传入参数：无\n输入：无\n输出：无\n返回值：int，string，double，sDate，IDate\n\n设置类成员变量值的方法（no，name，money，sDate，lDate）\n传入参数：要修改的参数值\n输入：无\n输出：无\n返回值：void\n\n***\n\n### 类图设计\n![Date](https://img-blog.csdnimg.cn/20200519204045931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)![Salary](https://img-blog.csdnimg.cn/20200519204108421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)![Employee](https://img-blog.csdnimg.cn/20200519204243602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n\n### 源码\n\n```cpp\n\n//class.h\n#include <string>\n\nusing namespace std;\n\nclass Date{\n    int year;\n    int month;\n    int day;\n\npublic:\n    Date();\n    Date(int year,int month,int day);\n    Date(const Date& x);\n    ~Date();\n    Date& operator=(const Date& x);\n    int getYear();\n    void setYear(int year);\n    int getMonth();\n    void setMonth(int month);\n    int getDay();\n    void setDay(int day);\n    void pritDate();\n    float returnSub(Date s);\n};\n\nclass Salary{\n    double money;\n\npublic:\n    Salary();\n    Salary(double money);\n    Salary(const Salary& x);\n    ~Salary();\n    Salary& operator=(const Salary& x);\n    Salary& operator+(const Salary& x);\n    Salary& operator-(const Salary& x);\n    double getMoney();\n    void setMoney(double money);\n};\n\nclass Employee{\n    static int counts;\n    int no;\n    string name;\n    Salary sal;\n    Date start;\n    Date last;\n\npublic:\n    Employee();\n    Employee(string name,Salary sal,Date start,Date last);\n    Employee(const Employee& x);\n    ~Employee();\n    Employee& operator=(const Employee& x);\n    int getNo();\n    string getName();\n    void setName(string name);\n    Salary getSalary();\n    void setSalary(Salary sal);\n    Date getStart();\n    void setStart(Date start);\n    Date getLast();\n    void setLast(Date last);\n};\n\n//class.cpp\n#include \"classDefine.h\"\n#include <iostream>\n\nusing namespace std;\n\nDate::Date(){\n    year = 2020;\n    month = 5;\n    day = 19;\n}\n\nDate::Date(int year,int month,int day){\n    this->year = year;\n    this->month = month;\n    this->day = day;\n}\n\nDate::Date(const Date& x){\n    year = x.year;\n    month = x.month;\n    day = x.day;\n}\n\nDate::~Date(){};\n\nDate& Date::operator=(const Date& x){\n    if(this == &x)\n        return *this;\n    year = x.year;\n    month = x.month;\n    day = x.day;\n    return *this;\n}\n\nint Date:: getYear(){\n    return year;\n}\n\n\nvoid Date::setYear(int year){\n    if(year <= 0){\n        cout << \"data is illegal!\" << endl;\n        this->year = 2020;\n    }\n    else\n        this->year = year;\n}\n\nint Date::getMonth(){\n    return month;\n}\n\nvoid Date::setMonth(int month){\n    if(month <= 0 || month >12){\n        cout << \"data is illegal!\" << endl;\n        this->month = 5;\n    }\n    else\n        this->month = month;\n}\n\nint Date::getDay(){\n    return day;\n}\n\nvoid Date::setDay(int day){\n    if(day <= 0 || day > 31){\n        cout << \"data is illegal!\" << endl;\n        this->day = 19;\n    }\n    else\n        this->day = day;\n}\n\nvoid Date::pritDate(){\n    cout << year << \"-\" << month << \"-\" << day << endl;\n}\n\nfloat Date::returnSub(Date s){\n    return ((year-s.year)*12 + ((month+day/30) - (s.month +s.day/30)));\n}\n\nSalary::Salary(){\n    money = 0.0;\n}\n\nSalary::Salary(double money){\n    this->money = money;\n}\n\nSalary::Salary(const Salary& x){\n    money = x.money;\n}\n\nSalary::~Salary(){};\n\nSalary& Salary::operator=(const Salary& x){\n    if(this == &x)\n        return *this;\n    money = x.money;\n    return *this;\n}\n\nSalary& Salary::operator+(const Salary& x){\n    money += x.money;\n    return *this;\n}\n\nSalary& Salary::operator-(const Salary& x){\n    money -= x.money;\n    return *this;\n}\n\ndouble Salary::getMoney(){\n    return money;\n}\n\nvoid Salary::setMoney(double money){\n    if(money < 0){\n        cout << \"data is illegal!\" << endl;\n        this->money = 0.0;\n    }\n    else\n        this->money = money;\n}\n\nint Employee::counts = 0;\n\nEmployee::Employee(){\n    no = ++counts;\n    name = \"null\";\n    sal = 0.0;\n}\n\nEmployee::Employee(string name,Salary sal,Date start,Date last){\n    no = ++counts;\n    this->name = name;\n    this->sal = sal;\n    this->start = start;\n    this->last = last;\n}\n\nEmployee::Employee(const Employee& x){\n    no = ++counts;\n    name = x.name;\n    sal = x.sal;\n    start = x.start;\n    last = x.last;\n}\nEmployee::~Employee(){};\n\nEmployee& Employee::operator=(const Employee& x){\n    if(this == &x)\n        return *this;\n    no = ++counts;\n    name = x.name;\n    sal = x.sal;\n    start = x.start;\n    last = x.last;\n    return *this;\n}\n\nint Employee::getNo(){\n    return no;\n}\n\nstring Employee::getName(){\n    return name;\n}\n\nvoid Employee::setName(string name){\n    this->name = name;\n}\n\nSalary Employee:: getSalary(){\n    return sal;\n}\n\nvoid Employee::setSalary(Salary sal){\n    double temp = sal.getMoney();\n    if(temp < 0){\n        cout << \"date is illegal!\" << endl;\n        this->sal = 0.0;\n    }\n    else\n        this->sal = sal;\n}\n\nDate Employee:: getStart(){\n    return start;\n}\n\nvoid Employee::setStart(Date start){\n    this->start = start;\n}\n\nDate Employee::getLast(){\n    return last;\n}\n\nvoid Employee::setLast(Date last){\n    this->last = last;\n}\n\n//main.cpp\n#include <iostream>\n#include \"classDefine.h\"\n\nusing namespace std;\n\nint main()\n{\n    Date d1;\n    Date d2(2010,2,10);\n    Employee e1(\"jack\",1500,d1,d2);\n    Employee e2(\"Tom\",2500,d1,d2);\n\n    Date t1 = e1.getStart();\n    Date t2 = e2.getStart();\n    Salary ss1 = e1.getSalary();\n    Salary ss2 = e2.getSalary();\n    double s1 = ss1.getMoney();\n    double s2 = ss2.getMoney();\n    float re1 = t1.returnSub(d2) * s1 ;\n    float re2 = t2.returnSub(d2) * s2;\n    cout << re1 << endl;\n    cout << re2 << endl;\n\n    return 0;\n}\n\n```\n\n***\n#### 测试\n![result](https://img-blog.csdnimg.cn/20200519204827283.png)\n\n***\n","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>1、创建一个Date类，能够表示一个日期，除了对日期进行输出、设置的一般成员方法以外，还需要一个方法，能够计算对象所保存日期与参数所给日期之间的差距，计算单位为“月”，同时重载Date类的赋值运算符。<br>2、创建一个Employee类，能够保存一个企业员工的基本信息，除了基本信息属性以外，还需要属性保存该员工的月工资、开始工作的日期和上一次发放工资的日期。<br>3、创建一个Salary类，可以用来表示一个工资金额，除基本成员变量和访问方法外，请为Salary类设计+、-运算符的重载函数；<br>4、上面类所有成员变量使用private修饰，为这些属性编写设置和读取方法，同时在设置方法中还需要对每个属性值的设置范围进行检查，如果超出取值范围，请为该值设置初始值并提示用户；请为两个类编写构造方法，初始化所有属性的值。<br>编写一个测试main方法，实例化两个员工对象，其月工资分别为1500和2500，工作日期都是2010年2月10日，请计算需要支付给这两个员工的工资。</p>\n<hr>\n<a id=\"more\"></a>\n\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>Date类（int year，int month，int day）：<br>默认构造函数<br>传入参数：无<br>输入：无<br>输出：无<br>功能：初始化：year = 2020， month = 5， day = 19</p>\n<p>带参数的构造函数<br>传入参数：类的所有成员变量<br>输入：无<br>输出：无<br>功能：完成类成员变量的自定义初始化</p>\n<p>拷贝构造函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>功能：完成类与类之间的浅拷贝</p>\n<p>析构函数<br>传入参数：无<br>输入：无<br>输出：无<br>功能：类对象超出作用于时，回收相应空间和执行收尾工作</p>\n<p>赋值运算符重载函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>返回值：类类型的引用<br>功能：为类类型的对象赋值</p>\n<p>获取类成员变量的方法（year，month，day）<br>传入参数：无<br>输入：无<br>输出：无<br>返回值：int</p>\n<p>设置类成员变量值的方法（year，month，day）<br>传入参数：要修改的参数值<br>输入：无<br>输出：无<br>返回值：void</p>\n<p>以日期标准格式输出当前对象所表示的日期的方法<br>传入参数：无<br>输入：无<br>输出：X年X月X日<br>返回值：void</p>\n<p>计算当前对象与所给参数的差值的方法（以月为单位）<br>传入参数：Date类类型<br>输入：无<br>输出：无<br>返回值：差值（float）</p>\n<p>Salary类（double money）：<br>默认构造函数<br>传入参数：无<br>输入：无<br>输出：无<br>功能：初始化 money = 0.0 </p>\n<p>带参数的构造函数<br>传入参数：类的所有成员变量<br>输入：无<br>输出：无<br>功能：money = 传入参数</p>\n<p>拷贝构造函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>功能：完成类与类之间的浅拷贝</p>\n<p>析构函数<br>传入参数：无<br>输入：无<br>输出：无<br>功能：类对象超出作用于时，回收相应空间和执行收尾工作</p>\n<p>赋值运算符重载函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>返回值：该类类型的引用<br>功能：为类类型的对象赋值</p>\n<p>加运算符重载函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>返回值：Salary&amp;<br>功能：this.money + 传入参数.money</p>\n<p>减运算符重载函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>返回值：Salary&amp;<br>功能：this.money - 传入参数.money</p>\n<p>获取类成员变量的方法（money）<br>传入参数：无<br>输入：无<br>输出：无<br>返回值：double</p>\n<p>设置类成员变量值的方法（money）<br>传入参数：要修改的参数值<br>输入：无<br>输出：无<br>返回值：void</p>\n<p>Employee类（int no，string name，Salary sal，Date sDate，Date lDate）：<br>Static int counts = 0<br>默认构造函数<br>传入参数：无<br>输入：无<br>输出：无<br>功能：初始化：no = ++counts， name = null，sal = 0.0，sDate，lDate  </p>\n<p>带参数的构造函数<br>传入参数：类的所有成员变量<br>输入：无<br>输出：无<br>功能：成员变量 = 传入参数</p>\n<p>拷贝构造函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>功能：完成类与类之间的浅拷贝</p>\n<p>析构函数<br>传入参数：无<br>输入：无<br>输出：无<br>功能：类对象超出作用于时，回收相应空间和执行收尾工作</p>\n<p>赋值运算符重载函数<br>传入参数：该类类型的const引用<br>输入：无<br>输出：无<br>返回值：该类类型的引用<br>功能：为类类型的对象赋值</p>\n<p>获取类成员变量的方法（no，name，money，sDate，lDate）<br>传入参数：无<br>输入：无<br>输出：无<br>返回值：int，string，double，sDate，IDate</p>\n<p>设置类成员变量值的方法（no，name，money，sDate，lDate）<br>传入参数：要修改的参数值<br>输入：无<br>输出：无<br>返回值：void</p>\n<hr>\n<h3 id=\"类图设计\"><a href=\"#类图设计\" class=\"headerlink\" title=\"类图设计\"></a>类图设计</h3><p><img src=\"https://img-blog.csdnimg.cn/20200519204045931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"Date\">)<img src=\"https://img-blog.csdnimg.cn/20200519204108421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"Salary\">)<img src=\"https://img-blog.csdnimg.cn/20200519204243602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"Employee\"></p>\n<hr>\n<h3 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//class.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Date</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> year;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> month;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> day;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    Date();</span><br><span class=\"line\">    Date(<span class=\"keyword\">int</span> year,<span class=\"keyword\">int</span> month,<span class=\"keyword\">int</span> day);</span><br><span class=\"line\">    Date(<span class=\"keyword\">const</span> Date&amp; x);</span><br><span class=\"line\">    ~Date();</span><br><span class=\"line\">    Date&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> Date&amp; x);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getYear</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setYear</span><span class=\"params\">(<span class=\"keyword\">int</span> year)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getMonth</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setMonth</span><span class=\"params\">(<span class=\"keyword\">int</span> month)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getDay</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setDay</span><span class=\"params\">(<span class=\"keyword\">int</span> day)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">pritDate</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">float</span> <span class=\"title\">returnSub</span><span class=\"params\">(Date s)</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Salary</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> money;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    Salary();</span><br><span class=\"line\">    Salary(<span class=\"keyword\">double</span> money);</span><br><span class=\"line\">    Salary(<span class=\"keyword\">const</span> Salary&amp; x);</span><br><span class=\"line\">    ~Salary();</span><br><span class=\"line\">    Salary&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> Salary&amp; x);</span><br><span class=\"line\">    Salary&amp; <span class=\"keyword\">operator</span>+(<span class=\"keyword\">const</span> Salary&amp; x);</span><br><span class=\"line\">    Salary&amp; <span class=\"keyword\">operator</span>-(<span class=\"keyword\">const</span> Salary&amp; x);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getMoney</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setMoney</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Employee</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> counts;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> no;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> name;</span><br><span class=\"line\">    Salary sal;</span><br><span class=\"line\">    Date start;</span><br><span class=\"line\">    Date last;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    Employee();</span><br><span class=\"line\">    Employee(<span class=\"built_in\">string</span> name,Salary sal,Date start,Date last);</span><br><span class=\"line\">    Employee(<span class=\"keyword\">const</span> Employee&amp; x);</span><br><span class=\"line\">    ~Employee();</span><br><span class=\"line\">    Employee&amp; <span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> Employee&amp; x);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getNo</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">getName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(<span class=\"built_in\">string</span> name)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Salary <span class=\"title\">getSalary</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setSalary</span><span class=\"params\">(Salary sal)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Date <span class=\"title\">getStart</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setStart</span><span class=\"params\">(Date start)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Date <span class=\"title\">getLast</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setLast</span><span class=\"params\">(Date last)</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//class.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"classDefine.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Date::Date()&#123;</span><br><span class=\"line\">    year = <span class=\"number\">2020</span>;</span><br><span class=\"line\">    month = <span class=\"number\">5</span>;</span><br><span class=\"line\">    day = <span class=\"number\">19</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date::Date(<span class=\"keyword\">int</span> year,<span class=\"keyword\">int</span> month,<span class=\"keyword\">int</span> day)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;year = year;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;month = month;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;day = day;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date::Date(<span class=\"keyword\">const</span> Date&amp; x)&#123;</span><br><span class=\"line\">    year = x.year;</span><br><span class=\"line\">    month = x.month;</span><br><span class=\"line\">    day = x.day;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date::~Date()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Date&amp; Date::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> Date&amp; x)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> == &amp;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    year = x.year;</span><br><span class=\"line\">    month = x.month;</span><br><span class=\"line\">    day = x.day;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> Date:: getYear()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> year;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Date::setYear</span><span class=\"params\">(<span class=\"keyword\">int</span> year)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(year &lt;= <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"data is illegal!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;year = <span class=\"number\">2020</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;year = year;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Date::getMonth</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> month;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Date::setMonth</span><span class=\"params\">(<span class=\"keyword\">int</span> month)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(month &lt;= <span class=\"number\">0</span> || month &gt;<span class=\"number\">12</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"data is illegal!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;month = <span class=\"number\">5</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;month = month;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Date::getDay</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> day;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Date::setDay</span><span class=\"params\">(<span class=\"keyword\">int</span> day)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(day &lt;= <span class=\"number\">0</span> || day &gt; <span class=\"number\">31</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"data is illegal!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;day = <span class=\"number\">19</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;day = day;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Date::pritDate</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; year &lt;&lt; <span class=\"string\">\"-\"</span> &lt;&lt; month &lt;&lt; <span class=\"string\">\"-\"</span> &lt;&lt; day &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">float</span> <span class=\"title\">Date::returnSub</span><span class=\"params\">(Date s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ((year-s.year)*<span class=\"number\">12</span> + ((month+day/<span class=\"number\">30</span>) - (s.month +s.day/<span class=\"number\">30</span>)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary::Salary()&#123;</span><br><span class=\"line\">    money = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary::Salary(<span class=\"keyword\">double</span> money)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;money = money;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary::Salary(<span class=\"keyword\">const</span> Salary&amp; x)&#123;</span><br><span class=\"line\">    money = x.money;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary::~Salary()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary&amp; Salary::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> Salary&amp; x)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> == &amp;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    money = x.money;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary&amp; Salary::<span class=\"keyword\">operator</span>+(<span class=\"keyword\">const</span> Salary&amp; x)&#123;</span><br><span class=\"line\">    money += x.money;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary&amp; Salary::<span class=\"keyword\">operator</span>-(<span class=\"keyword\">const</span> Salary&amp; x)&#123;</span><br><span class=\"line\">    money -= x.money;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">Salary::getMoney</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Salary::setMoney</span><span class=\"params\">(<span class=\"keyword\">double</span> money)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(money &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"data is illegal!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;money = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;money = money;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> Employee::counts = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Employee::Employee()&#123;</span><br><span class=\"line\">    no = ++counts;</span><br><span class=\"line\">    name = <span class=\"string\">\"null\"</span>;</span><br><span class=\"line\">    sal = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Employee::Employee(<span class=\"built_in\">string</span> name,Salary sal,Date start,Date last)&#123;</span><br><span class=\"line\">    no = ++counts;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;sal = sal;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;start = start;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;last = last;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Employee::Employee(<span class=\"keyword\">const</span> Employee&amp; x)&#123;</span><br><span class=\"line\">    no = ++counts;</span><br><span class=\"line\">    name = x.name;</span><br><span class=\"line\">    sal = x.sal;</span><br><span class=\"line\">    start = x.start;</span><br><span class=\"line\">    last = x.last;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Employee::~Employee()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Employee&amp; Employee::<span class=\"keyword\">operator</span>=(<span class=\"keyword\">const</span> Employee&amp; x)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span> == &amp;x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    no = ++counts;</span><br><span class=\"line\">    name = x.name;</span><br><span class=\"line\">    sal = x.sal;</span><br><span class=\"line\">    start = x.start;</span><br><span class=\"line\">    last = x.last;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Employee::getNo</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> no;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">Employee::getName</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Employee::setName</span><span class=\"params\">(<span class=\"built_in\">string</span> name)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Salary Employee:: getSalary()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sal;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Employee::setSalary</span><span class=\"params\">(Salary sal)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> temp = sal.getMoney();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(temp &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"date is illegal!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;sal = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">this</span>-&gt;sal = sal;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Date Employee:: getStart()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Employee::setStart</span><span class=\"params\">(Date start)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;start = start;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Date <span class=\"title\">Employee::getLast</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> last;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Employee::setLast</span><span class=\"params\">(Date last)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;last = last;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"classDefine.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Date d1;</span><br><span class=\"line\">    <span class=\"function\">Date <span class=\"title\">d2</span><span class=\"params\">(<span class=\"number\">2010</span>,<span class=\"number\">2</span>,<span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Employee <span class=\"title\">e1</span><span class=\"params\">(<span class=\"string\">\"jack\"</span>,<span class=\"number\">1500</span>,d1,d2)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">Employee <span class=\"title\">e2</span><span class=\"params\">(<span class=\"string\">\"Tom\"</span>,<span class=\"number\">2500</span>,d1,d2)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Date t1 = e1.getStart();</span><br><span class=\"line\">    Date t2 = e2.getStart();</span><br><span class=\"line\">    Salary ss1 = e1.getSalary();</span><br><span class=\"line\">    Salary ss2 = e2.getSalary();</span><br><span class=\"line\">    <span class=\"keyword\">double</span> s1 = ss1.getMoney();</span><br><span class=\"line\">    <span class=\"keyword\">double</span> s2 = ss2.getMoney();</span><br><span class=\"line\">    <span class=\"keyword\">float</span> re1 = t1.returnSub(d2) * s1 ;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> re2 = t2.returnSub(d2) * s2;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; re1 &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; re2 &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p><img src=\"https://img-blog.csdnimg.cn/20200519204827283.png\" alt=\"result\"></p>\n<hr>\n","slug":"建立工资系统（1）-员工与工资","updated":"2020-05-19T12:52:14.331Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/05/19/%E5%BB%BA%E7%AB%8B%E5%B7%A5%E8%B5%84%E7%B3%BB%E7%BB%9F%EF%BC%881%EF%BC%89-%E5%91%98%E5%B7%A5%E4%B8%8E%E5%B7%A5%E8%B5%84/","excerpt":"问题描述1、创建一个Date类，能够表示一个日期，除了对日期进行输出、设置的一般成员方法以外，还需要一个方法，能够计算对象所保存日期与参数所给日期之间的差距，计算单位为“月”，同时重载Date类的赋值运算符。2、创建一个Employee类，能够保存一个企业员工的基本信息，除了基本信息属性以外，还需要属性保存该员工的月工资、开始工作的日期和上一次发放工资的日期。3、创建一个Salary类，可以用来表示一个工资金额，除基本成员变量和访问方法外，请为Salary类设计+、-运算符的重载函数；4、上面类所有成员变量使用private修饰，为这些属性编写设置和读取方法，同时在设置方法中还需要对每个属性值的设置范围进行检查，如果超出取值范围，请为该值设置初始值并提示用户；请为两个类编写构造方法，初始化所有属性的值。编写一个测试main方法，实例化两个员工对象，其月工资分别为1500和2500，工作日期都是2010年2月10日，请计算需要支付给这两个员工的工资。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"类","slug":"类","permalink":"https://mt-procode.github.io/tags/%E7%B1%BB/"}]},{"title":"ObjectCounter类的实现","date":"2020-05-17T09:32:04.000Z","path":"2020/05/17/ObjectCounter类的实现/","text":"问题描述 UML图 源代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071//main.cpp#include &lt;iostream&gt;#include \"ObjectCounter.h\"using namespace std;int main()&#123; ObjectCounter a; cout &lt;&lt; \"a: \" &lt;&lt; a.getCounts() &lt;&lt; endl; cout &lt;&lt; \"no: \" &lt;&lt; a.getID() &lt;&lt; endl; cout &lt;&lt;\"**************************\" &lt;&lt;endl; ObjectCounter b; cout &lt;&lt; \"b: \" &lt;&lt; b.getCounts() &lt;&lt; endl; cout &lt;&lt; \"no: \" &lt;&lt; b.getID() &lt;&lt; endl; cout &lt;&lt;\"**************************\" &lt;&lt;endl; ObjectCounter c; cout &lt;&lt; \"c: \" &lt;&lt; c.getCounts() &lt;&lt; endl; cout &lt;&lt; \"no: \" &lt;&lt; c.getID() &lt;&lt; endl; cout &lt;&lt;\"**************************\" &lt;&lt;endl; ObjectCounter d; cout &lt;&lt; \"d: \" &lt;&lt; d.getCounts() &lt;&lt; endl; cout &lt;&lt; \"no: \" &lt;&lt; d.getID() &lt;&lt; endl; cout &lt;&lt;\"**************************\" &lt;&lt;endl; ObjectCounter e; cout &lt;&lt; \"e: \" &lt;&lt; e.getCounts() &lt;&lt; endl; cout &lt;&lt; \"no: \" &lt;&lt; e.getID() &lt;&lt; endl; return 0;&#125;//ObjectCounter.husing namespace std;class ObjectCounter&#123; static int counts ; int id;public: ObjectCounter(); int getID(); int static getCounts(); ~ObjectCounter();&#125;;//ObjectCounter.cpp#include &lt;iostream&gt;#include \"ObjectCounter.h\"using namespace std;int ObjectCounter::counts = 0;ObjectCounter::ObjectCounter()&#123; id = ++counts;&#125;;ObjectCounter::~ObjectCounter()&#123; counts--;&#125;int ObjectCounter::getID()&#123; return id;&#125;int ObjectCounter::getCounts()&#123; return counts;&#125; 测试 输入： 输出：","raw":"---\ntitle: ObjectCounter类的实现\ndate: 2020-05-17 17:32:04\ncopyright: true\n\ntags: [C++,算法]\ncategories: [C++]\n---\n\n#### 问题描述\n![issue](https://img-blog.csdnimg.cn/20200517172556828.png)\n***\n\n<!-- more -->\n\n\n\n#### UML图\n\n![UML](https://img-blog.csdnimg.cn/20200517172742741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n\n#### 源代码\n\n```cpp\n//main.cpp\n#include <iostream>\n#include \"ObjectCounter.h\"\n\nusing namespace std;\n\nint main()\n{\n    ObjectCounter a;\n    cout << \"a: \" << a.getCounts() << endl;\n    cout << \"no: \" << a.getID() << endl;\n    cout <<\"**************************\" <<endl;\n    ObjectCounter b;\n    cout << \"b: \" << b.getCounts() << endl;\n    cout << \"no: \" << b.getID() << endl;\n    cout <<\"**************************\" <<endl;\n    ObjectCounter c;\n    cout << \"c: \" << c.getCounts() << endl;\n    cout << \"no: \" << c.getID() << endl;\n    cout <<\"**************************\" <<endl;\n    ObjectCounter d;\n    cout << \"d: \" << d.getCounts() << endl;\n    cout << \"no: \" << d.getID() << endl;\n    cout <<\"**************************\" <<endl;\n    ObjectCounter e;\n    cout << \"e: \" << e.getCounts() << endl;\n    cout << \"no: \" << e.getID() << endl;\n\n    return 0;\n}\n\n\n//ObjectCounter.h\nusing namespace std;\n\n\nclass ObjectCounter{\n    static int counts ;\n    int id;\n\npublic:\n    ObjectCounter();\n    int getID();\n    int static getCounts();\n    ~ObjectCounter();\n};\n\n\n//ObjectCounter.cpp\n#include <iostream>\n#include \"ObjectCounter.h\"\n\nusing namespace std;\n\nint ObjectCounter::counts = 0;\n\nObjectCounter::ObjectCounter(){\n    id = ++counts;\n};\n\nObjectCounter::~ObjectCounter(){\n    counts--;\n}\n\nint ObjectCounter::getID(){\n    return id;\n}\n\nint ObjectCounter::getCounts(){\n    return counts;\n}\n```\n\n***\n\n#### 测试\n<br>\n\n*输入：*\n![测试用例](https://img-blog.csdnimg.cn/20200517172906279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n*输出：*\n\n![result](https://img-blog.csdnimg.cn/20200517173005709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n***\n\n","content":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h4><p><img src=\"https://img-blog.csdnimg.cn/20200517172556828.png\" alt=\"issue\"></p>\n<hr>\n<a id=\"more\"></a>\n\n\n\n<h4 id=\"UML图\"><a href=\"#UML图\" class=\"headerlink\" title=\"UML图\"></a>UML图</h4><p><img src=\"https://img-blog.csdnimg.cn/20200517172742741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"UML\"></p>\n<hr>\n<h4 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"ObjectCounter.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ObjectCounter a;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"a: \"</span> &lt;&lt; a.getCounts() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no: \"</span> &lt;&lt; a.getID() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"**************************\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ObjectCounter b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"b: \"</span> &lt;&lt; b.getCounts() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no: \"</span> &lt;&lt; b.getID() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"**************************\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ObjectCounter c;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"c: \"</span> &lt;&lt; c.getCounts() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no: \"</span> &lt;&lt; c.getID() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"**************************\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ObjectCounter d;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"d: \"</span> &lt;&lt; d.getCounts() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no: \"</span> &lt;&lt; d.getID() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"**************************\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    ObjectCounter e;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"e: \"</span> &lt;&lt; e.getCounts() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no: \"</span> &lt;&lt; e.getID() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//ObjectCounter.h</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ObjectCounter</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> counts ;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> id;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    ObjectCounter();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getID</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"keyword\">static</span> <span class=\"title\">getCounts</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    ~ObjectCounter();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//ObjectCounter.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"ObjectCounter.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> ObjectCounter::counts = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">ObjectCounter::ObjectCounter()&#123;</span><br><span class=\"line\">    id = ++counts;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">ObjectCounter::~ObjectCounter()&#123;</span><br><span class=\"line\">    counts--;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">ObjectCounter::getID</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">ObjectCounter::getCounts</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> counts;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><br>\n\n<p><em>输入：</em><br><img src=\"https://img-blog.csdnimg.cn/20200517172906279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"测试用例\"></p>\n<p><em>输出：</em></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200517173005709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"result\"></p>\n<hr>\n","slug":"ObjectCounter类的实现","updated":"2020-05-17T09:33:41.040Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/05/17/ObjectCounter%E7%B1%BB%E7%9A%84%E5%AE%9E%E7%8E%B0/","excerpt":"问题描述","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"便利店小程序Plus","date":"2020-05-10T07:28:18.000Z","path":"2020/05/10/便利店小程序Plus/","text":"问题描述版本一请参见 问题分析采用Goods（货物类）、Basket（购物车类）和Store（商店类）完成设计各类的类图如下：各类之间的关系如下： Basket -&gt;(依赖） Goods 、Store -&gt;（依赖） Basket 流程图 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211//fun.h#include &lt;vector&gt;using namespace std;class Goods&#123; char* name; float price;public: Goods(); Goods(char* name,float price); char* getName(); void setName(char* name); float getPrice(); void setPrice(float price);&#125;;class Basket&#123; vector&lt;Goods&gt; goodsList;public: void addGoods(Goods item); void cleanBasket(); float getTotalPrice(); bool isEmpty(); vector&lt;Goods&gt; getGoodsList();&#125;;class Store&#123; Goods goods; Basket basket;public: char* msg_Header = \"*************************************************\\n Xiao Fang Conveniences Store\\n*************************************************\\n\"; char* msg_Footer = \"-------------------------------------------------\\n\"; void start(); void ending(); void checkout(); void addGoods(int item); void displayMenu(); void invalidInput();&#125;;//fun.cpp#include \"fun.h\"#include &lt;iostream&gt;#include &lt;vector&gt;using namespace std;Goods::Goods()&#123;&#125;;Goods::Goods(char* name,float price)&#123; this-&gt;name = name; this-&gt;price = price;&#125;char* Goods::getName()&#123; return name;&#125;void Goods::setName(char* name)&#123; this-&gt;name = name;&#125;float Goods::getPrice()&#123; return price;&#125;void Goods::setPrice(float price)&#123; this-&gt;price = price;&#125;void Basket::addGoods(Goods item)&#123; goodsList.push_back(item);&#125;void Basket::cleanBasket()&#123; vector&lt;Goods&gt; temp; goodsList = temp;&#125;float Basket::getTotalPrice()&#123; vector&lt;Goods&gt;::iterator it; float sum = 0.0; for(it = goodsList.begin(); it != goodsList.end();it++)&#123; Goods temp = *it; sum += temp.getPrice(); &#125; return sum;&#125;bool Basket::isEmpty()&#123; vector&lt;Goods&gt;::iterator itb,ite; itb = goodsList.begin(); ite = goodsList.end(); if(itb == ite) return true; else return false;&#125;vector&lt;Goods&gt; Basket::getGoodsList()&#123; return goodsList;&#125;void Store::start()&#123; cout &lt;&lt; \"Welcome Xiao Fang's Convince!\" &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; \"Please Press Any To Enter The Store: \"; char ch = getchar(); system(\"cls\");&#125;void Store::ending()&#123; system(\"cls\"); cout &lt;&lt; \"Bye Bye!\" &lt;&lt; endl &lt;&lt;endl; cout &lt;&lt; \"Welcome to here next!\" &lt;&lt;endl;&#125;void Store::checkout()&#123; system(\"cls\"); cout &lt;&lt; \"=================== Check out ===================\" &lt;&lt; endl &lt;&lt; endl; vector&lt;Goods&gt;::iterator it; vector&lt;Goods&gt; t = basket.getGoodsList(); for(it = t.begin(); it != t.end();it++)&#123; Goods temp = *it; cout &lt;&lt; \"\\t\" &lt;&lt; temp.getName() &lt;&lt; \"\\t$ \" &lt;&lt; temp.getPrice() &lt;&lt; endl; &#125; cout &lt;&lt;\"================================================\" &lt;&lt; endl; cout &lt;&lt;\"TOTAL: \"&lt;&lt; basket.getTotalPrice() &lt;&lt; endl; cout &lt;&lt; \"Thanks!\" &lt;&lt; endl; system(\"pause\"); system(\"cls\");&#125;void Store::addGoods(int item)&#123; system(\"cls\"); Goods temp(\"Bread\",1.0); switch(item)&#123; case 1:break; case 2:temp.setName(\"Cocacola\");break; case 3:temp.setName(\"Beer\");break; case 4:temp.setName(\"Chocolate\");break; case 5:temp.setName(\"Pencil\");temp.setPrice(0.5);break; case 6:temp.setName(\"Notebook\");temp.setPrice(3.0);break; default:break; &#125; basket.addGoods(temp);&#125;void Store::displayMenu()&#123; cout &lt;&lt; msg_Header &lt;&lt; endl; cout &lt;&lt; \" (1) Bread 1.0\" &lt;&lt; endl; cout &lt;&lt; \" (2) Cocacola 1.0\" &lt;&lt; endl; cout &lt;&lt; \" (3) Beer 1.0\" &lt;&lt; endl; cout &lt;&lt; \" (4) Chocolate 1.0\" &lt;&lt; endl; cout &lt;&lt; \" (5) Pencil 0.5\" &lt;&lt; endl; cout &lt;&lt; \" (6) Notebook 3.0\" &lt;&lt; endl&lt;&lt;endl; cout &lt;&lt; \" (9) CHECK OUT \" &lt;&lt; endl; cout &lt;&lt; \" (0) EXIT \" &lt;&lt; endl; cout &lt;&lt; msg_Footer ; cout &lt;&lt; \" PLEASE SELECT A NUMBER: \";&#125;void Store::invalidInput()&#123; system(\"cls\"); cout &lt;&lt;\"Invalid Input,Please Try Again!\" &lt;&lt; endl;&#125;//main.cpp#include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;string&gt;#include \"fun.h\"using namespace std;int main()&#123; system(\"title Xiao Fang Conveniences Store \"); system(\"mode con cols=50 lines=17\"); system(\"color F5\"); Store s; s.start(); bool flag1 = true; do&#123; bool flag2 = true; bool flag3 = true; char ch; s.displayMenu(); string str = \"You Have Selected \"; cin &gt;&gt; ch; switch(ch)&#123; case '1':str += \"[Bread], $1.0\";s.addGoods(1);break; case '2':str += \"[Cocacola], $1.0\";s.addGoods(2);break; case '3':str += \"[Beer], &amp;1.0\";s.addGoods(3);break; case '4':str += \"[Chocolate], &amp;1.0\";s.addGoods(4);break; case '5':str += \"[Pencil], $0.5\";s.addGoods(5);break; case '6':str += \"[Notebook], $3.0\";s.addGoods(6);break; case '9':s.checkout();flag2 = false;break; case '0':s.ending();flag1 = false;break; default:s.invalidInput();flag3 = false;break; &#125; if(flag1 &amp;&amp; flag2 &amp;&amp; flag3) cout &lt;&lt; str &lt;&lt; endl; &#125;while(flag1); return 0;&#125; 测试开始功能测试： 菜单功能测试：购买功能测试（只测试一种）：结算功能测试：错误输入功能测试： 退出功能测试：","raw":"---\ntitle: 便利店小程序Plus\ndate: 2020-05-10 15:28:18\ncopyright: true\ntags: [C++,算法]\ncategories: [C++]\n---\n\n### 问题描述\n![problem](https://img-blog.csdnimg.cn/20200510151432727.png)\n[版本一请参见](https://blog.csdn.net/qq_43745685/article/details/105681121)\n\n<!-- more -->\n\n***\n### 问题分析\n采用Goods（货物类）、Basket（购物车类）和Store（商店类）完成设计\n各类的类图如下：\n![Goods](https://img-blog.csdnimg.cn/20200510151551202.png)\n![Basket](https://img-blog.csdnimg.cn/20200510151602654.png)\n![Store](https://img-blog.csdnimg.cn/20200510151617135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n各类之间的关系如下：\n![relation](https://img-blog.csdnimg.cn/20200510151724385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\nBasket ->(依赖） Goods 、Store ->（依赖） Basket\n\n***\n\n### 流程图\n![process](https://img-blog.csdnimg.cn/2020051015181116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n\n### 源代码\n\n```cpp\n//fun.h\n#include <vector>\n\nusing namespace std;\n\nclass Goods{\n    char* name;\n    float price;\npublic:\n    Goods();\n    Goods(char* name,float price);\n    char* getName();\n    void setName(char* name);\n    float getPrice();\n    void setPrice(float price);\n};\n\nclass Basket{\n    vector<Goods> goodsList;\npublic:\n    void addGoods(Goods item);\n    void cleanBasket();\n    float getTotalPrice();\n    bool isEmpty();\n    vector<Goods> getGoodsList();\n};\n\n\nclass Store{\n    Goods goods;\n    Basket basket;\npublic:\n    char* msg_Header = \"*************************************************\\n        Xiao Fang  Conveniences Store\\n*************************************************\\n\";\n    char* msg_Footer = \"-------------------------------------------------\\n\";\n    void start();\n    void ending();\n    void checkout();\n    void addGoods(int item);\n    void displayMenu();\n    void invalidInput();\n};\n\n//fun.cpp\n#include \"fun.h\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nGoods::Goods(){};\n\nGoods::Goods(char* name,float price){\n    this->name = name;\n    this->price = price;\n}\n\nchar* Goods::getName(){\n    return name;\n}\n\nvoid Goods::setName(char* name){\n    this->name = name;\n}\n\nfloat Goods::getPrice(){\n    return price;\n}\n\nvoid Goods::setPrice(float price){\n    this->price = price;\n}\n\nvoid Basket::addGoods(Goods item){\n    goodsList.push_back(item);\n}\n\nvoid Basket::cleanBasket(){\n    vector<Goods> temp;\n    goodsList = temp;\n}\n\nfloat Basket::getTotalPrice(){\n    vector<Goods>::iterator it;\n    float sum = 0.0;\n    for(it = goodsList.begin(); it != goodsList.end();it++){\n        Goods temp = *it;\n        sum += temp.getPrice();\n    }\n\n    return sum;\n}\n\nbool Basket::isEmpty(){\n    vector<Goods>::iterator itb,ite;\n    itb = goodsList.begin();\n    ite = goodsList.end();\n    if(itb == ite)\n        return true;\n    else\n        return false;\n}\n\nvector<Goods> Basket::getGoodsList(){\n    return goodsList;\n}\n\nvoid Store::start(){\n    cout << \"Welcome Xiao Fang's Convince!\" << endl << endl;\n    cout << \"Please Press Any To Enter The Store:  \";\n    char ch = getchar();\n    system(\"cls\");\n}\n\nvoid Store::ending(){\n    system(\"cls\");\n    cout << \"Bye Bye!\" << endl <<endl;\n    cout << \"Welcome to here next!\" <<endl;\n}\n\nvoid Store::checkout(){\n    system(\"cls\");\n    cout << \"=================== Check out ===================\" << endl << endl;\n    vector<Goods>::iterator it;\n    vector<Goods> t = basket.getGoodsList();\n    for(it = t.begin(); it != t.end();it++){\n        Goods temp = *it;\n        cout << \"\\t\" << temp.getName() << \"\\t$ \" << temp.getPrice() << endl;\n    }\n    cout <<\"================================================\" << endl;\n    cout <<\"TOTAL: \"<< basket.getTotalPrice() << endl;\n    cout << \"Thanks!\" << endl;\n    system(\"pause\");\n    system(\"cls\");\n}\n\nvoid Store::addGoods(int item){\n    system(\"cls\");\n    Goods temp(\"Bread\",1.0);\n    switch(item){\n        case 1:break;\n        case 2:temp.setName(\"Cocacola\");break;\n        case 3:temp.setName(\"Beer\");break;\n        case 4:temp.setName(\"Chocolate\");break;\n        case 5:temp.setName(\"Pencil\");temp.setPrice(0.5);break;\n        case 6:temp.setName(\"Notebook\");temp.setPrice(3.0);break;\n        default:break;\n    }\n    basket.addGoods(temp);\n}\n\nvoid Store::displayMenu(){\n\n    cout << msg_Header << endl;\n    cout << \" (1) Bread                            1.0\" << endl;\n    cout << \" (2) Cocacola                         1.0\" << endl;\n    cout << \" (3) Beer                             1.0\" << endl;\n    cout << \" (4) Chocolate                        1.0\" << endl;\n    cout << \" (5) Pencil                           0.5\" << endl;\n    cout << \" (6) Notebook                         3.0\" << endl<<endl;\n    cout << \" (9) CHECK OUT \" << endl;\n    cout << \" (0) EXIT \" << endl;\n    cout << msg_Footer ;\n    cout << \" PLEASE SELECT A NUMBER: \";\n}\n\nvoid Store::invalidInput(){\n    system(\"cls\");\n    cout <<\"Invalid Input,Please Try Again!\" << endl;\n}\n\n//main.cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include \"fun.h\"\n\nusing namespace std;\n\nint main()\n{\n    system(\"title Xiao Fang  Conveniences Store \");\n    system(\"mode con cols=50 lines=17\");\n    system(\"color F5\");\n    Store s;\n    s.start();\n    bool flag1 = true;\n    do{\n    bool flag2 = true;\n    bool flag3 = true;\n    char ch;\n    s.displayMenu();\n    string str = \"You Have Selected \";\n    cin >> ch;\n    switch(ch){\n        case '1':str += \"[Bread], $1.0\";s.addGoods(1);break;\n        case '2':str += \"[Cocacola], $1.0\";s.addGoods(2);break;\n        case '3':str += \"[Beer], &1.0\";s.addGoods(3);break;\n        case '4':str += \"[Chocolate], &1.0\";s.addGoods(4);break;\n        case '5':str += \"[Pencil], $0.5\";s.addGoods(5);break;\n        case '6':str += \"[Notebook], $3.0\";s.addGoods(6);break;\n        case '9':s.checkout();flag2 = false;break;\n        case '0':s.ending();flag1 = false;break;\n        default:s.invalidInput();flag3 = false;break;\n    }\n    if(flag1 && flag2 && flag3)\n    cout << str << endl;\n    }while(flag1);\n\n\n    return 0;\n}\n\n```\n\n***\n#### 测试\n开始功能测试：\n![start](https://img-blog.csdnimg.cn/20200510152128562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n菜单功能测试：\n![menu](https://img-blog.csdnimg.cn/2020051015214118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n购买功能测试（只测试一种）：\n![buy](https://img-blog.csdnimg.cn/20200510152152614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n结算功能测试：\n![checkout](https://img-blog.csdnimg.cn/20200510152206939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n错误输入功能测试：\n\n![invalid](https://img-blog.csdnimg.cn/202005101522211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n退出功能测试：\n![quit](https://img-blog.csdnimg.cn/20200510152244410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p><img src=\"https://img-blog.csdnimg.cn/20200510151432727.png\" alt=\"problem\"><br><a href=\"https://blog.csdn.net/qq_43745685/article/details/105681121\" target=\"_blank\" rel=\"noopener\">版本一请参见</a></p>\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p>采用Goods（货物类）、Basket（购物车类）和Store（商店类）完成设计<br>各类的类图如下：<br><img src=\"https://img-blog.csdnimg.cn/20200510151551202.png\" alt=\"Goods\"><br><img src=\"https://img-blog.csdnimg.cn/20200510151602654.png\" alt=\"Basket\"><br><img src=\"https://img-blog.csdnimg.cn/20200510151617135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"Store\"><br>各类之间的关系如下：<br><img src=\"https://img-blog.csdnimg.cn/20200510151724385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"relation\"></p>\n<p>Basket -&gt;(依赖） Goods 、Store -&gt;（依赖） Basket</p>\n<hr>\n<h3 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h3><p><img src=\"https://img-blog.csdnimg.cn/2020051015181116.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"process\"></p>\n<hr>\n<h3 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//fun.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Goods</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span>* name;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> price;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    Goods();</span><br><span class=\"line\">    Goods(<span class=\"keyword\">char</span>* name,<span class=\"keyword\">float</span> price);</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">char</span>* <span class=\"title\">getName</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(<span class=\"keyword\">char</span>* name)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">float</span> <span class=\"title\">getPrice</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setPrice</span><span class=\"params\">(<span class=\"keyword\">float</span> price)</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Basket</span>&#123;</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;Goods&gt; goodsList;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addGoods</span><span class=\"params\">(Goods item)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cleanBasket</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">float</span> <span class=\"title\">getTotalPrice</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">isEmpty</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">vector</span>&lt;Goods&gt; <span class=\"title\">getGoodsList</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Store</span>&#123;</span></span><br><span class=\"line\">    Goods goods;</span><br><span class=\"line\">    Basket basket;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"keyword\">char</span>* msg_Header = <span class=\"string\">\"*************************************************\\n        Xiao Fang  Conveniences Store\\n*************************************************\\n\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span>* msg_Footer = <span class=\"string\">\"-------------------------------------------------\\n\"</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ending</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">checkout</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addGoods</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">displayMenu</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">invalidInput</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//fun.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"fun.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Goods::Goods()&#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">Goods::Goods(<span class=\"keyword\">char</span>* name,<span class=\"keyword\">float</span> price)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;price = price;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span>* <span class=\"title\">Goods::getName</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Goods::setName</span><span class=\"params\">(<span class=\"keyword\">char</span>* name)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">float</span> <span class=\"title\">Goods::getPrice</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> price;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Goods::setPrice</span><span class=\"params\">(<span class=\"keyword\">float</span> price)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;price = price;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Basket::addGoods</span><span class=\"params\">(Goods item)</span></span>&#123;</span><br><span class=\"line\">    goodsList.push_back(item);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Basket::cleanBasket</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;Goods&gt; temp;</span><br><span class=\"line\">    goodsList = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">float</span> <span class=\"title\">Basket::getTotalPrice</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;Goods&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> sum = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = goodsList.begin(); it != goodsList.end();it++)&#123;</span><br><span class=\"line\">        Goods temp = *it;</span><br><span class=\"line\">        sum += temp.getPrice();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Basket::isEmpty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;Goods&gt;::iterator itb,ite;</span><br><span class=\"line\">    itb = goodsList.begin();</span><br><span class=\"line\">    ite = goodsList.end();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(itb == ite)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span>&lt;Goods&gt; <span class=\"title\">Basket::getGoodsList</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> goodsList;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Store::start</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Welcome Xiao Fang's Convince!\"</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Press Any To Enter The Store:  \"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch = getchar();</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Store::ending</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Bye Bye!\"</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Welcome to here next!\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Store::checkout</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"=================== Check out ===================\"</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;Goods&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;Goods&gt; t = basket.getGoodsList();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = t.begin(); it != t.end();it++)&#123;</span><br><span class=\"line\">        Goods temp = *it;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t\"</span> &lt;&lt; temp.getName() &lt;&lt; <span class=\"string\">\"\\t$ \"</span> &lt;&lt; temp.getPrice() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"================================================\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"TOTAL: \"</span>&lt;&lt; basket.getTotalPrice() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Thanks!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Store::addGoods</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"function\">Goods <span class=\"title\">temp</span><span class=\"params\">(<span class=\"string\">\"Bread\"</span>,<span class=\"number\">1.0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(item)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:temp.setName(<span class=\"string\">\"Cocacola\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:temp.setName(<span class=\"string\">\"Beer\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">4</span>:temp.setName(<span class=\"string\">\"Chocolate\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">5</span>:temp.setName(<span class=\"string\">\"Pencil\"</span>);temp.setPrice(<span class=\"number\">0.5</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">6</span>:temp.setName(<span class=\"string\">\"Notebook\"</span>);temp.setPrice(<span class=\"number\">3.0</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    basket.addGoods(temp);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Store::displayMenu</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; msg_Header &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (1) Bread                            1.0\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (2) Cocacola                         1.0\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (3) Beer                             1.0\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (4) Chocolate                        1.0\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (5) Pencil                           0.5\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (6) Notebook                         3.0\"</span> &lt;&lt; <span class=\"built_in\">endl</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (9) CHECK OUT \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" (0) EXIT \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; msg_Footer ;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\" PLEASE SELECT A NUMBER: \"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Store::invalidInput</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"Invalid Input,Please Try Again!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"fun.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"title Xiao Fang  Conveniences Store \"</span>);</span><br><span class=\"line\">    system(<span class=\"string\">\"mode con cols=50 lines=17\"</span>);</span><br><span class=\"line\">    system(<span class=\"string\">\"color F5\"</span>);</span><br><span class=\"line\">    Store s;</span><br><span class=\"line\">    s.start();</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag1 = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag2 = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> flag3 = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">    s.displayMenu();</span><br><span class=\"line\">    <span class=\"built_in\">string</span> str = <span class=\"string\">\"You Have Selected \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; ch;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(ch)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'1'</span>:str += <span class=\"string\">\"[Bread], $1.0\"</span>;s.addGoods(<span class=\"number\">1</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'2'</span>:str += <span class=\"string\">\"[Cocacola], $1.0\"</span>;s.addGoods(<span class=\"number\">2</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'3'</span>:str += <span class=\"string\">\"[Beer], &amp;1.0\"</span>;s.addGoods(<span class=\"number\">3</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'4'</span>:str += <span class=\"string\">\"[Chocolate], &amp;1.0\"</span>;s.addGoods(<span class=\"number\">4</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'5'</span>:str += <span class=\"string\">\"[Pencil], $0.5\"</span>;s.addGoods(<span class=\"number\">5</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'6'</span>:str += <span class=\"string\">\"[Notebook], $3.0\"</span>;s.addGoods(<span class=\"number\">6</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'9'</span>:s.checkout();flag2 = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"string\">'0'</span>:s.ending();flag1 = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:s.invalidInput();flag3 = <span class=\"literal\">false</span>;<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(flag1 &amp;&amp; flag2 &amp;&amp; flag3)</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; str &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(flag1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h4><p>开始功能测试：<br><img src=\"https://img-blog.csdnimg.cn/20200510152128562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"start\"></p>\n<p>菜单功能测试：<br><img src=\"https://img-blog.csdnimg.cn/2020051015214118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"menu\"><br>购买功能测试（只测试一种）：<br><img src=\"https://img-blog.csdnimg.cn/20200510152152614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"buy\"><br>结算功能测试：<br><img src=\"https://img-blog.csdnimg.cn/20200510152206939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"checkout\"><br>错误输入功能测试：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/202005101522211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"invalid\"><br>退出功能测试：<br><img src=\"https://img-blog.csdnimg.cn/20200510152244410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"quit\"></p>\n<hr>\n","slug":"便利店小程序Plus","updated":"2020-05-10T07:29:39.831Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/05/10/%E4%BE%BF%E5%88%A9%E5%BA%97%E5%B0%8F%E7%A8%8B%E5%BA%8FPlus/","excerpt":"问题描述版本一请参见","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Fan类与Rational类的简单实现","date":"2020-05-08T05:18:40.000Z","path":"2020/05/08/Fan类与Rational类的简单实现/","text":"问题描述设计一个Fan风扇类，要求如下： 设计一个Rational有理数类，要求如下： 问题分析 Fan设计： Rational设计： 源代码Fan： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120//main.cpp#include &lt;iostream&gt;#include&lt;string&gt;#include \"Fan.h\"using namespace std;int main()&#123; Fan a; cout &lt;&lt; \"before:\" &lt;&lt; endl; cout &lt;&lt; a.status() &lt;&lt; endl; cout &lt;&lt; \"after:\" &lt;&lt; endl; a.setColor(\"black\"); a.setSpeed(3); a.setOn(true); cout &lt;&lt; a.status() &lt;&lt; endl; cout &lt;&lt; \"***************\" &lt;&lt; endl; Fan b(2,true,4.0,\"blue\"); cout &lt;&lt; b.status() &lt;&lt; endl; cout &lt;&lt; \"***************\" &lt;&lt; endl; Fan c(3,false,1.0,\"red\"); cout &lt;&lt; c.status() &lt;&lt; endl; cout &lt;&lt; \"***************\" &lt;&lt; endl; return 0;&#125;//Fan.h#include &lt;string&gt;using namespace std;class Fan&#123; public: int SLOW = 1; int MEDIUM = 2; int FAST = 3; Fan(); Fan(int s,bool o,double r,string c); int getSpeed(); void setSpeed(int s); bool getOn(); void setOn(bool o); double getRadius(); string getColor(); void setColor(string str); string status(); private: int speed = 1; bool on = false; double radius = 5.0; string color = \"white\";&#125;;//Fan.cpp#include &lt;iostream&gt;#include &lt;string&gt;#include \"Fan.h\"using namespace std;Fan ::Fan()&#123;&#125;Fan ::Fan(int s,bool o,double r,string c)&#123; SLOW = 1; MEDIUM = 2; FAST = 3; speed = s; on = o; radius = r; color = c;&#125;int Fan ::getSpeed()&#123; return speed;&#125;void Fan ::setSpeed(int s)&#123; speed = s;&#125;bool Fan ::getOn()&#123; return on;&#125;void Fan ::setOn(bool o)&#123; on = o;&#125;double Fan ::getRadius()&#123; return radius;&#125;string Fan ::getColor()&#123; return color;&#125;void Fan ::setColor(string str)&#123; color = str;&#125;string Fan ::status()&#123; string str = \"\"; if(on)&#123; str = \"speed: \"; if(speed == 1) str += \"SLOW \"; else if(speed == 2) str += \"MEDIUM \"; else str += \"FAST \"; str += \"color: \" + color + \" radius: \" + to_string(radius); &#125; else&#123; str += \"status: off color: \" + color + \" radius: \" +to_string(radius); &#125; return str;&#125; Rational： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125//main.cpp#include &lt;iostream&gt;#include \"Rational.h\"using namespace std;int main()&#123; double x = 25.12; Rational a(25,32); a = a.transform_double(x); a.output_Rational(); return 0;&#125;//Rational.husing namespace std;class Rational&#123; public: int x; int y; Rational(); Rational(int a,int b); void setRational(int a,int b); void easeRational(); Rational sum(Rational s); Rational reduce(Rational r); Rational multply(Rational m); Rational divorce(Rational d); void output_Rational(); Rational transform_double(double t);&#125;;//Rational.cpp#include &lt;iostream&gt;#include &lt;math.h&gt;#include \"Rational.h\"using namespace std;Rational::Rational()&#123; x = 0; y = 1;&#125;Rational::Rational(int a,int b)&#123; if(!b)&#123; cout &lt;&lt; \"分母不能为零 已按照默认数值初始化！\" &lt;&lt; endl; x = 0; y = 1; &#125; else&#123; x = a; y =b; &#125;&#125;void Rational::setRational(int a,int b)&#123; if(!b)&#123; cout &lt;&lt; \"分母不能为零！\" &lt;&lt; endl; &#125; else&#123; x = a; y =b; &#125;&#125;void Rational::easeRational()&#123; if(!x)&#123; y = 1; &#125; else&#123; int a = x &gt; y ? x : y; int b = x &lt; y ? x : y; while(a % b)&#123; int temp = b; b = a % b; a = temp; &#125; x = x / b; y = y / b; &#125;&#125;Rational Rational::sum(Rational s)&#123; Rational ss((x*s.y + y*s.x),(y*s.y)); ss.easeRational(); return ss;&#125;Rational Rational::reduce(Rational r)&#123; Rational rr((x*r.y - y*r.x),(y*r.y)); rr.easeRational(); return rr;&#125;Rational Rational::multply(Rational m)&#123; Rational mm(x*m.x,y*m.y); mm.easeRational(); return mm;&#125;Rational Rational::divorce(Rational d)&#123; Rational dd((x*d.y),(y*d.x)); dd.easeRational(); return dd;&#125;void Rational::output_Rational()&#123; cout &lt;&lt; x &lt;&lt; \"/\" &lt;&lt; y &lt;&lt; endl;&#125;Rational Rational::transform_double(double t)&#123; int p = 1000000; Rational re((int)(p*t),p); re.easeRational(); return re;&#125; 测试： Fan： Rational： 读者可自行设计测试样例进行测试，这里不再赘述","raw":"---\ntitle: Fan类与Rational类的简单实现\ndate: 2020-05-08 13:18:40\ncopyright: true\ntags: [C++,算法]\ncategories: [C++]\n---\n\n### 问题描述\n设计一个Fan风扇类，要求如下：\n![need](https://img-blog.csdnimg.cn/20200508123523334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n设计一个Rational有理数类，要求如下：\n\n![need](https://img-blog.csdnimg.cn/202005081236522.png)\n\n***\n\n<!-- more -->\n\n### 问题分析\n\n<br>\n\n**Fan设计：**\n\n![Fan](https://img-blog.csdnimg.cn/20200508125008758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n**Rational设计：**\n![Rational](https://img-blog.csdnimg.cn/20200508125052525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n***\n\n### 源代码\n\n**Fan：**\n\n```cpp\n//main.cpp\n#include <iostream>\n#include<string>\n#include \"Fan.h\"\n\nusing namespace std;\n\nint main()\n{\n    Fan a;\n    cout << \"before:\" << endl;\n    cout << a.status() << endl;\n    cout << \"after:\" << endl;\n    a.setColor(\"black\");\n    a.setSpeed(3);\n    a.setOn(true);\n    cout << a.status() << endl;\n    cout << \"***************\" << endl;\n    Fan b(2,true,4.0,\"blue\");\n    cout << b.status() << endl;\n    cout << \"***************\" << endl;\n    Fan c(3,false,1.0,\"red\");\n    cout << c.status() << endl;\n    cout << \"***************\" << endl;\n    return 0;\n}\n\n//Fan.h\n#include <string>\n\nusing namespace std;\n\nclass Fan{\n    public:\n        int SLOW = 1;\n        int MEDIUM = 2;\n        int FAST = 3;\n        Fan();\n        Fan(int s,bool o,double r,string c);\n        int getSpeed();\n        void setSpeed(int s);\n        bool getOn();\n        void setOn(bool o);\n        double getRadius();\n        string getColor();\n        void setColor(string str);\n        string status();\n    private:\n        int speed = 1;\n        bool on = false;\n        double radius = 5.0;\n        string color = \"white\";\n\n};\n\n//Fan.cpp\n#include <iostream>\n#include <string>\n#include \"Fan.h\"\nusing namespace std;\n\nFan ::Fan(){}\n\nFan ::Fan(int s,bool o,double r,string c){\n    SLOW = 1;\n    MEDIUM = 2;\n    FAST = 3;\n    speed = s;\n    on = o;\n    radius = r;\n    color = c;\n}\n\nint Fan ::getSpeed(){\n    return speed;\n}\n\nvoid Fan ::setSpeed(int s){\n    speed = s;\n}\n\nbool Fan ::getOn(){\n    return on;\n}\n\nvoid Fan ::setOn(bool o){\n    on = o;\n}\n\ndouble Fan ::getRadius(){\n    return radius;\n}\n\nstring Fan ::getColor(){\n    return color;\n}\n\nvoid Fan ::setColor(string str){\n    color = str;\n}\n\nstring Fan ::status(){\n    string str = \"\";\n    if(on){\n            str = \"speed: \";\n        if(speed == 1)\n            str += \"SLOW \";\n        else if(speed == 2)\n            str += \"MEDIUM \";\n        else\n            str += \"FAST \";\n        str += \"color: \" + color + \" radius: \" + to_string(radius);\n    }\n\n    else{\n        str += \"status: off  color: \" + color + \" radius: \" +to_string(radius);\n    }\n\n    return str;\n}\n```\n\n\n\n**Rational：**\n\n```cpp\n//main.cpp\n#include <iostream>\n#include \"Rational.h\"\n\nusing namespace std;\n\nint main()\n{\n\n    double x = 25.12;\n    Rational a(25,32);\n    a = a.transform_double(x);\n    a.output_Rational();\n\n\n    return 0;\n}\n\n//Rational.h\n\nusing namespace std;\n\nclass Rational{\n    public:\n        int x;\n        int y;\n        Rational();\n        Rational(int a,int b);\n        void setRational(int a,int b);\n        void easeRational();\n        Rational sum(Rational s);\n        Rational reduce(Rational r);\n        Rational multply(Rational m);\n        Rational divorce(Rational d);\n        void output_Rational();\n        Rational transform_double(double t);\n};\n\n//Rational.cpp\n#include <iostream>\n#include <math.h>\n#include \"Rational.h\"\n\nusing namespace std;\n\nRational::Rational(){\n    x = 0;\n    y = 1;\n}\n\nRational::Rational(int a,int b){\n    if(!b){\n        cout << \"分母不能为零  已按照默认数值初始化！\" << endl;\n        x = 0;\n        y = 1;\n    }\n    else{\n        x = a;\n        y =b;\n    }\n}\n\nvoid Rational::setRational(int a,int b){\n     if(!b){\n        cout << \"分母不能为零！\" << endl;\n    }\n    else{\n        x = a;\n        y =b;\n    }\n}\n\nvoid Rational::easeRational(){\n    if(!x){\n        y = 1;\n    }\n    else{\n         int a = x > y ? x : y;\n         int b = x < y ? x : y;\n\n         while(a % b){\n            int temp = b;\n             b = a % b;\n             a = temp;\n         }\n\n         x = x / b;\n         y = y / b;\n    }\n}\n\nRational Rational::sum(Rational s){\n    Rational ss((x*s.y + y*s.x),(y*s.y));\n    ss.easeRational();\n    return ss;\n}\n\nRational Rational::reduce(Rational r){\n    Rational rr((x*r.y - y*r.x),(y*r.y));\n    rr.easeRational();\n    return rr;\n}\n\nRational Rational::multply(Rational m){\n    Rational mm(x*m.x,y*m.y);\n    mm.easeRational();\n    return mm;\n}\n\nRational Rational::divorce(Rational d){\n    Rational dd((x*d.y),(y*d.x));\n    dd.easeRational();\n    return dd;\n}\n\nvoid Rational::output_Rational(){\n    cout << x << \"/\" << y << endl;\n}\n\nRational Rational::transform_double(double t){\n    int p = 1000000;\n    Rational re((int)(p*t),p);\n    re.easeRational();\n    return re;\n}\n```\n\n**测试：**\n\n*Fan：*\n![Fan](https://img-blog.csdnimg.cn/20200508124423486.png)\n\n*Rational：*\n![Rational](https://img-blog.csdnimg.cn/20200508124528935.png)\n\n*读者可自行设计测试样例进行测试，这里不再赘述*\n\n***\n\n","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>设计一个Fan风扇类，要求如下：<br><img src=\"https://img-blog.csdnimg.cn/20200508123523334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"need\"></p>\n<p>设计一个Rational有理数类，要求如下：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/202005081236522.png\" alt=\"need\"></p>\n<hr>\n<a id=\"more\"></a>\n\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><br>\n\n<p><strong>Fan设计：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200508125008758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"Fan\"><br><strong>Rational设计：</strong><br><img src=\"https://img-blog.csdnimg.cn/20200508125052525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"Rational\"></p>\n<hr>\n<h3 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h3><p><strong>Fan：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Fan.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    Fan a;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"before:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a.status() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"after:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    a.setColor(<span class=\"string\">\"black\"</span>);</span><br><span class=\"line\">    a.setSpeed(<span class=\"number\">3</span>);</span><br><span class=\"line\">    a.setOn(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; a.status() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"***************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"function\">Fan <span class=\"title\">b</span><span class=\"params\">(<span class=\"number\">2</span>,<span class=\"literal\">true</span>,<span class=\"number\">4.0</span>,<span class=\"string\">\"blue\"</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; b.status() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"***************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"function\">Fan <span class=\"title\">c</span><span class=\"params\">(<span class=\"number\">3</span>,<span class=\"literal\">false</span>,<span class=\"number\">1.0</span>,<span class=\"string\">\"red\"</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; c.status() &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"***************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Fan.h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fan</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"keyword\">int</span> SLOW = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> MEDIUM = <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> FAST = <span class=\"number\">3</span>;</span><br><span class=\"line\">        Fan();</span><br><span class=\"line\">        Fan(<span class=\"keyword\">int</span> s,<span class=\"keyword\">bool</span> o,<span class=\"keyword\">double</span> r,<span class=\"built_in\">string</span> c);</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getSpeed</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setSpeed</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">getOn</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setOn</span><span class=\"params\">(<span class=\"keyword\">bool</span> o)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">double</span> <span class=\"title\">getRadius</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">getColor</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setColor</span><span class=\"params\">(<span class=\"built_in\">string</span> str)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">status</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>:</span><br><span class=\"line\">        <span class=\"keyword\">int</span> speed = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> on = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">double</span> radius = <span class=\"number\">5.0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> color = <span class=\"string\">\"white\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Fan.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Fan.h\"</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Fan ::Fan()&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Fan ::Fan(<span class=\"keyword\">int</span> s,<span class=\"keyword\">bool</span> o,<span class=\"keyword\">double</span> r,<span class=\"built_in\">string</span> c)&#123;</span><br><span class=\"line\">    SLOW = <span class=\"number\">1</span>;</span><br><span class=\"line\">    MEDIUM = <span class=\"number\">2</span>;</span><br><span class=\"line\">    FAST = <span class=\"number\">3</span>;</span><br><span class=\"line\">    speed = s;</span><br><span class=\"line\">    on = o;</span><br><span class=\"line\">    radius = r;</span><br><span class=\"line\">    color = c;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> Fan ::getSpeed()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> speed;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Fan ::setSpeed(<span class=\"keyword\">int</span> s)&#123;</span><br><span class=\"line\">    speed = s;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">bool</span> Fan ::getOn()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> on;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Fan ::setOn(<span class=\"keyword\">bool</span> o)&#123;</span><br><span class=\"line\">    on = o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">double</span> Fan ::getRadius()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> radius;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">string</span> Fan ::getColor()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> color;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> Fan ::setColor(<span class=\"built_in\">string</span> str)&#123;</span><br><span class=\"line\">    color = str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">string</span> Fan ::status()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(on)&#123;</span><br><span class=\"line\">            str = <span class=\"string\">\"speed: \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(speed == <span class=\"number\">1</span>)</span><br><span class=\"line\">            str += <span class=\"string\">\"SLOW \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(speed == <span class=\"number\">2</span>)</span><br><span class=\"line\">            str += <span class=\"string\">\"MEDIUM \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            str += <span class=\"string\">\"FAST \"</span>;</span><br><span class=\"line\">        str += <span class=\"string\">\"color: \"</span> + color + <span class=\"string\">\" radius: \"</span> + to_string(radius);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        str += <span class=\"string\">\"status: off  color: \"</span> + color + <span class=\"string\">\" radius: \"</span> +to_string(radius);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>Rational：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Rational.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">double</span> x = <span class=\"number\">25.12</span>;</span><br><span class=\"line\">    <span class=\"function\">Rational <span class=\"title\">a</span><span class=\"params\">(<span class=\"number\">25</span>,<span class=\"number\">32</span>)</span></span>;</span><br><span class=\"line\">    a = a.transform_double(x);</span><br><span class=\"line\">    a.output_Rational();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Rational.h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Rational</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span>:</span><br><span class=\"line\">        <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> y;</span><br><span class=\"line\">        Rational();</span><br><span class=\"line\">        Rational(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b);</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setRational</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">easeRational</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        <span class=\"function\">Rational <span class=\"title\">sum</span><span class=\"params\">(Rational s)</span></span>;</span><br><span class=\"line\">        <span class=\"function\">Rational <span class=\"title\">reduce</span><span class=\"params\">(Rational r)</span></span>;</span><br><span class=\"line\">        <span class=\"function\">Rational <span class=\"title\">multply</span><span class=\"params\">(Rational m)</span></span>;</span><br><span class=\"line\">        <span class=\"function\">Rational <span class=\"title\">divorce</span><span class=\"params\">(Rational d)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">output_Rational</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">        <span class=\"function\">Rational <span class=\"title\">transform_double</span><span class=\"params\">(<span class=\"keyword\">double</span> t)</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Rational.cpp</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"Rational.h\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Rational::Rational()&#123;</span><br><span class=\"line\">    x = <span class=\"number\">0</span>;</span><br><span class=\"line\">    y = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Rational::Rational(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!b)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"分母不能为零  已按照默认数值初始化！\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        x = <span class=\"number\">0</span>;</span><br><span class=\"line\">        y = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        x = a;</span><br><span class=\"line\">        y =b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rational::setRational</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(!b)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"分母不能为零！\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        x = a;</span><br><span class=\"line\">        y =b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rational::easeRational</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!x)&#123;</span><br><span class=\"line\">        y = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">int</span> a = x &gt; y ? x : y;</span><br><span class=\"line\">         <span class=\"keyword\">int</span> b = x &lt; y ? x : y;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">while</span>(a % b)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = b;</span><br><span class=\"line\">             b = a % b;</span><br><span class=\"line\">             a = temp;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">         x = x / b;</span><br><span class=\"line\">         y = y / b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Rational <span class=\"title\">Rational::sum</span><span class=\"params\">(Rational s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Rational <span class=\"title\">ss</span><span class=\"params\">((x*s.y + y*s.x),(y*s.y))</span></span>;</span><br><span class=\"line\">    ss.easeRational();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ss;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Rational <span class=\"title\">Rational::reduce</span><span class=\"params\">(Rational r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Rational <span class=\"title\">rr</span><span class=\"params\">((x*r.y - y*r.x),(y*r.y))</span></span>;</span><br><span class=\"line\">    rr.easeRational();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> rr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Rational <span class=\"title\">Rational::multply</span><span class=\"params\">(Rational m)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Rational <span class=\"title\">mm</span><span class=\"params\">(x*m.x,y*m.y)</span></span>;</span><br><span class=\"line\">    mm.easeRational();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mm;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Rational <span class=\"title\">Rational::divorce</span><span class=\"params\">(Rational d)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\">Rational <span class=\"title\">dd</span><span class=\"params\">((x*d.y),(y*d.x))</span></span>;</span><br><span class=\"line\">    dd.easeRational();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dd;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rational::output_Rational</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; x &lt;&lt; <span class=\"string\">\"/\"</span> &lt;&lt; y &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Rational <span class=\"title\">Rational::transform_double</span><span class=\"params\">(<span class=\"keyword\">double</span> t)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> p = <span class=\"number\">1000000</span>;</span><br><span class=\"line\">    <span class=\"function\">Rational <span class=\"title\">re</span><span class=\"params\">((<span class=\"keyword\">int</span>)(p*t),p)</span></span>;</span><br><span class=\"line\">    re.easeRational();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> re;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>测试：</strong></p>\n<p><em>Fan：</em><br><img src=\"https://img-blog.csdnimg.cn/20200508124423486.png\" alt=\"Fan\"></p>\n<p><em>Rational：</em><br><img src=\"https://img-blog.csdnimg.cn/20200508124528935.png\" alt=\"Rational\"></p>\n<p><em>读者可自行设计测试样例进行测试，这里不再赘述</em></p>\n<hr>\n","slug":"Fan类与Rational类的简单实现","updated":"2020-05-08T05:25:59.297Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/05/08/Fan%E7%B1%BB%E4%B8%8ERational%E7%B1%BB%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/","excerpt":"问题描述设计一个Fan风扇类，要求如下： 设计一个Rational有理数类，要求如下：","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"商贩卖pig和电话号码组合两类简单问题的求解","date":"2020-04-28T10:39:43.000Z","path":"2020/04/28/商贩卖pig和电话号码组合两类简单问题的求解/","text":"问题描述（1）商贩卖pig一个商贩养了一批猪，有一天赶着pig去村庄卖，每经过一个村庄就卖掉所有pig的一半又一只。这样他经过了 7 个村子后还剩 2 只pig，请计算并输出他一共养了多少只pig？输出经过每个村子卖出多少只pig？ （2）电话号码对应的字符组合在电话或者手机上，一个数字比如 2 对应着字母 ABC，7 对应着PQRS。那么数字串 27 所对应的字符的可能组合就有 3*4=12 种（如AP，BR 等）。现在输入一个 3 到 11 位长的电话号码，请打印出这个电话号码所对应的字符的所有可能组合和组合数。 问题分析注：此处只对两个函数进行分析，且函数标号与标题一致 Void useFun1()输入：用户需要输入商贩到第几个村庄后（vnum）还剩下多少只pig（pnum）；输出：到第几个村庄时有多少只pig，卖掉了多少只pig，最后pig总数；主要处理过程：利用递归函数int fun1(int vnum,int pnum)计算需要输出 的数据。 Void useFun2()输入：用户只需要输入电话号码即可（标准输入为3-11）位；输出：输入的号码对应九宫格拼音输入共有多少种组合方式，并输出这些组 合方式；主要处理过程：利用递归函数void fun2(int num[],int pos[],int c,int len)计算组合 方式数目并输出这些组合方式。在主方法中调用相关函数满足用户需求即可 流程设计 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164#include &lt;iostream&gt;#include &lt;strings.h&gt;#include &lt;windows.h&gt;using namespace std;//存放每个数字对应的字母组合static char ch[10][5] = &#123; &#123;&#125;, //0 &#123;&#125;, //1 &#123;'A','B','C'&#125;, //2 &#123;'D','E','F'&#125;, //3 &#123;'G','H','I'&#125;, //4 &#123;'J','K','L'&#125;, //5 &#123;'M','N','O'&#125;, //6 &#123;'P','Q','R','S'&#125;, //7 &#123;'T','U','V'&#125;, //8 &#123;'W','X','Y','Z'&#125; //9 &#125;;//存放每个数字对应的字母的个数static int total[] = &#123;0,0,3,3,3,3,3,4,3,4&#125;;//实现第一个问题的递归函数int fun1(int vnum,int pnum);//负责使用上述函数，保证和用户良好的交互void useFun1();//实现第二个问题的递归函数void fun2(int num[],int pos[],int c,int len); //实现第二个问题的循环函数，此函数与上个函数功能相同void fun2x(int num[],int pos[],int c,int len);//负责调用上述两个函数之一void useFun2();int main()&#123; system(\"title ps&amp;pnc\");//设置控制台标题 HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE); COORD size_x; size_x.X = 61; size_x.Y = 200; SetConsoleScreenBufferSize(hOut,size_x);//设置字缓冲区大小 SMALL_RECT rc; rc.Left = 0; rc.Top = 0; rc.Right = 60; rc.Bottom = 15; SetConsoleWindowInfo(hOut, TRUE, &amp;rc);//设置窗口大小 do&#123; system(\"cls\"); char re; cout &lt;&lt; \"\\t(1) calculation the amount of pigs\" &lt;&lt; endl; cout &lt;&lt;\"\\t(2) calculation the combination of phone number\" &lt;&lt; endl; cout &lt;&lt;\"\\t(0) exit\" &lt;&lt; endl &lt;&lt;endl; cout &lt;&lt; \"\\tplease input digit to select function: \"; cin &gt;&gt; re; if(re == '1') useFun1(); else if(re == '2') useFun2(); else if(re == '0') break; else&#123; cout &lt;&lt; \"please input right digit!\" &lt;&lt;endl; system(\"pause\"); continue; &#125; &#125;while(true); return 0;&#125;int fun1(int vnum,int pnum,int&amp; f)&#123; if(vnum == 1)&#123; cout &lt;&lt; \"no:\" &lt;&lt;f &lt;&lt; \" have: \" &lt;&lt; (pnum+1)*2 &lt;&lt;\" sale:\" &lt;&lt; 4 &lt;&lt; endl; return (pnum+1)*2; &#125; int re = fun1(--vnum,pnum,f); int sum = (re + 1) *2; f --; cout &lt;&lt; \"no:\" &lt;&lt; f &lt;&lt; \" have: \" &lt;&lt; sum &lt;&lt; \" sale:\" &lt;&lt; sum - re &lt;&lt; endl; return sum;&#125;void useFun1()&#123; system(\"cls\"); int temp,flag; cout &lt;&lt; \"please input village's no and amount(apart in space):\" &lt;&lt; endl; cin &gt;&gt; flag &gt;&gt; temp; int sum = fun1(flag,temp,flag); cout &lt;&lt; \"total: \" &lt;&lt; sum &lt;&lt; endl; system(\"pause\");&#125;void useFun2()&#123; system(\"cls\"); char tel[12]; cout &lt;&lt; \"please input telephone number: \" &lt;&lt; endl; cin &gt;&gt; tel; int lenc = strlen(tel); int numc[lenc];//保存输入的非（‘0’和‘1’）对应的数字 int posc[lenc];//保存各个数字当前应输出的字母的位置 int counts = 0; //这里获取‘0’和‘1’这样的字符有多少个 for(int i =0;i&lt; lenc;i++)&#123; if(tel[i] == '0' || tel[i] == '1') counts++; &#125; //将不是‘0’或者‘1’的数字字符放入numc数组中 for(int i = 0,j = 0;i &lt; lenc;i++)&#123; if(tel[i] != '0' &amp;&amp; tel[i] != '1')&#123; numc[j] = tel[i] - '0'; posc[j++] = 0; &#125; &#125; lenc = lenc - counts; int temp = 1; //计算组合数目 for(int i =0;i &lt; lenc;i++) temp *= total[numc[i]]; cout &lt;&lt; \"total: \" &lt;&lt; temp &lt;&lt; endl; cout &lt;&lt;\"possible combination:\" &lt;&lt;endl; fun2(numc,posc,0,lenc); cout &lt;&lt; endl; system(\"pause\");&#125;void fun2(int num[],int pos[],int c,int len)&#123; if(c == len)&#123; for(int i =0;i&lt; len;i++)&#123; cout &lt;&lt; ch[num[i]][pos[i]]; &#125; cout &lt;&lt; endl; return; &#125; for(pos[c] = 0; pos[c] &lt; total[num[c]];pos[c]++)&#123; fun2(num,pos,c+1,len); &#125;&#125;void fun2x(int num[],int pos[],int c,int len)&#123; while(true)&#123; for(int i=0; i&lt;len; i++)&#123; cout &lt;&lt; ch[num[i]][pos[i]]; &#125; cout &lt;&lt; endl; int k=len-1; while(k&gt;=0)&#123; if(pos[k]&lt;total[num[k]]-1)&#123; pos[k]++; break; &#125;else&#123; pos[k]=0; k--; &#125; &#125; if(k&lt;0) break; &#125;&#125; 测试Menu测试 Function1测试 Function2测试 Exit测试读者可以自行设计测试样例","raw":"---\ntitle: 商贩卖pig和电话号码组合两类简单问题的求解\ndate: 2020-04-28 18:39:43\ncopyright: true\ntags: [C++,算法]\ncategories: [C++]\n---\n\n### 问题描述\n**（1）商贩卖pig**\n一个商贩养了一批猪，有一天赶着pig去村庄卖，每经过一个村庄就卖掉所有pig的一半又一只。这样他经过了 7 个村子后还剩 2 只pig，请计算并输出他一共养了多少只pig？输出经过每个村子卖出多少只pig？\n\n**（2）电话号码对应的字符组合**\n在电话或者手机上，一个数字比如 2 对应着字母 ABC，7 对应着PQRS。那么数字串 27 所对应的字符的可能组合就有 3*4=12 种（如AP，BR 等）。现在输入一个 3 到 11 位长的电话号码，请打印出这个电话号码所对应的字符的所有可能组合和组合数。\n\n<!-- more -->\n\n***\n\n### 问题分析\n*注：此处只对两个函数进行分析，且函数标号与标题一致*\n\n\n - Void useFun1()\n输入：用户需要输入商贩到第几个村庄后（vnum）还剩下多少只pig（pnum）；\n输出：到第几个村庄时有多少只pig，卖掉了多少只pig，最后pig总数；\n主要处理过程：利用递归函数int fun1(int vnum,int pnum)计算需要输出\t\t\t\t\t的数据。\n\n - Void useFun2()\n输入：用户只需要输入电话号码即可（标准输入为3-11）位；\n输出：输入的号码对应九宫格拼音输入共有多少种组合方式，并输出这些组\t\t   合方式；\n主要处理过程：利用递归函数\nvoid fun2(int num[],int pos[],int c,int len)计算组合\t\t\t\t\t方式数目并输出这些组合方式。\n在主方法中调用相关函数满足用户需求即可\n\n***\n\n\n### 流程设计\n![process](https://img-blog.csdnimg.cn/20200428181929833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n### 源代码\n\n```cpp\n#include <iostream>\n#include <strings.h>\n#include <windows.h>\n\nusing namespace std;\n//存放每个数字对应的字母组合\nstatic char ch[10][5] = {\n        {}, //0\n        {},  //1\n        {'A','B','C'},  //2\n        {'D','E','F'},  //3\n        {'G','H','I'},  //4\n        {'J','K','L'},  //5\n        {'M','N','O'},  //6\n        {'P','Q','R','S'},  //7\n        {'T','U','V'},  //8\n        {'W','X','Y','Z'}  //9\n    };\n//存放每个数字对应的字母的个数\nstatic int total[] = {0,0,3,3,3,3,3,4,3,4};\n\n//实现第一个问题的递归函数\nint fun1(int vnum,int pnum);\n//负责使用上述函数，保证和用户良好的交互\nvoid useFun1();\n\n//实现第二个问题的递归函数\nvoid fun2(int num[],int pos[],int c,int len); \n//实现第二个问题的循环函数，此函数与上个函数功能相同\nvoid fun2x(int num[],int pos[],int c,int len);\n//负责调用上述两个函数之一\nvoid useFun2();\n\n\n\nint main()\n{\n    system(\"title ps&pnc\");//设置控制台标题\n    HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);\n    COORD size_x;\n    size_x.X = 61;\n    size_x.Y = 200;\n    SetConsoleScreenBufferSize(hOut,size_x);//设置字缓冲区大小\n    SMALL_RECT rc;\n    rc.Left = 0;\n    rc.Top = 0;\n    rc.Right = 60;\n    rc.Bottom = 15;\n    SetConsoleWindowInfo(hOut, TRUE, &rc);//设置窗口大小\n    do{\n        system(\"cls\");\n        char re;\n        cout << \"\\t(1) calculation the amount of pigs\" << endl;\n        cout <<\"\\t(2) calculation the combination of phone number\" << endl;\n        cout <<\"\\t(0) exit\" << endl <<endl;\n        cout << \"\\tplease input digit to select function: \";\n        cin >> re;\n        if(re == '1')\n        useFun1();\n        else if(re == '2')\n        useFun2();\n        else if(re == '0')\n        break;\n        else{\n            cout << \"please input right digit!\" <<endl;\n            system(\"pause\");\n            continue;\n        }\n    }while(true);\n\n    return 0;\n}\n\nint fun1(int vnum,int pnum,int& f){\n    if(vnum == 1){\n        cout << \"no:\" <<f << \" have: \" << (pnum+1)*2 <<\" sale:\" << 4 << endl;\n        return (pnum+1)*2;\n    }\n    int re = fun1(--vnum,pnum,f);\n    int sum = (re + 1) *2;\n    f --;\n    cout << \"no:\" << f << \" have: \" << sum << \" sale:\" << sum - re << endl;\n    return sum;\n}\n\nvoid useFun1(){\n    system(\"cls\");\n    int temp,flag;\n    cout << \"please input village's no and amount(apart in space):\" << endl;\n    cin >> flag >> temp;\n    int sum = fun1(flag,temp,flag);\n    cout << \"total: \" << sum << endl;\n    system(\"pause\");\n\n}\n\n\nvoid useFun2(){\n    system(\"cls\");\n    char tel[12];\n    cout << \"please input telephone number: \" << endl;\n    cin >> tel;\n    int lenc = strlen(tel);\n    int numc[lenc];//保存输入的非（‘0’和‘1’）对应的数字\n    int posc[lenc];//保存各个数字当前应输出的字母的位置\n    int counts = 0;\n    //这里获取‘0’和‘1’这样的字符有多少个\n    for(int i =0;i< lenc;i++){\n        if(tel[i] == '0' || tel[i] == '1')\n            counts++;\n    }\n    //将不是‘0’或者‘1’的数字字符放入numc数组中\n    for(int i = 0,j = 0;i < lenc;i++){\n            if(tel[i] != '0' && tel[i] != '1'){\n            numc[j] = tel[i] - '0';\n            posc[j++] = 0;\n            }\n    }\n    lenc = lenc - counts;\n    int temp = 1;\n    //计算组合数目\n    for(int i =0;i < lenc;i++)\n    temp *= total[numc[i]];\n\n    cout << \"total: \" << temp << endl;\n    cout <<\"possible combination:\" <<endl;\n    fun2(numc,posc,0,lenc);\n    cout << endl;\n    system(\"pause\");\n}\nvoid fun2(int num[],int pos[],int c,int len){\n    if(c == len){\n        for(int i =0;i< len;i++){\n            cout << ch[num[i]][pos[i]];\n        }\n        cout << endl;\n        return;\n    }\n\n    for(pos[c] = 0; pos[c] < total[num[c]];pos[c]++){\n        fun2(num,pos,c+1,len);\n    }\n}\n\nvoid fun2x(int num[],int pos[],int c,int len){\n    while(true){\n\t\t\tfor(int i=0; i<len; i++){\n\t\t\t\tcout << ch[num[i]][pos[i]];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t\tint k=len-1;\n\t\t\twhile(k>=0){\n\t\t\t\tif(pos[k]<total[num[k]]-1){\n\t\t\t\t\tpos[k]++;\n\t\t\t\t\tbreak;\n\t\t\t\t}else{\n\t\t\t\t\tpos[k]=0;\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(k<0)\n\t\t\t\tbreak;\n\t\t}\n}\n\n\n```\n***\n\n### 测试\nMenu测试\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183501285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n\nFunction1测试\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020042818351076.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183517609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n\nFunction2测试\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183526595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183534110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183540866.png)\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183550102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n\n\nExit测试\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200428183558194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n读者可以自行设计测试样例\n\n***\n","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p><strong>（1）商贩卖pig</strong><br>一个商贩养了一批猪，有一天赶着pig去村庄卖，每经过一个村庄就卖掉所有pig的一半又一只。这样他经过了 7 个村子后还剩 2 只pig，请计算并输出他一共养了多少只pig？输出经过每个村子卖出多少只pig？</p>\n<p><strong>（2）电话号码对应的字符组合</strong><br>在电话或者手机上，一个数字比如 2 对应着字母 ABC，7 对应着PQRS。那么数字串 27 所对应的字符的可能组合就有 3*4=12 种（如AP，BR 等）。现在输入一个 3 到 11 位长的电话号码，请打印出这个电话号码所对应的字符的所有可能组合和组合数。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p><em>注：此处只对两个函数进行分析，且函数标号与标题一致</em></p>\n<ul>\n<li><p>Void useFun1()<br>输入：用户需要输入商贩到第几个村庄后（vnum）还剩下多少只pig（pnum）；<br>输出：到第几个村庄时有多少只pig，卖掉了多少只pig，最后pig总数；<br>主要处理过程：利用递归函数int fun1(int vnum,int pnum)计算需要输出                    的数据。</p>\n</li>\n<li><p>Void useFun2()<br>输入：用户只需要输入电话号码即可（标准输入为3-11）位；<br>输出：输入的号码对应九宫格拼音输入共有多少种组合方式，并输出这些组           合方式；<br>主要处理过程：利用递归函数<br>void fun2(int num[],int pos[],int c,int len)计算组合                    方式数目并输出这些组合方式。<br>在主方法中调用相关函数满足用户需求即可</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"流程设计\"><a href=\"#流程设计\" class=\"headerlink\" title=\"流程设计\"></a>流程设计</h3><p><img src=\"https://img-blog.csdnimg.cn/20200428181929833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"process\"></p>\n<hr>\n<h3 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;strings.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"comment\">//存放每个数字对应的字母组合</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">char</span> ch[<span class=\"number\">10</span>][<span class=\"number\">5</span>] = &#123;</span><br><span class=\"line\">        &#123;&#125;, <span class=\"comment\">//0</span></span><br><span class=\"line\">        &#123;&#125;,  <span class=\"comment\">//1</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'A'</span>,<span class=\"string\">'B'</span>,<span class=\"string\">'C'</span>&#125;,  <span class=\"comment\">//2</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'D'</span>,<span class=\"string\">'E'</span>,<span class=\"string\">'F'</span>&#125;,  <span class=\"comment\">//3</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'G'</span>,<span class=\"string\">'H'</span>,<span class=\"string\">'I'</span>&#125;,  <span class=\"comment\">//4</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'J'</span>,<span class=\"string\">'K'</span>,<span class=\"string\">'L'</span>&#125;,  <span class=\"comment\">//5</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'M'</span>,<span class=\"string\">'N'</span>,<span class=\"string\">'O'</span>&#125;,  <span class=\"comment\">//6</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'P'</span>,<span class=\"string\">'Q'</span>,<span class=\"string\">'R'</span>,<span class=\"string\">'S'</span>&#125;,  <span class=\"comment\">//7</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'T'</span>,<span class=\"string\">'U'</span>,<span class=\"string\">'V'</span>&#125;,  <span class=\"comment\">//8</span></span><br><span class=\"line\">        &#123;<span class=\"string\">'W'</span>,<span class=\"string\">'X'</span>,<span class=\"string\">'Y'</span>,<span class=\"string\">'Z'</span>&#125;  <span class=\"comment\">//9</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"><span class=\"comment\">//存放每个数字对应的字母的个数</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> total[] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实现第一个问题的递归函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fun1</span><span class=\"params\">(<span class=\"keyword\">int</span> vnum,<span class=\"keyword\">int</span> pnum)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//负责使用上述函数，保证和用户良好的交互</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">useFun1</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实现第二个问题的递归函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fun2</span><span class=\"params\">(<span class=\"keyword\">int</span> num[],<span class=\"keyword\">int</span> pos[],<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> len)</span></span>; </span><br><span class=\"line\"><span class=\"comment\">//实现第二个问题的循环函数，此函数与上个函数功能相同</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fun2x</span><span class=\"params\">(<span class=\"keyword\">int</span> num[],<span class=\"keyword\">int</span> pos[],<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> len)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//负责调用上述两个函数之一</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">useFun2</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"title ps&amp;pnc\"</span>);<span class=\"comment\">//设置控制台标题</span></span><br><span class=\"line\">    HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class=\"line\">    COORD size_x;</span><br><span class=\"line\">    size_x.X = <span class=\"number\">61</span>;</span><br><span class=\"line\">    size_x.Y = <span class=\"number\">200</span>;</span><br><span class=\"line\">    SetConsoleScreenBufferSize(hOut,size_x);<span class=\"comment\">//设置字缓冲区大小</span></span><br><span class=\"line\">    SMALL_RECT rc;</span><br><span class=\"line\">    rc.Left = <span class=\"number\">0</span>;</span><br><span class=\"line\">    rc.Top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    rc.Right = <span class=\"number\">60</span>;</span><br><span class=\"line\">    rc.Bottom = <span class=\"number\">15</span>;</span><br><span class=\"line\">    SetConsoleWindowInfo(hOut, TRUE, &amp;rc);<span class=\"comment\">//设置窗口大小</span></span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">        system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">char</span> re;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\t(1) calculation the amount of pigs\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"\\t(2) calculation the combination of phone number\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"\\t(0) exit\"</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"\\tplease input digit to select function: \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; re;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(re == <span class=\"string\">'1'</span>)</span><br><span class=\"line\">        useFun1();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(re == <span class=\"string\">'2'</span>)</span><br><span class=\"line\">        useFun2();</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(re == <span class=\"string\">'0'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"please input right digit!\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">fun1</span><span class=\"params\">(<span class=\"keyword\">int</span> vnum,<span class=\"keyword\">int</span> pnum,<span class=\"keyword\">int</span>&amp; f)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(vnum == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no:\"</span> &lt;&lt;f &lt;&lt; <span class=\"string\">\" have: \"</span> &lt;&lt; (pnum+<span class=\"number\">1</span>)*<span class=\"number\">2</span> &lt;&lt;<span class=\"string\">\" sale:\"</span> &lt;&lt; <span class=\"number\">4</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (pnum+<span class=\"number\">1</span>)*<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> re = fun1(--vnum,pnum,f);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = (re + <span class=\"number\">1</span>) *<span class=\"number\">2</span>;</span><br><span class=\"line\">    f --;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no:\"</span> &lt;&lt; f &lt;&lt; <span class=\"string\">\" have: \"</span> &lt;&lt; sum &lt;&lt; <span class=\"string\">\" sale:\"</span> &lt;&lt; sum - re &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">useFun1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp,flag;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"please input village's no and amount(apart in space):\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; flag &gt;&gt; temp;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = fun1(flag,temp,flag);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"total: \"</span> &lt;&lt; sum &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">useFun2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">char</span> tel[<span class=\"number\">12</span>];</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"please input telephone number: \"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; tel;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lenc = <span class=\"built_in\">strlen</span>(tel);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> numc[lenc];<span class=\"comment\">//保存输入的非（‘0’和‘1’）对应的数字</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> posc[lenc];<span class=\"comment\">//保存各个数字当前应输出的字母的位置</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> counts = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//这里获取‘0’和‘1’这样的字符有多少个</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i&lt; lenc;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tel[i] == <span class=\"string\">'0'</span> || tel[i] == <span class=\"string\">'1'</span>)</span><br><span class=\"line\">            counts++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//将不是‘0’或者‘1’的数字字符放入numc数组中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>,j = <span class=\"number\">0</span>;i &lt; lenc;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(tel[i] != <span class=\"string\">'0'</span> &amp;&amp; tel[i] != <span class=\"string\">'1'</span>)&#123;</span><br><span class=\"line\">            numc[j] = tel[i] - <span class=\"string\">'0'</span>;</span><br><span class=\"line\">            posc[j++] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lenc = lenc - counts;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">//计算组合数目</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i &lt; lenc;i++)</span><br><span class=\"line\">    temp *= total[numc[i]];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"total: \"</span> &lt;&lt; temp &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"possible combination:\"</span> &lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    fun2(numc,posc,<span class=\"number\">0</span>,lenc);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fun2</span><span class=\"params\">(<span class=\"keyword\">int</span> num[],<span class=\"keyword\">int</span> pos[],<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(c == len)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i =<span class=\"number\">0</span>;i&lt; len;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; ch[num[i]][pos[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(pos[c] = <span class=\"number\">0</span>; pos[c] &lt; total[num[c]];pos[c]++)&#123;</span><br><span class=\"line\">        fun2(num,pos,c+<span class=\"number\">1</span>,len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fun2x</span><span class=\"params\">(<span class=\"keyword\">int</span> num[],<span class=\"keyword\">int</span> pos[],<span class=\"keyword\">int</span> c,<span class=\"keyword\">int</span> len)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;len; i++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; ch[num[i]][pos[i]];</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> k=len<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(k&gt;=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(pos[k]&lt;total[num[k]]<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tpos[k]++;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t\tpos[k]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t\t\tk--;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(k&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><p>Menu测试<br><img src=\"https://img-blog.csdnimg.cn/20200428183501285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>Function1测试<br><img src=\"https://img-blog.csdnimg.cn/2020042818351076.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200428183517609.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>Function2测试</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200428183526595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200428183534110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200428183540866.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200428183550102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>Exit测试<br><img src=\"https://img-blog.csdnimg.cn/20200428183558194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>读者可以自行设计测试样例</p>\n<hr>\n","slug":"商贩卖pig和电话号码组合两类简单问题的求解","updated":"2020-04-28T10:41:13.376Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/28/%E5%95%86%E8%B4%A9%E5%8D%96pig%E5%92%8C%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%BB%84%E5%90%88%E4%B8%A4%E7%B1%BB%E7%AE%80%E5%8D%95%E9%97%AE%E9%A2%98%E7%9A%84%E6%B1%82%E8%A7%A3/","excerpt":"问题描述（1）商贩卖pig一个商贩养了一批猪，有一天赶着pig去村庄卖，每经过一个村庄就卖掉所有pig的一半又一只。这样他经过了 7 个村子后还剩 2 只pig，请计算并输出他一共养了多少只pig？输出经过每个村子卖出多少只pig？ （2）电话号码对应的字符组合在电话或者手机上，一个数字比如 2 对应着字母 ABC，7 对应着PQRS。那么数字串 27 所对应的字符的可能组合就有 3*4=12 种（如AP，BR 等）。现在输入一个 3 到 11 位长的电话号码，请打印出这个电话号码所对应的字符的所有可能组合和组合数。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"十进制向二进制转化的两种方法","date":"2020-04-22T07:27:30.000Z","path":"2020/04/22/十进制向二进制转化的两种方法/","text":"写在前面解决此类问题的方法可能不止以下这两类方式(十进制转化为其它进制也是同样的道理，在此仅以转化为二进制为例)，在此只对两类方式的一种解法加以解释，其余方式暂不再此次讨论范围内。 方式一：递归递归算法优势在于对某些特定问题的求解上思路清晰，结构简单，书写方便，但缺点也十分明显，即时间效率非常差，但还是在此写出递归算法的具体实现源码,封装成函数仅供参考。 源代码123456789101112//这里的函数由于结构问题没有对于 0 的判定能力，需要在主函数内加入判定语句void dec2Bin1(int value)&#123; if (value==0) return ; else &#123; //依次获得需要的被求余的数 dec2Bin1(value/2); //依次输出求余后的数 cout &lt;&lt; value%2; &#125;&#125; 测试样例： 方式二：非递归对问题的求解一般采用非递归即循环的方式解决，优势在于执行效率比递归算法高得多，但在一些问题的求解上上循环结构比较复杂，故还是不能完全取代递归算法，这里依然用函数封装仅供参考。 源代码123456789101112131415161718string dec2Bin2(int value)&#123; string s; if(!value) return (s += \"0\"); else&#123; while(value/2)&#123; if(value%2) s += \"1\"; else s += \"0\"; value /= 2; &#125; s += \"1\"; //string反向迭代器 string str(s.rbegin(),s.rend()); return str; &#125;&#125; 测试样例（与之前相同实例同时验证结果的正确性）","raw":"---\ntitle: 十进制向二进制转化的两种方法\ndate: 2020-04-22 15:27:30\ncopyright: true\ntags: [C++,算法]\ncategories: [C++]\n---\n\n### 写在前面\n解决此类问题的方法可能不止以下这两类方式(*十进制转化为其它进制也是同样的道理，在此仅以转化为二进制为例*)，在此只对两类方式的一种解法加以解释，其余方式暂不再此次讨论范围内。\n\n<!-- more -->\n\n***\n####  方式一：递归\n递归算法优势在于对某些特定问题的求解上思路清晰，结构简单，书写方便，但缺点也十分明显，即时间效率非常差，但还是在此写出递归算法的具体实现源码,封装成函数仅供参考。\n\n##### 源代码\n\n```cpp\n//这里的函数由于结构问题没有对于 0 的判定能力，需要在主函数内加入判定语句\nvoid dec2Bin1(int value){\n\tif (value==0)\n    return ;\n\telse\n\t{\n\t    //依次获得需要的被求余的数\n\t\tdec2Bin1(value/2);\n\t\t//依次输出求余后的数\n\t\tcout << value%2;\n\t}\n}\n\n```\n测试样例：\n![test](https://img-blog.csdnimg.cn/20200422131403145.png)\n\n***\n#### 方式二：非递归\n对问题的求解一般采用非递归即循环的方式解决，优势在于执行效率比递归算法高得多，但在一些问题的求解上上循环结构比较复杂，故还是不能完全取代递归算法，这里依然用函数封装仅供参考。\n\n##### 源代码\n\n```cpp\nstring dec2Bin2(int value){\n    string s;\n    if(!value)\n    return (s += \"0\");\n    else{\n    while(value/2){\n        if(value%2)\n            s += \"1\";\n        else\n            s += \"0\";\n        value /= 2;\n    }\n    s += \"1\";\n    //string反向迭代器\n    string str(s.rbegin(),s.rend());\n    return str;\n    }\n}\n\n```\n测试样例（与之前相同实例同时验证结果的正确性）\n![test](https://img-blog.csdnimg.cn/20200422132435650.png)\n\n","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>解决此类问题的方法可能不止以下这两类方式(<em>十进制转化为其它进制也是同样的道理，在此仅以转化为二进制为例</em>)，在此只对两类方式的一种解法加以解释，其余方式暂不再此次讨论范围内。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h4 id=\"方式一：递归\"><a href=\"#方式一：递归\" class=\"headerlink\" title=\"方式一：递归\"></a>方式一：递归</h4><p>递归算法优势在于对某些特定问题的求解上思路清晰，结构简单，书写方便，但缺点也十分明显，即时间效率非常差，但还是在此写出递归算法的具体实现源码,封装成函数仅供参考。</p>\n<h5 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这里的函数由于结构问题没有对于 0 的判定能力，需要在主函数内加入判定语句</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dec2Bin1</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (value==<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t    <span class=\"comment\">//依次获得需要的被求余的数</span></span><br><span class=\"line\">\t\tdec2Bin1(value/<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//依次输出求余后的数</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; value%<span class=\"number\">2</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试样例：<br><img src=\"https://img-blog.csdnimg.cn/20200422131403145.png\" alt=\"test\"></p>\n<hr>\n<h4 id=\"方式二：非递归\"><a href=\"#方式二：非递归\" class=\"headerlink\" title=\"方式二：非递归\"></a>方式二：非递归</h4><p>对问题的求解一般采用非递归即循环的方式解决，优势在于执行效率比递归算法高得多，但在一些问题的求解上上循环结构比较复杂，故还是不能完全取代递归算法，这里依然用函数封装仅供参考。</p>\n<h5 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">dec2Bin2</span><span class=\"params\">(<span class=\"keyword\">int</span> value)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!value)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (s += <span class=\"string\">\"0\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(value/<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(value%<span class=\"number\">2</span>)</span><br><span class=\"line\">            s += <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            s += <span class=\"string\">\"0\"</span>;</span><br><span class=\"line\">        value /= <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    s += <span class=\"string\">\"1\"</span>;</span><br><span class=\"line\">    <span class=\"comment\">//string反向迭代器</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">string</span> <span class=\"title\">str</span><span class=\"params\">(s.rbegin(),s.rend())</span></span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试样例（与之前相同实例同时验证结果的正确性）<br><img src=\"https://img-blog.csdnimg.cn/20200422132435650.png\" alt=\"test\"></p>\n","slug":"十进制向二进制转化的两种方法","updated":"2020-04-22T07:28:30.760Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/22/%E5%8D%81%E8%BF%9B%E5%88%B6%E5%90%91%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/","excerpt":"写在前面解决此类问题的方法可能不止以下这两类方式(十进制转化为其它进制也是同样的道理，在此仅以转化为二进制为例)，在此只对两类方式的一种解法加以解释，其余方式暂不再此次讨论范围内。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"两个有序数组的合并问题","date":"2020-04-22T07:25:33.000Z","path":"2020/04/22/两个有序数组的合并问题/","text":"问题描述编写函数，将两个有序 vector 数组合并成一个新的有序 vector数组，函数原型为： 1vector&lt;int&gt; merg(vector&lt;int&gt; list1,vector&lt;int&gt; list2); 问题分析第一步将问题分解为两类处理方式：两个有序数组是否都是不空；两个有序数组的自身排列方式是升序还是降序； 第二步在函数内先默认两个数组都为升序排列（包括数组为空，数组所有元素都相同两种情况） 第三步把每种情况分别进行处理返回处理后的数组即可设定这样的处理方式：两个数组都为升序或者降序时，返回升序或者降序合并后的数组；两个数组排列方式不同时（即一个为升序，一个为降序），返回降序排列后的数组；有一个数组为空时，按照不为空的数组排列方式返回；两个数组都为空时，输出“至少有一个数组不空”提示语句，返回一个空数组； 源代码注：这里有很多代码十分冗余，只是为了满足题设，读者可改进为更简洁的执行方式 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141vector&lt;int&gt; merg(vector&lt;int&gt; list1,vector&lt;int&gt; list2)&#123; //分别取得两个数组的长度 int length1 = list1.size(); int length2 = list2.size(); vector&lt;int&gt; relist(length1 + length2); int i(0); int j(0); int k(0); //默认两个数组都是升序排列 int flag(0); bool flag1(true); bool flag2(true); //判断两个数组的排列方式 while(length1 &amp;&amp; flag &lt; length1-1)&#123; if(list1[flag] &gt; list1[flag +1])&#123; flag1 = false; break; &#125; flag++; &#125; flag = 0; while(length2 &amp;&amp; flag &lt; length2-1)&#123; if(list2[flag] &gt; list2[flag +1])&#123; flag2 = false; break; &#125; flag++; &#125; //两个数组都为升序排列，输出为升序排列数组 if(flag1 &amp;&amp; flag2)&#123; while(j &lt; length1 &amp;&amp; k &lt; length2)&#123; if(list1[j] &lt;= list2[k]) relist[i++] = list1[j++]; else relist[i++] = list2[k++]; &#125; if(length1 &amp;&amp; length2)&#123; if(j &lt; length1) while(j &lt; length1) relist[i++] = list1[j++]; else while(k &lt; length2) relist[i++] = list2[k++]; &#125; else if(!length1 &amp;&amp; length2) relist = list2; else if(!length2 &amp;&amp; length1) relist = list1; else cout &lt;&lt; \"请至少输入一个不为空的数组！\"; &#125; //两个数组都为降序排列，输出为降序排列数组 else if(!flag1 &amp;&amp; !flag2)&#123; while(j &lt; length1 &amp;&amp; k &lt; length2)&#123; if(list1[j] &gt;= list2[k]) relist[i++] = list1[j++]; else relist[i++] = list2[k++]; &#125; if(length1 &amp;&amp; length2)&#123; if(j &lt; length1) while(j &lt; length1) relist[i++] = list1[j++]; else while(k &lt; length2) relist[i++] = list2[k++]; &#125; else if(!length1 &amp;&amp; length2) relist = list2; else if(!length2 &amp;&amp; length1) relist = list1; else cout &lt;&lt; \"请至少输入一个不为空的数组！\"; &#125; //两个数组不都为升序或者降序 else&#123; //数组1为升序且第二个数组不为空时，输出为降序数组 if(flag1)&#123; vector&lt;int&gt; temp(length2); for(int m = 0,n = length2 -1;m &lt; length2;m++,n--)&#123; temp[m] = list2[n]; &#125; while(j &lt; length1 &amp;&amp; k &lt; length2)&#123; if(list1[j] &lt;= temp[k]) relist[i++] = list1[j++]; else relist[i++] = temp[k++]; &#125; if(length1 &amp;&amp; length2)&#123; if(j &lt; length1) while(j &lt; length1) relist[i++] = list1[j++]; else while(k &lt; length2) relist[i++] = temp[k++]; &#125; //若两个数组其中一个为空，则按照不为空的那个数组排列顺序输出 else if(!length1 &amp;&amp; length2) relist = list2; else if(!length2 &amp;&amp; length1) relist = list1; else cout &lt;&lt; \"请至少输入一个不为空的数组！\"; &#125; //数组2为升序且第二个数组不为空 else&#123; vector&lt;int&gt; temp(length1); for(int m = 0,n = length1 -1;m &lt; length1;m++,n--)&#123; temp[m] = list1[n]; &#125; while(j &lt; length1 &amp;&amp; k &lt; length2)&#123; if(temp[j] &lt;= list2[k]) relist[i++] = temp[j++]; else relist[i++] = list2[k++]; &#125; if(length1 &amp;&amp; length2)&#123; if(j &lt; length1) while(j &lt; length1) relist[i++] = temp[j++]; else while(k &lt; length2) relist[i++] = list2[k++]; &#125; else if(!length1 &amp;&amp; length2) relist = list2; else if(!length2 &amp;&amp; length1) relist = list1; else cout &lt;&lt; \"请至少输入一个不为空的数组！\"; &#125; &#125; return relist;&#125; 测试样例(这里测试数组在主函数给出方便测试，故没有显示输入) 两个数组均为空有一个数组为空两个都为升序两个都为降序一个为升序一个为降序","raw":"---\ntitle: 两个有序数组的合并问题\ndate: 2020-04-22 15:25:33\ncopyright: true\ntags: [C++,算法]\ncategories: [C++]\n---\n\n\n\n### 问题描述\n编写函数，将两个有序 vector 数组合并成一个新的有序 vector数组，函数原型为：\n\n```cpp\nvector<int>  merg(vector<int> list1,vector<int> list2);\n```\n\n<!-- more-->\n\n***\n### 问题分析\n**第一步**\n*将问题分解为两类处理方式：\n两个有序数组是否都是不空；\n两个有序数组的自身排列方式是升序还是降序；*\n\n**第二步**\n*在函数内先默认两个数组都为升序排列（包括数组为空，数组所有元素都相同两种情况）*\n\n**第三步**\n*把每种情况分别进行处理返回处理后的数组即可\n设定这样的处理方式：\n两个数组都为升序或者降序时，返回升序或者降序合并后的数组；\n两个数组排列方式不同时（即一个为升序，一个为降序），返回降序排列后的数组；\n有一个数组为空时，按照不为空的数组排列方式返回；\n两个数组都为空时，输出“至少有一个数组不空”提示语句，返回一个空数组；*\n\n***\n### 源代码\n*注：这里有很多代码十分冗余，只是为了满足题设，读者可改进为更简洁的执行方式*\n\n```cpp\nvector<int> merg(vector<int> list1,vector<int> list2){\n\t//分别取得两个数组的长度\n    int length1 = list1.size();\n    int length2 = list2.size();\n    vector<int> relist(length1 + length2);\n    int i(0);\n    int j(0);\n    int k(0);\n    //默认两个数组都是升序排列\n    int flag(0);\n    bool flag1(true);\n    bool flag2(true);\n\t//判断两个数组的排列方式\n    while(length1 && flag < length1-1){\n        if(list1[flag] > list1[flag +1]){\n            flag1 = false;\n            break;\n        }\n        flag++;\n    }\n    flag = 0;\n    while(length2 && flag < length2-1){\n        if(list2[flag] > list2[flag +1]){\n            flag2 = false;\n            break;\n        }\n        flag++;\n    }\n\n    //两个数组都为升序排列，输出为升序排列数组\n    if(flag1 && flag2){\n        while(j < length1 && k < length2){\n            if(list1[j] <= list2[k])\n                relist[i++] = list1[j++];\n            else\n                relist[i++] = list2[k++];\n    }\n\n    if(length1 && length2){\n            if(j < length1)\n                while(j < length1)\n                relist[i++] = list1[j++];\n            else\n                while(k < length2)\n                relist[i++] = list2[k++];\n    }\n    else if(!length1 && length2)\n        relist = list2;\n    else if(!length2 && length1)\n        relist = list1;\n    else\n        cout << \"请至少输入一个不为空的数组！\";\n    }\n\n    //两个数组都为降序排列，输出为降序排列数组\n    else if(!flag1 && !flag2){\n        while(j < length1 && k < length2){\n            if(list1[j] >= list2[k])\n                relist[i++] = list1[j++];\n            else\n                relist[i++] = list2[k++];\n    }\n\n    if(length1 && length2){\n            if(j < length1)\n                while(j < length1)\n                relist[i++] = list1[j++];\n            else\n                while(k < length2)\n                relist[i++] = list2[k++];\n    }\n    else if(!length1 && length2)\n        relist = list2;\n    else if(!length2 && length1)\n        relist = list1;\n    else\n        cout << \"请至少输入一个不为空的数组！\";\n    }\n\n    //两个数组不都为升序或者降序\n    else{\n            //数组1为升序且第二个数组不为空时，输出为降序数组\n        if(flag1){\n            vector<int> temp(length2);\n            for(int m = 0,n = length2 -1;m < length2;m++,n--){\n                temp[m] = list2[n];\n            }\n            while(j < length1 && k < length2){\n            if(list1[j] <= temp[k])\n                relist[i++] = list1[j++];\n            else\n                relist[i++] = temp[k++];\n    }\n\n    if(length1 && length2){\n            if(j < length1)\n                while(j < length1)\n                relist[i++] = list1[j++];\n            else\n                while(k < length2)\n                relist[i++] = temp[k++];\n    }\n    //若两个数组其中一个为空，则按照不为空的那个数组排列顺序输出\n    else if(!length1 && length2)\n        relist = list2;\n    else if(!length2 && length1)\n        relist = list1;\n    else\n        cout << \"请至少输入一个不为空的数组！\";\n        }\n        //数组2为升序且第二个数组不为空\n    else{\n           vector<int> temp(length1);\n            for(int m = 0,n = length1 -1;m < length1;m++,n--){\n                temp[m] = list1[n];\n            }\n            while(j < length1 && k < length2){\n            if(temp[j] <= list2[k])\n                relist[i++] = temp[j++];\n            else\n                relist[i++] = list2[k++];\n    }\n\n    if(length1 && length2){\n            if(j < length1)\n                while(j < length1)\n                relist[i++] = temp[j++];\n            else\n                while(k < length2)\n                relist[i++] = list2[k++];\n    }\n    else if(!length1 && length2)\n        relist = list2;\n    else if(!length2 && length1)\n        relist = list1;\n    else\n        cout << \"请至少输入一个不为空的数组！\";\n        }\n    }\n    return relist;\n}\n\n```\n\n\n**测试样例**\n(这里测试数组在主函数给出方便测试，故没有显示输入)\n\n*两个数组均为空*\n![test](https://img-blog.csdnimg.cn/20200422135054290.png)*有一个数组为空*\n![test](https://img-blog.csdnimg.cn/20200422135230212.png)\n*两个都为升序*\n![test](https://img-blog.csdnimg.cn/2020042213553581.png)\n*两个都为降序*\n![test](https://img-blog.csdnimg.cn/20200422135619473.png)\n*一个为升序一个为降序*\n![test](https://img-blog.csdnimg.cn/20200422135649452.png)\n","content":"<h3 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h3><p>编写函数，将两个有序 vector 数组合并成一个新的有序 vector数组，函数原型为：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;  <span class=\"title\">merg</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; list1,<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; list2)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h3><p><strong>第一步</strong><br><em>将问题分解为两类处理方式：<br>两个有序数组是否都是不空；<br>两个有序数组的自身排列方式是升序还是降序；</em></p>\n<p><strong>第二步</strong><br><em>在函数内先默认两个数组都为升序排列（包括数组为空，数组所有元素都相同两种情况）</em></p>\n<p><strong>第三步</strong><br><em>把每种情况分别进行处理返回处理后的数组即可<br>设定这样的处理方式：<br>两个数组都为升序或者降序时，返回升序或者降序合并后的数组；<br>两个数组排列方式不同时（即一个为升序，一个为降序），返回降序排列后的数组；<br>有一个数组为空时，按照不为空的数组排列方式返回；<br>两个数组都为空时，输出“至少有一个数组不空”提示语句，返回一个空数组；</em></p>\n<hr>\n<h3 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h3><p><em>注：这里有很多代码十分冗余，只是为了满足题设，读者可改进为更简洁的执行方式</em></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">merg</span><span class=\"params\">(<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; list1,<span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; list2)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//分别取得两个数组的长度</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> length1 = list1.size();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> length2 = list2.size();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">relist</span><span class=\"params\">(length1 + length2)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">i</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">j</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">k</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"comment\">//默认两个数组都是升序排列</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">flag</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">flag1</span><span class=\"params\">(<span class=\"literal\">true</span>)</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">flag2</span><span class=\"params\">(<span class=\"literal\">true</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"comment\">//判断两个数组的排列方式</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(length1 &amp;&amp; flag &lt; length1<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list1[flag] &gt; list1[flag +<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            flag1 = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        flag++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(length2 &amp;&amp; flag &lt; length2<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(list2[flag] &gt; list2[flag +<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            flag2 = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        flag++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//两个数组都为升序排列，输出为升序排列数组</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(flag1 &amp;&amp; flag2)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j &lt; length1 &amp;&amp; k &lt; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(list1[j] &lt;= list2[k])</span><br><span class=\"line\">                relist[i++] = list1[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                relist[i++] = list2[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length1 &amp;&amp; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &lt; length1)</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(j &lt; length1)</span><br><span class=\"line\">                relist[i++] = list1[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>(k &lt; length2)</span><br><span class=\"line\">                relist[i++] = list2[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length1 &amp;&amp; length2)</span><br><span class=\"line\">        relist = list2;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length2 &amp;&amp; length1)</span><br><span class=\"line\">        relist = list1;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请至少输入一个不为空的数组！\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//两个数组都为降序排列，输出为降序排列数组</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!flag1 &amp;&amp; !flag2)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(j &lt; length1 &amp;&amp; k &lt; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(list1[j] &gt;= list2[k])</span><br><span class=\"line\">                relist[i++] = list1[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                relist[i++] = list2[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length1 &amp;&amp; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &lt; length1)</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(j &lt; length1)</span><br><span class=\"line\">                relist[i++] = list1[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>(k &lt; length2)</span><br><span class=\"line\">                relist[i++] = list2[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length1 &amp;&amp; length2)</span><br><span class=\"line\">        relist = list2;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length2 &amp;&amp; length1)</span><br><span class=\"line\">        relist = list1;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请至少输入一个不为空的数组！\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//两个数组不都为升序或者降序</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//数组1为升序且第二个数组不为空时，输出为降序数组</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag1)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; temp(length2);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>,n = length2 <span class=\"number\">-1</span>;m &lt; length2;m++,n--)&#123;</span><br><span class=\"line\">                temp[m] = list2[n];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(j &lt; length1 &amp;&amp; k &lt; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(list1[j] &lt;= temp[k])</span><br><span class=\"line\">                relist[i++] = list1[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                relist[i++] = temp[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length1 &amp;&amp; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &lt; length1)</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(j &lt; length1)</span><br><span class=\"line\">                relist[i++] = list1[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>(k &lt; length2)</span><br><span class=\"line\">                relist[i++] = temp[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//若两个数组其中一个为空，则按照不为空的那个数组排列顺序输出</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length1 &amp;&amp; length2)</span><br><span class=\"line\">        relist = list2;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length2 &amp;&amp; length1)</span><br><span class=\"line\">        relist = list1;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请至少输入一个不为空的数组！\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//数组2为升序且第二个数组不为空</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">           <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; temp(length1);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> m = <span class=\"number\">0</span>,n = length1 <span class=\"number\">-1</span>;m &lt; length1;m++,n--)&#123;</span><br><span class=\"line\">                temp[m] = list1[n];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(j &lt; length1 &amp;&amp; k &lt; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(temp[j] &lt;= list2[k])</span><br><span class=\"line\">                relist[i++] = temp[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                relist[i++] = list2[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length1 &amp;&amp; length2)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &lt; length1)</span><br><span class=\"line\">                <span class=\"keyword\">while</span>(j &lt; length1)</span><br><span class=\"line\">                relist[i++] = temp[j++];</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span>(k &lt; length2)</span><br><span class=\"line\">                relist[i++] = list2[k++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length1 &amp;&amp; length2)</span><br><span class=\"line\">        relist = list2;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!length2 &amp;&amp; length1)</span><br><span class=\"line\">        relist = list1;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"请至少输入一个不为空的数组！\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> relist;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><strong>测试样例</strong><br>(这里测试数组在主函数给出方便测试，故没有显示输入)</p>\n<p><em>两个数组均为空</em><br><img src=\"https://img-blog.csdnimg.cn/20200422135054290.png\" alt=\"test\"><em>有一个数组为空</em><br><img src=\"https://img-blog.csdnimg.cn/20200422135230212.png\" alt=\"test\"><br><em>两个都为升序</em><br><img src=\"https://img-blog.csdnimg.cn/2020042213553581.png\" alt=\"test\"><br><em>两个都为降序</em><br><img src=\"https://img-blog.csdnimg.cn/20200422135619473.png\" alt=\"test\"><br><em>一个为升序一个为降序</em><br><img src=\"https://img-blog.csdnimg.cn/20200422135649452.png\" alt=\"test\"></p>\n","slug":"两个有序数组的合并问题","updated":"2020-04-22T07:27:05.047Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/22/%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%90%88%E5%B9%B6%E9%97%AE%E9%A2%98/","excerpt":"问题描述编写函数，将两个有序 vector 数组合并成一个新的有序 vector数组，函数原型为： 1vector&lt;int&gt; merg(vector&lt;int&gt; list1,vector&lt;int&gt; list2);","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"全局变量和局部变量","date":"2020-04-22T07:22:41.000Z","path":"2020/04/22/全局变量和局部变量/","text":"一、全局变量和局部变量的区别 1、作用域： 全局变量作用于整个程序； 局部变量作用于当前“括号内部”。 2.内存分配： 全局变量内存一般分配在全局数据段； 局部变量分配在堆栈区。 3.生存周期： 全局变量：跟随主程序的创建而创建，虽主程序的销毁而销毁； 局部变量：局部函数内部，甚至局部循环体内部，退出就不存在。 4.使用方式： 全局变量一旦申明后，可以在程序的任意位置被使用； 局部变量只可在局部函数使用。 二、操作系统和编译器是如何知道全局和局部变量的？ 操作系统和编译器通过内存分配的位置来知道的。因为全局变量分配在全局数据段并且在程序开始运行的时候被加载。局部变量则分配在堆栈段里。","raw":"---\ntitle: 全局变量和局部变量\ndate: 2020-04-22 15:22:41\ncopyright: true\ntags: [语法]\ncategories: [C++]\n---\n\n\n\n一、全局变量和局部变量的区别\n\n1、作用域：\n\n   全局变量作用于整个程序；\n\n   局部变量作用于当前“括号内部”。\n\n<!-- more -->\n\n2.内存分配：\n\n   全局变量内存一般分配在全局数据段；\n\n   局部变量分配在堆栈区。\n\n3.生存周期：\n\n   全局变量：跟随主程序的创建而创建，虽主程序的销毁而销毁；\n\n   局部变量：局部函数内部，甚至局部循环体内部，退出就不存在。\n\n4.使用方式：\n\n   全局变量一旦申明后，可以在程序的任意位置被使用；\n\n   局部变量只可在局部函数使用。\n\n二、操作系统和编译器是如何知道全局和局部变量的？\n\n操作系统和编译器通过内存分配的位置来知道的。\n因为全局变量分配在全局数据段并且在程序开始运行的时候被加载。局部变量则分配在堆栈段里。 \n\n***\n\n","content":"<p>一、全局变量和局部变量的区别</p>\n<p>1、作用域：</p>\n<p>   全局变量作用于整个程序；</p>\n<p>   局部变量作用于当前“括号内部”。</p>\n<a id=\"more\"></a>\n\n<p>2.内存分配：</p>\n<p>   全局变量内存一般分配在全局数据段；</p>\n<p>   局部变量分配在堆栈区。</p>\n<p>3.生存周期：</p>\n<p>   全局变量：跟随主程序的创建而创建，虽主程序的销毁而销毁；</p>\n<p>   局部变量：局部函数内部，甚至局部循环体内部，退出就不存在。</p>\n<p>4.使用方式：</p>\n<p>   全局变量一旦申明后，可以在程序的任意位置被使用；</p>\n<p>   局部变量只可在局部函数使用。</p>\n<p>二、操作系统和编译器是如何知道全局和局部变量的？</p>\n<p>操作系统和编译器通过内存分配的位置来知道的。<br>因为全局变量分配在全局数据段并且在程序开始运行的时候被加载。局部变量则分配在堆栈段里。 </p>\n<hr>\n","slug":"全局变量和局部变量","updated":"2020-04-22T07:25:03.170Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/22/%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F/","excerpt":"一、全局变量和局部变量的区别 1、作用域： 全局变量作用于整个程序； 局部变量作用于当前“括号内部”。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"语法","slug":"语法","permalink":"https://mt-procode.github.io/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"便利店小程序","date":"2020-04-22T07:19:43.000Z","path":"2020/04/22/便利店小程序/","text":"问题描述界面要求：如果选择了 1（2、3、4类似）界面如下：如果选择了 0 问题分析输入：用户输入功能选择的编号和购买商品时的数量 输出：主菜单、各类商品的购买、以及结算退出的界面 主要处理过程：根据用户的选择切换界面并将用户要购买的商品存储在结构体数组里，最后在用户退出时结算并退出。 流程设计 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;vector&gt;#include &lt;windows.h&gt;using namespace std;//存放顾客购买的商品信息struct commodity&#123; int no; string name; double price; int amount;&#125;;//标志循环是否结束的标志bool flag = true;//存放顾客购买商品的数组vector&lt;commodity&gt; shoppingCar;//结算退出界面，主要完成已购买商品的信息输出和总额的计算bool settlementAndExit()&#123; system(\"cls\"); double sum = 0.0; cout &lt;&lt; \"ShoppingCar Commodity List:\" &lt;&lt; endl; cout &lt;&lt; \"no\\tname\\tprice\\tamount\" &lt;&lt; endl; //输出已购买商品的信息 vector&lt;commodity&gt;::iterator it; for(it = shoppingCar.begin();it != shoppingCar.end();it++)&#123; commodity p = *it; cout &lt;&lt; p.no &lt;&lt; \"\\t\" &lt;&lt; p.name &lt;&lt;\"\\t\"&lt;&lt;p.price&lt;&lt;\"\\t\"&lt;&lt;p.amount &lt;&lt; endl; sum += p.price * p.amount; &#125; cout &lt;&lt; endl &lt;&lt; \"Totally Need To Pay: \" &lt;&lt; sum &lt;&lt; \"元\" &lt;&lt; endl; cout &lt;&lt; \"-------------------\" &lt;&lt; endl; cout &lt;&lt; \"Good Bye!\" &lt;&lt; endl; cout &lt;&lt; \"Press Any to Exit! \"; system(\"pause\"); system(\"cls\"); return false;&#125;//Bread购买界面，其余商品类似，不做过多说明void buyBread()&#123; system(\"cls\"); int n; cout &lt;&lt; \"Please Input The Bread Amount: \"; cin &gt;&gt; n; bool again = true; vector&lt;commodity&gt;::iterator it; for(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123; if((*it).no == 1)&#123; again = false; (*it).amount += n; break; &#125; &#125; if(again)&#123; commodity temp = &#123;1,\"Bread\",1.00,n&#125;; shoppingCar.push_back(temp); &#125; system(\"cls\"); cout &lt;&lt; \"I Hank You!\" &lt;&lt; endl; cout &lt;&lt; \"You Have Selected [Bread], $1.00 * \" &lt;&lt; n &lt;&lt; endl; cout &lt;&lt; \"-------------------\" &lt;&lt;endl &lt;&lt; endl; do&#123; cout &lt;&lt;\"&lt;1&gt; Continue Buy &lt;2&gt; Settlement &amp; Exit\" &lt;&lt; endl; cout &lt;&lt;\"Please Select A Number To Continue Buy Or Settle&amp;Exit : \"; cin &gt;&gt; n; switch(n)&#123; case 1 : system(\"cls\");break; case 2 : flag = settlementAndExit();break; default : n = 0; cout &lt;&lt; \"Please Right Number, Press Any Key To Continue!\"; cin.get(); system(\"cls\"); break; &#125; &#125;while(!n);&#125;void buyCocacola()&#123; system(\"cls\"); int n; cout &lt;&lt; \"Please Input The Coca Cola Amount: \"; cin &gt;&gt; n; bool again = true; vector&lt;commodity&gt;::iterator it; for(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123; if((*it).no == 2)&#123; again = false; (*it).amount += n; break; &#125; &#125; if(again)&#123; commodity temp = &#123;2,\"Coca\",2.50,n&#125;; shoppingCar.push_back(temp); &#125; system(\"cls\"); cout &lt;&lt; \"I Hank You!\" &lt;&lt; endl; cout &lt;&lt; \"You Have Selected [Coca Cola], $2.50 * \" &lt;&lt; n &lt;&lt; endl; cout &lt;&lt; \"-------------------\" &lt;&lt;endl &lt;&lt; endl; do&#123; cout &lt;&lt;\"&lt;1&gt; Continue Buy &lt;2&gt; Settlement &amp; Exit\" &lt;&lt; endl; cout &lt;&lt;\"Please Select A Number To Continue Buy Or Settle&amp;Exit : \"; cin &gt;&gt; n; switch(n)&#123; case 1 : system(\"cls\");break; case 2 : flag = settlementAndExit();break; default : n = 0; cout &lt;&lt; \"Please Right Number, Press Any Key To Continue!\"; cin.get(); system(\"cls\"); break; &#125; &#125;while(!n);&#125;void buyBeer()&#123; system(\"cls\"); int n; cout &lt;&lt; \"Please Input The Beer Amount: \"; cin &gt;&gt; n; bool again = true; vector&lt;commodity&gt;::iterator it; for(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123; if((*it).no == 3)&#123; again = false; (*it).amount += n; break; &#125; &#125; if(again)&#123; commodity temp = &#123;3,\"Beer\",10.00,n&#125;; shoppingCar.push_back(temp); &#125; system(\"cls\"); cout &lt;&lt; \"I Hank You!\" &lt;&lt; endl; cout &lt;&lt; \"You Have Selected [Beer], $10.00 * \" &lt;&lt; n &lt;&lt; endl; cout &lt;&lt; \"-------------------\" &lt;&lt;endl &lt;&lt; endl; do&#123; cout &lt;&lt;\"&lt;1&gt; Continue Buy &lt;2&gt; Settlement &amp; Exit\" &lt;&lt; endl; cout &lt;&lt;\"Please Select A Number To Continue Buy Or Settle&amp;Exit : \"; cin &gt;&gt; n; switch(n)&#123; case 1 : system(\"cls\");break; case 2 : flag = settlementAndExit();break; default : n = 0; cout &lt;&lt; \"Please Right Number, Press Any Key To Continue!\"; cin.get(); system(\"cls\"); break; &#125; &#125;while(!n);&#125;void buyChocolates()&#123; system(\"cls\"); int n; cout &lt;&lt; \"Please Input The Chocolates Amount: \"; cin &gt;&gt; n; bool again = true; vector&lt;commodity&gt;::iterator it; for(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123; if((*it).no == 4)&#123; again = false; (*it).amount += n; break; &#125; &#125; if(again)&#123; commodity temp = &#123;4,\"Choc\",2.50,n&#125;; shoppingCar.push_back(temp); &#125; system(\"cls\"); cout &lt;&lt; \"I Hank You!\" &lt;&lt; endl; cout &lt;&lt; \"You Have Selected [Chocolates], $2.50 * \" &lt;&lt; n &lt;&lt; endl; cout &lt;&lt; \"-------------------\" &lt;&lt;endl &lt;&lt; endl; do&#123; cout &lt;&lt;\"&lt;1&gt; Continue Buy &lt;2&gt; Settlement &amp; Exit\" &lt;&lt; endl; cout &lt;&lt;\"Please Select A Number To Continue Buy Or Settle&amp;Exit : \"; cin &gt;&gt; n; switch(n)&#123; case 1 : system(\"cls\");break; case 2 : flag = settlementAndExit();break; default : n = 0; cout &lt;&lt; \"Please Right Number, Press Any Key To Continue!\"; cin.get(); system(\"cls\"); break; &#125; &#125;while(!n);&#125;int main()&#123; //更改控制台标题 system(\"title Xiao Fang Conveniences Store \"); //更改窗口大小 system(\"mode con cols=50 lines=15\"); //更改背景和前景色 system(\"color F5\"); //主界面 do&#123; int temp; cout &lt;&lt; \"Store\" &lt;&lt; endl; cout &lt;&lt; \"*************************************************\" &lt;&lt; endl; cout &lt;&lt; \" Xiao Fang Conveniences Store\"&lt;&lt;endl; cout &lt;&lt; \"*************************************************\" &lt;&lt; endl; cout &lt;&lt; \"&lt;1&gt; Bread 1.00\" &lt;&lt; endl; cout &lt;&lt; \"&lt;2&gt; Coca cola 2.50\" &lt;&lt; endl; cout &lt;&lt; \"&lt;3&gt; Beer 10.00\" &lt;&lt; endl; cout &lt;&lt; \"&lt;4&gt; Chocolates 2.50\" &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; \"&lt;0&gt; Settlement &amp; Exit\" &lt;&lt; endl; cout &lt;&lt; \"-------------------------------------------------\" &lt;&lt; endl; cout &lt;&lt; \"Please Select A Number: \"; cin &gt;&gt; temp; switch(temp)&#123; case 1 : buyBread();break; case 2 : buyCocacola();break; case 3 : buyBeer();break; case 4 : buyChocolates();break; case 0 : flag = settlementAndExit();break; default : system(\"cls\"); cout &lt;&lt; \"Please Right Number,press any key to choose again! \"; system(\"pause\"); break; &#125; system(\"cls\"); &#125;while(flag); return 0;&#125; 测试用例： Test1：主界面测试 Test2：bread购买界面测试 Test3：coca cola购买界面测试Test4：beer购买界面测试 Test5：chocolates购买界面测试 Test6：结算退出界面测试其余功能这里不做展示（所有功能经测试都是可行的）","raw":"---\ntitle: 便利店小程序\ndate: 2020-04-22 15:19:43\ncopyright: true\ntop: true \ntags: [C++,算法]\ncategories: [C++]\n---\n\n## 问题描述\n界面要求：\n![主界面](https://img-blog.csdnimg.cn/2020042214180896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)如果选择了 1（2、3、4类似）界面如下：\n![1](https://img-blog.csdnimg.cn/20200422141919634.png)如果选择了 0\n![0](https://img-blog.csdnimg.cn/20200422141952561.png)\n\n***\n\n<!-- more -->\n\n## 问题分析\n\n**输入：**\n用户输入功能选择的编号和购买商品时的数量\n\n**输出：**\n主菜单、各类商品的购买、以及结算退出的界面\n\n**主要处理过程：**\n根据用户的选择切换界面并将用户要购买的商品存储在结构体数组里，最后在用户退出时结算并退出。\n\n***\n\n## 流程设计\n![process](https://img-blog.csdnimg.cn/20200422142129775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n## 源代码\n\n```cpp\n#include <iostream>\n#include <string>\n#include <vector>\n#include <windows.h>\nusing namespace std;\n\n//存放顾客购买的商品信息\nstruct commodity{\n    int no;\n    string name;\n    double price;\n    int amount;\n};\n\n//标志循环是否结束的标志\nbool flag = true;\n//存放顾客购买商品的数组\nvector<commodity> shoppingCar;\n\n//结算退出界面，主要完成已购买商品的信息输出和总额的计算\nbool settlementAndExit(){\n    system(\"cls\");\n    double sum = 0.0;\n    cout << \"ShoppingCar Commodity List:\" << endl;\n    cout << \"no\\tname\\tprice\\tamount\" << endl;\n    //输出已购买商品的信息\n    vector<commodity>::iterator it;\n    for(it = shoppingCar.begin();it != shoppingCar.end();it++){\n        commodity p = *it;\n        cout << p.no << \"\\t\" << p.name <<\"\\t\"<<p.price<<\"\\t\"<<p.amount << endl;\n        sum += p.price * p.amount;\n    }\n    cout << endl << \"Totally Need To Pay:  \" << sum << \"元\" << endl;\n    cout << \"-------------------\" << endl;\n    cout << \"Good Bye!\" << endl;\n    cout << \"Press Any to Exit! \";\n    system(\"pause\");\n    system(\"cls\");\n    return false;\n}\n\n//Bread购买界面，其余商品类似，不做过多说明\nvoid buyBread(){\n    system(\"cls\");\n    int n;\n    cout << \"Please Input The Bread Amount:  \";\n    cin >> n;\n    bool again = true;\n    vector<commodity>::iterator it;\n    for(it = shoppingCar.begin();it != shoppingCar.end();++it){\n        if((*it).no == 1){\n            again = false;\n            (*it).amount += n;\n            break;\n        }\n    }\n    if(again){\n        commodity temp = {1,\"Bread\",1.00,n};\n        shoppingCar.push_back(temp);\n    }\n\n    system(\"cls\");\n    cout << \"I Hank You!\" << endl;\n    cout << \"You Have Selected  [Bread],    $1.00 * \" << n << endl;\n    cout << \"-------------------\" <<endl << endl;\n    do{\n        cout <<\"<1>  Continue Buy       <2>  Settlement & Exit\" << endl;\n        cout <<\"Please Select A Number To Continue Buy Or Settle&Exit :  \";\n        cin >> n;\n        switch(n){\n            case 1 : system(\"cls\");break;\n            case 2 : flag = settlementAndExit();break;\n            default : n = 0;\n                               cout << \"Please Right Number, Press Any Key To Continue!\";\n                               cin.get();\n                               system(\"cls\");\n                               break;\n        }\n    }while(!n);\n}\n\nvoid buyCocacola(){\n    system(\"cls\");\n    int n;\n    cout << \"Please Input The Coca Cola Amount:  \";\n    cin >> n;\n    bool again = true;\n    vector<commodity>::iterator it;\n    for(it = shoppingCar.begin();it != shoppingCar.end();++it){\n        if((*it).no == 2){\n            again = false;\n            (*it).amount += n;\n            break;\n        }\n    }\n    if(again){\n        commodity temp = {2,\"Coca\",2.50,n};\n        shoppingCar.push_back(temp);\n    }\n    system(\"cls\");\n    cout << \"I Hank You!\" << endl;\n    cout << \"You Have Selected  [Coca Cola],    $2.50 * \" << n << endl;\n    cout << \"-------------------\" <<endl << endl;\n    do{\n        cout <<\"<1>  Continue Buy       <2>  Settlement & Exit\" << endl;\n        cout <<\"Please Select A Number To Continue Buy Or Settle&Exit :  \";\n        cin >> n;\n        switch(n){\n            case 1 : system(\"cls\");break;\n            case 2 : flag = settlementAndExit();break;\n            default : n = 0;\n                               cout << \"Please Right Number, Press Any Key To Continue!\";\n                               cin.get();\n                               system(\"cls\");\n                               break;\n        }\n    }while(!n);\n}\n\nvoid buyBeer(){\n    system(\"cls\");\n    int n;\n    cout << \"Please Input The Beer Amount:  \";\n    cin >> n;\n    bool again = true;\n    vector<commodity>::iterator it;\n    for(it = shoppingCar.begin();it != shoppingCar.end();++it){\n        if((*it).no == 3){\n            again = false;\n            (*it).amount += n;\n            break;\n        }\n    }\n    if(again){\n        commodity temp = {3,\"Beer\",10.00,n};\n        shoppingCar.push_back(temp);\n    }\n    system(\"cls\");\n    cout << \"I Hank You!\" << endl;\n    cout << \"You Have Selected  [Beer],    $10.00 * \" << n << endl;\n    cout << \"-------------------\" <<endl << endl;\n    do{\n        cout <<\"<1>  Continue Buy       <2>  Settlement & Exit\" << endl;\n        cout <<\"Please Select A Number To Continue Buy Or Settle&Exit :  \";\n        cin >> n;\n        switch(n){\n            case 1 : system(\"cls\");break;\n            case 2 : flag = settlementAndExit();break;\n            default : n = 0;\n                               cout << \"Please Right Number, Press Any Key To Continue!\";\n                               cin.get();\n                               system(\"cls\");\n                               break;\n        }\n    }while(!n);\n}\n\nvoid buyChocolates(){\n    system(\"cls\");\n    int n;\n    cout << \"Please Input The Chocolates Amount:  \";\n    cin >> n;\n    bool again = true;\n    vector<commodity>::iterator it;\n    for(it = shoppingCar.begin();it != shoppingCar.end();++it){\n        if((*it).no == 4){\n            again = false;\n            (*it).amount += n;\n            break;\n        }\n    }\n    if(again){\n        commodity temp = {4,\"Choc\",2.50,n};\n        shoppingCar.push_back(temp);\n    }\n    system(\"cls\");\n    cout << \"I Hank You!\" << endl;\n    cout << \"You Have Selected  [Chocolates],    $2.50 * \" << n << endl;\n    cout << \"-------------------\" <<endl << endl;\n    do{\n        cout <<\"<1>  Continue Buy       <2>  Settlement & Exit\" << endl;\n        cout <<\"Please Select A Number To Continue Buy Or Settle&Exit :  \";\n        cin >> n;\n        switch(n){\n            case 1 : system(\"cls\");break;\n            case 2 : flag = settlementAndExit();break;\n            default : n = 0;\n                               cout << \"Please Right Number, Press Any Key To Continue!\";\n                               cin.get();\n                               system(\"cls\");\n                               break;\n        }\n    }while(!n);\n}\nint main()\n{\n\t//更改控制台标题\n    system(\"title Xiao Fang  Conveniences Store \");\n    //更改窗口大小\n    system(\"mode con cols=50 lines=15\");\n    //更改背景和前景色\n    system(\"color F5\");\n    //主界面\n    do{\n         int temp;\n         cout << \"Store\" << endl;\n         cout << \"*************************************************\" << endl;\n         cout << \"        Xiao Fang  Conveniences Store\"<<endl;\n         cout << \"*************************************************\" << endl;\n         cout << \"<1>  Bread         1.00\" << endl;\n         cout << \"<2>  Coca cola     2.50\" << endl;\n         cout << \"<3>  Beer          10.00\" << endl;\n         cout << \"<4>  Chocolates    2.50\" << endl << endl;\n         cout << \"<0>  Settlement & Exit\" << endl;\n         cout << \"-------------------------------------------------\" << endl;\n         cout << \"Please Select A Number: \";\n         cin >> temp;\n\n         switch(temp){\n             case 1 : buyBread();break;\n             case 2 : buyCocacola();break;\n             case 3 : buyBeer();break;\n             case 4 : buyChocolates();break;\n             case 0 : flag = settlementAndExit();break;\n             default : system(\"cls\");\n                                cout << \"Please Right Number,press any key to choose again! \";\n                                system(\"pause\");\n                                break;\n         }\n         system(\"cls\");\n    }while(flag);\n\n    return 0;\n}\n\n```\n\n**测试用例：**\n\nTest1：主界面测试\n![1](https://img-blog.csdnimg.cn/20200422142812819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\nTest2：bread购买界面测试\n\n![21](https://img-blog.csdnimg.cn/20200422142823688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n![22](https://img-blog.csdnimg.cn/20200422142834904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\nTest3：coca cola购买界面测试\n![3](https://img-blog.csdnimg.cn/20200422142846118.png)\nTest4：beer购买界面测试\n![4](https://img-blog.csdnimg.cn/20200422142903332.png)\n\nTest5：chocolates购买界面测试\n\n![5](https://img-blog.csdnimg.cn/20200422142915487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\nTest6：结算退出界面测试\n![6](https://img-blog.csdnimg.cn/20200422142926191.png)\n其余功能这里不做展示（所有功能经测试都是可行的）\n\n***\n","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>界面要求：<br><img src=\"https://img-blog.csdnimg.cn/2020042214180896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"主界面\">如果选择了 1（2、3、4类似）界面如下：<br><img src=\"https://img-blog.csdnimg.cn/20200422141919634.png\" alt=\"1\">如果选择了 0<br><img src=\"https://img-blog.csdnimg.cn/20200422141952561.png\" alt=\"0\"></p>\n<hr>\n<a id=\"more\"></a>\n\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p><strong>输入：</strong><br>用户输入功能选择的编号和购买商品时的数量</p>\n<p><strong>输出：</strong><br>主菜单、各类商品的购买、以及结算退出的界面</p>\n<p><strong>主要处理过程：</strong><br>根据用户的选择切换界面并将用户要购买的商品存储在结构体数组里，最后在用户退出时结算并退出。</p>\n<hr>\n<h2 id=\"流程设计\"><a href=\"#流程设计\" class=\"headerlink\" title=\"流程设计\"></a>流程设计</h2><p><img src=\"https://img-blog.csdnimg.cn/20200422142129775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"process\"></p>\n<hr>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;windows.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//存放顾客购买的商品信息</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">commodity</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> no;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> price;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> amount;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//标志循环是否结束的标志</span></span><br><span class=\"line\"><span class=\"keyword\">bool</span> flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"comment\">//存放顾客购买商品的数组</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;commodity&gt; shoppingCar;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//结算退出界面，主要完成已购买商品的信息输出和总额的计算</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">settlementAndExit</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">double</span> sum = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"ShoppingCar Commodity List:\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"no\\tname\\tprice\\tamount\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"comment\">//输出已购买商品的信息</span></span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;commodity&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = shoppingCar.begin();it != shoppingCar.end();it++)&#123;</span><br><span class=\"line\">        commodity p = *it;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; p.no &lt;&lt; <span class=\"string\">\"\\t\"</span> &lt;&lt; p.name &lt;&lt;<span class=\"string\">\"\\t\"</span>&lt;&lt;p.price&lt;&lt;<span class=\"string\">\"\\t\"</span>&lt;&lt;p.amount &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        sum += p.price * p.amount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"string\">\"Totally Need To Pay:  \"</span> &lt;&lt; sum &lt;&lt; <span class=\"string\">\"元\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Good Bye!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Press Any to Exit! \"</span>;</span><br><span class=\"line\">    system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Bread购买界面，其余商品类似，不做过多说明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">buyBread</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Input The Bread Amount:  \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> again = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;commodity&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((*it).no == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            again = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            (*it).amount += n;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(again)&#123;</span><br><span class=\"line\">        commodity temp = &#123;<span class=\"number\">1</span>,<span class=\"string\">\"Bread\"</span>,<span class=\"number\">1.00</span>,n&#125;;</span><br><span class=\"line\">        shoppingCar.push_back(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I Hank You!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"You Have Selected  [Bread],    $1.00 * \"</span> &lt;&lt; n &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-------------------\"</span> &lt;&lt;<span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"&lt;1&gt;  Continue Buy       &lt;2&gt;  Settlement &amp; Exit\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"Please Select A Number To Continue Buy Or Settle&amp;Exit :  \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(n)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span> : system(<span class=\"string\">\"cls\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span> : flag = settlementAndExit();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span> : n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Right Number, Press Any Key To Continue!\"</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cin</span>.get();</span><br><span class=\"line\">                               system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">                               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(!n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">buyCocacola</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Input The Coca Cola Amount:  \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> again = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;commodity&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((*it).no == <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            again = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            (*it).amount += n;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(again)&#123;</span><br><span class=\"line\">        commodity temp = &#123;<span class=\"number\">2</span>,<span class=\"string\">\"Coca\"</span>,<span class=\"number\">2.50</span>,n&#125;;</span><br><span class=\"line\">        shoppingCar.push_back(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I Hank You!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"You Have Selected  [Coca Cola],    $2.50 * \"</span> &lt;&lt; n &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-------------------\"</span> &lt;&lt;<span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"&lt;1&gt;  Continue Buy       &lt;2&gt;  Settlement &amp; Exit\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"Please Select A Number To Continue Buy Or Settle&amp;Exit :  \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(n)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span> : system(<span class=\"string\">\"cls\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span> : flag = settlementAndExit();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span> : n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Right Number, Press Any Key To Continue!\"</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cin</span>.get();</span><br><span class=\"line\">                               system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">                               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(!n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">buyBeer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Input The Beer Amount:  \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> again = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;commodity&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((*it).no == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">            again = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            (*it).amount += n;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(again)&#123;</span><br><span class=\"line\">        commodity temp = &#123;<span class=\"number\">3</span>,<span class=\"string\">\"Beer\"</span>,<span class=\"number\">10.00</span>,n&#125;;</span><br><span class=\"line\">        shoppingCar.push_back(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I Hank You!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"You Have Selected  [Beer],    $10.00 * \"</span> &lt;&lt; n &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-------------------\"</span> &lt;&lt;<span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"&lt;1&gt;  Continue Buy       &lt;2&gt;  Settlement &amp; Exit\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"Please Select A Number To Continue Buy Or Settle&amp;Exit :  \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(n)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span> : system(<span class=\"string\">\"cls\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span> : flag = settlementAndExit();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span> : n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Right Number, Press Any Key To Continue!\"</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cin</span>.get();</span><br><span class=\"line\">                               system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">                               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(!n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">buyChocolates</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Input The Chocolates Amount:  \"</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> again = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;commodity&gt;::iterator it;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(it = shoppingCar.begin();it != shoppingCar.end();++it)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((*it).no == <span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">            again = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            (*it).amount += n;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(again)&#123;</span><br><span class=\"line\">        commodity temp = &#123;<span class=\"number\">4</span>,<span class=\"string\">\"Choc\"</span>,<span class=\"number\">2.50</span>,n&#125;;</span><br><span class=\"line\">        shoppingCar.push_back(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I Hank You!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"You Have Selected  [Chocolates],    $2.50 * \"</span> &lt;&lt; n &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-------------------\"</span> &lt;&lt;<span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"&lt;1&gt;  Continue Buy       &lt;2&gt;  Settlement &amp; Exit\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt;<span class=\"string\">\"Please Select A Number To Continue Buy Or Settle&amp;Exit :  \"</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(n)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span> : system(<span class=\"string\">\"cls\"</span>);<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span> : flag = settlementAndExit();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span> : n = <span class=\"number\">0</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Right Number, Press Any Key To Continue!\"</span>;</span><br><span class=\"line\">                               <span class=\"built_in\">cin</span>.get();</span><br><span class=\"line\">                               system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">                               <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(!n);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//更改控制台标题</span></span><br><span class=\"line\">    system(<span class=\"string\">\"title Xiao Fang  Conveniences Store \"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//更改窗口大小</span></span><br><span class=\"line\">    system(<span class=\"string\">\"mode con cols=50 lines=15\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//更改背景和前景色</span></span><br><span class=\"line\">    system(<span class=\"string\">\"color F5\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//主界面</span></span><br><span class=\"line\">    <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Store\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*************************************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"        Xiao Fang  Conveniences Store\"</span>&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"*************************************************\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"&lt;1&gt;  Bread         1.00\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"&lt;2&gt;  Coca cola     2.50\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"&lt;3&gt;  Beer          10.00\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"&lt;4&gt;  Chocolates    2.50\"</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"&lt;0&gt;  Settlement &amp; Exit\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"-------------------------------------------------\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Select A Number: \"</span>;</span><br><span class=\"line\">         <span class=\"built_in\">cin</span> &gt;&gt; temp;</span><br><span class=\"line\"></span><br><span class=\"line\">         <span class=\"keyword\">switch</span>(temp)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> <span class=\"number\">1</span> : buyBread();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> <span class=\"number\">2</span> : buyCocacola();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> <span class=\"number\">3</span> : buyBeer();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> <span class=\"number\">4</span> : buyChocolates();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">             <span class=\"keyword\">case</span> <span class=\"number\">0</span> : flag = settlementAndExit();<span class=\"keyword\">break</span>;</span><br><span class=\"line\">             <span class=\"keyword\">default</span> : system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">                                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Please Right Number,press any key to choose again! \"</span>;</span><br><span class=\"line\">                                system(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">         system(<span class=\"string\">\"cls\"</span>);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span>(flag);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>测试用例：</strong></p>\n<p>Test1：主界面测试<br><img src=\"https://img-blog.csdnimg.cn/20200422142812819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"1\"></p>\n<p>Test2：bread购买界面测试</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200422142823688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"21\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200422142834904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"22\"></p>\n<p>Test3：coca cola购买界面测试<br><img src=\"https://img-blog.csdnimg.cn/20200422142846118.png\" alt=\"3\"><br>Test4：beer购买界面测试<br><img src=\"https://img-blog.csdnimg.cn/20200422142903332.png\" alt=\"4\"></p>\n<p>Test5：chocolates购买界面测试</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200422142915487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"5\"><br>Test6：结算退出界面测试<br><img src=\"https://img-blog.csdnimg.cn/20200422142926191.png\" alt=\"6\"><br>其余功能这里不做展示（所有功能经测试都是可行的）</p>\n<hr>\n","slug":"便利店小程序","updated":"2020-04-22T07:22:02.481Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/22/%E4%BE%BF%E5%88%A9%E5%BA%97%E5%B0%8F%E7%A8%8B%E5%BA%8F/","excerpt":"问题描述界面要求：如果选择了 1（2、3、4类似）界面如下：如果选择了 0","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"控制台标题、大小、前景色和背景色的两种改变方式","date":"2020-04-22T07:13:36.000Z","path":"2020/04/22/控制台标题、大小、前景色和背景色的两种改变方式-md/","text":"system函数注：要想使用system函数必须包括 &lt;windows.h&gt;的头文件 设置控制台标题 12//设置新的标题为testsystem(\"tilte test\") 设置控制台窗口大小 12//设置控制台窗口大小为宽30，高20system(\"mode con cols=30 lines=20\"); 设置控制台前景色和背景色 12345678910//color后面的参数第一个数字为背景色号第二个数字为文字色号system(\"color 8E\");//附各颜色的代码对照表/* 0=黑色 1=蓝色 2=绿色 3=湖蓝色 4=红色 5=紫色 6=黄色 7=白色 8=灰色 9=淡蓝色 A=淡绿色 B=淡浅绿色 C=淡红色 D=淡紫色 E=淡黄色 F=亮白色*/ API函数注：要想使用API函数也必须包括 &lt;windows.h&gt;的头文件 设置控制台标题 12//设置新的标题为testSetConsoleTitle(\"test\"); 设置控制台窗口大小 123456789101112131415161718192021 //取得输出句柄 HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE); //为COORD结构体赋值，作为缓冲区大小的参数 COORD size_x; size_x.X = 51;//宽 size_x.Y = 21;//高 //设置缓冲区大小为宽51高21 SetConsoleScreenBufferSize(hOut,size_x); //为SMALL_RECT结构体赋值，作为显示的窗口大小的参数 SMALL_RECT rc; //确定左上角顶点位置再确定宽和高就可以在平面中确定唯一矩形 //规定开始显示的窗口左上角顶点距离设置好的缓冲区矩形框距离左侧为5 rc.Left = 0; //规定开始显示的窗口左上角顶点距离设置好的缓冲区矩形框距离上侧为5 rc.Top = 0; //规定开始显示的窗口宽为40 rc.Right = 40; //规定开始显示的窗口高为20 rc.Bottom = 20; SetConsoleWindowInfo(hOut, TRUE, &amp;rc);//设置窗口大小//注意：这里的显示窗口不可以等于或大于缓冲区的大小 设置控制台前景色和背景色 1234567891011//取标准输入输出句柄HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);//设置文字颜色为绿色//FOREGROUND_INTENSITY表示将设置的颜色高亮显示SetConsoleTextAttribute(handle,FOREGROUND_INTENSITY | FOREGROUND_GREEN);//设置背景色为蓝色SetConsoleTextAttribute(handle,BACKGROUND_INTENSITY | BACKGROUND_BLUE);//也可以同时设置背景色与前景色SetConsoleTextAttribute(handle,0xF);//附该函数的详细使用说明//https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin 使用特点：system函数使用语法简单，但是在改变背景色上以最后修改的颜色为准，故无法达到多种颜色兼容存在，但是API函数可以很好的做到这一点。在改变窗口大小的问题上 system 修改后的窗口只是固定的大小，而API函数修改后的窗口有滚动条可以滑动查看不再窗口范围内的内容。 综上：在修改控制台标题是=时两种方式都推荐在修改控制台窗口大小上视情况而定在修改背景和前景色时若想使用多种颜色方案，使用API函数使用单一的配色方案，使用system函数比较方便","raw":"---\ntitle: 控制台标题、大小、前景色和背景色的两种改变方式\ndate: 2020-04-22 15:13:36\ncopyright: true\ntags: [cmd]\ncategories: [cmd]\n---\n\n### system函数\n*注：要想使用system函数必须包括 <windows.h>的头文件*\n\n<br>\n\n - 设置控制台标题\n\n   <!-- more -->\n\n\n```cpp\n//设置新的标题为test\nsystem(\"tilte test\")\n```\n\n - 设置控制台窗口大小\n\n\n```cpp\n//设置控制台窗口大小为宽30，高20\nsystem(\"mode con cols=30 lines=20\");\n```\n\n - 设置控制台前景色和背景色\n\n\n```cpp\n//color后面的参数第一个数字为背景色号第二个数字为文字色号\nsystem(\"color 8E\");\n//附各颜色的代码对照表\n/*\n\t0=黑色 1=蓝色 2=绿色 3=湖蓝色\n\t4=红色 5=紫色 6=黄色 7=白色 \n\t8=灰色 9=淡蓝色 \n\tA=淡绿色 B=淡浅绿色 C=淡红色 D=淡紫色 \n\tE=淡黄色 F=亮白色\n*/\n```\n\n### API函数\n*注：要想使用API函数也必须包括 <windows.h>的头文件*\n<br>\n\n- 设置控制台标题\n\n```cpp\n//设置新的标题为test\nSetConsoleTitle(\"test\");\n```\n\n- 设置控制台窗口大小\n\n```cpp\n\t//取得输出句柄\n    HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);\n    //为COORD结构体赋值，作为缓冲区大小的参数\n    COORD size_x;\n    size_x.X = 51;//宽\n    size_x.Y = 21;//高\n    //设置缓冲区大小为宽51高21\n    SetConsoleScreenBufferSize(hOut,size_x);\n    //为SMALL_RECT结构体赋值，作为显示的窗口大小的参数\n    SMALL_RECT rc;\n    //确定左上角顶点位置再确定宽和高就可以在平面中确定唯一矩形\n    //规定开始显示的窗口左上角顶点距离设置好的缓冲区矩形框距离左侧为5\n    rc.Left = 0;\n    //规定开始显示的窗口左上角顶点距离设置好的缓冲区矩形框距离上侧为5\n    rc.Top = 0;\n    //规定开始显示的窗口宽为40\n    rc.Right = 40;\n    //规定开始显示的窗口高为20\n    rc.Bottom = 20;\n    SetConsoleWindowInfo(hOut, TRUE, &rc);//设置窗口大小\n//注意：这里的显示窗口不可以等于或大于缓冲区的大小\n```\n\n- 设置控制台前景色和背景色\n\n```cpp\n\t//取标准输入输出句柄\n\tHANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);\n\t//设置文字颜色为绿色\n\t//FOREGROUND_INTENSITY表示将设置的颜色高亮显示\n\tSetConsoleTextAttribute(handle,FOREGROUND_INTENSITY | FOREGROUND_GREEN);\n\t//设置背景色为蓝色\n\tSetConsoleTextAttribute(handle,BACKGROUND_INTENSITY | BACKGROUND_BLUE);\n\t//也可以同时设置背景色与前景色\n\tSetConsoleTextAttribute(handle,0xF);\n\t//附该函数的详细使用说明\n\t//https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin\n\n```\n\n**使用特点：**\nsystem函数使用语法简单，但是在改变背景色上以最后修改的颜色为准，故无法达到多种颜色兼容存在，但是API函数可以很好的做到这一点。在改变窗口大小的问题上 system 修改后的窗口只是固定的大小，而API函数修改后的窗口有滚动条可以滑动查看不再窗口范围内的内容。\n\n综上：\n在修改控制台标题是=时两种方式都推荐\n在修改控制台窗口大小上视情况而定\n在修改背景和前景色时\n若想使用多种颜色方案，使用API函数\n使用单一的配色方案，使用system函数比较方便\n\n\n","content":"<h3 id=\"system函数\"><a href=\"#system函数\" class=\"headerlink\" title=\"system函数\"></a>system函数</h3><p><em>注：要想使用system函数必须包括 &lt;windows.h&gt;的头文件</em></p>\n<br>\n\n<ul>\n<li><p>设置控制台标题</p>\n<a id=\"more\"></a>\n\n\n</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//设置新的标题为test</span></span><br><span class=\"line\">system(<span class=\"string\">\"tilte test\"</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置控制台窗口大小</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//设置控制台窗口大小为宽30，高20</span></span><br><span class=\"line\">system(<span class=\"string\">\"mode con cols=30 lines=20\"</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置控制台前景色和背景色</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//color后面的参数第一个数字为背景色号第二个数字为文字色号</span></span><br><span class=\"line\">system(<span class=\"string\">\"color 8E\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//附各颜色的代码对照表</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t0=黑色 1=蓝色 2=绿色 3=湖蓝色</span></span><br><span class=\"line\"><span class=\"comment\">\t4=红色 5=紫色 6=黄色 7=白色 </span></span><br><span class=\"line\"><span class=\"comment\">\t8=灰色 9=淡蓝色 </span></span><br><span class=\"line\"><span class=\"comment\">\tA=淡绿色 B=淡浅绿色 C=淡红色 D=淡紫色 </span></span><br><span class=\"line\"><span class=\"comment\">\tE=淡黄色 F=亮白色</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"API函数\"><a href=\"#API函数\" class=\"headerlink\" title=\"API函数\"></a>API函数</h3><p><em>注：要想使用API函数也必须包括 &lt;windows.h&gt;的头文件</em><br><br></p>\n<ul>\n<li>设置控制台标题</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//设置新的标题为test</span></span><br><span class=\"line\">SetConsoleTitle(<span class=\"string\">\"test\"</span>);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置控制台窗口大小</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"comment\">//取得输出句柄</span></span><br><span class=\"line\">    HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class=\"line\">    <span class=\"comment\">//为COORD结构体赋值，作为缓冲区大小的参数</span></span><br><span class=\"line\">    COORD size_x;</span><br><span class=\"line\">    size_x.X = <span class=\"number\">51</span>;<span class=\"comment\">//宽</span></span><br><span class=\"line\">    size_x.Y = <span class=\"number\">21</span>;<span class=\"comment\">//高</span></span><br><span class=\"line\">    <span class=\"comment\">//设置缓冲区大小为宽51高21</span></span><br><span class=\"line\">    SetConsoleScreenBufferSize(hOut,size_x);</span><br><span class=\"line\">    <span class=\"comment\">//为SMALL_RECT结构体赋值，作为显示的窗口大小的参数</span></span><br><span class=\"line\">    SMALL_RECT rc;</span><br><span class=\"line\">    <span class=\"comment\">//确定左上角顶点位置再确定宽和高就可以在平面中确定唯一矩形</span></span><br><span class=\"line\">    <span class=\"comment\">//规定开始显示的窗口左上角顶点距离设置好的缓冲区矩形框距离左侧为5</span></span><br><span class=\"line\">    rc.Left = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//规定开始显示的窗口左上角顶点距离设置好的缓冲区矩形框距离上侧为5</span></span><br><span class=\"line\">    rc.Top = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//规定开始显示的窗口宽为40</span></span><br><span class=\"line\">    rc.Right = <span class=\"number\">40</span>;</span><br><span class=\"line\">    <span class=\"comment\">//规定开始显示的窗口高为20</span></span><br><span class=\"line\">    rc.Bottom = <span class=\"number\">20</span>;</span><br><span class=\"line\">    SetConsoleWindowInfo(hOut, TRUE, &amp;rc);<span class=\"comment\">//设置窗口大小</span></span><br><span class=\"line\"><span class=\"comment\">//注意：这里的显示窗口不可以等于或大于缓冲区的大小</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>设置控制台前景色和背景色</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//取标准输入输出句柄</span></span><br><span class=\"line\">HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class=\"line\"><span class=\"comment\">//设置文字颜色为绿色</span></span><br><span class=\"line\"><span class=\"comment\">//FOREGROUND_INTENSITY表示将设置的颜色高亮显示</span></span><br><span class=\"line\">SetConsoleTextAttribute(handle,FOREGROUND_INTENSITY | FOREGROUND_GREEN);</span><br><span class=\"line\"><span class=\"comment\">//设置背景色为蓝色</span></span><br><span class=\"line\">SetConsoleTextAttribute(handle,BACKGROUND_INTENSITY | BACKGROUND_BLUE);</span><br><span class=\"line\"><span class=\"comment\">//也可以同时设置背景色与前景色</span></span><br><span class=\"line\">SetConsoleTextAttribute(handle,<span class=\"number\">0xF</span>);</span><br><span class=\"line\"><span class=\"comment\">//附该函数的详细使用说明</span></span><br><span class=\"line\"><span class=\"comment\">//https://baike.baidu.com/item/SetConsoleTextAttribute/570121?fr=aladdin</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>使用特点：</strong><br>system函数使用语法简单，但是在改变背景色上以最后修改的颜色为准，故无法达到多种颜色兼容存在，但是API函数可以很好的做到这一点。在改变窗口大小的问题上 system 修改后的窗口只是固定的大小，而API函数修改后的窗口有滚动条可以滑动查看不再窗口范围内的内容。</p>\n<p>综上：<br>在修改控制台标题是=时两种方式都推荐<br>在修改控制台窗口大小上视情况而定<br>在修改背景和前景色时<br>若想使用多种颜色方案，使用API函数<br>使用单一的配色方案，使用system函数比较方便</p>\n","slug":"控制台标题、大小、前景色和背景色的两种改变方式-md","updated":"2020-04-22T07:19:04.642Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/22/%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%A0%87%E9%A2%98%E3%80%81%E5%A4%A7%E5%B0%8F%E3%80%81%E5%89%8D%E6%99%AF%E8%89%B2%E5%92%8C%E8%83%8C%E6%99%AF%E8%89%B2%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%94%B9%E5%8F%98%E6%96%B9%E5%BC%8F-md/","excerpt":"system函数注：要想使用system函数必须包括 &lt;windows.h&gt;的头文件 设置控制台标题","categories":[{"name":"cmd","slug":"cmd","permalink":"https://mt-procode.github.io/categories/cmd/"}],"tags":[{"name":"cmd","slug":"cmd","permalink":"https://mt-procode.github.io/tags/cmd/"}]},{"title":"main函数参数的简单使用","date":"2020-04-22T04:48:23.000Z","path":"2020/04/22/main函数参数的简单使用/","text":"写在前面C++中 main()函数的参数也可以为main()函数的声明参数表： 1int main(int argc,char* argv[])&#123;......[代码段]&#125; main()函数的参数表用于从命令行接受参数。其中 argc 是命令行参数的个数，字符串数组 argv 用于保存接收到的字符串（注意：argv 字符数组中的每个元素在命令行输入时是以空格区分的，所以输入时不同参数需以空格隔开加以区分） 验证编写的程序是否符合预期，需要在 cmd 或者 powershell（windows）窗口执行生成的 “.exe”文件，下面用一个简单的例子来更好的解释 main()参数的一般用法。 需求：编写一个程序 hello，对命令行输入的一个或者多个名字显示问候语（要求使用带参数的 main() 函数实现） 例如：命令行输入：hello Ron则输出为：Hello Ron！如果输入：hello Harry Ron Hermione则输出：Hello Harry！Hello Ron！Hello Hermione！ 源代码1234567891011#include &lt;iostream&gt;using namespace std;int main(int argc,char* argv[])&#123; for(int i = 1;i &lt;argc;i++) cout &lt;&lt; \"Hello \" &lt;&lt; argv[i] &lt;&lt; \"!\" &lt;&lt; endl; return 0;&#125; 输入样例一：输出：样例输入二：输出：","raw":"---\ntitle: main函数参数的简单使用\ndate: 2020-04-22 12:48:23\ncopyright: true\ntags: [C++,语法]\ncategories: [C++,语法]\n---\n\n### 写在前面\nC++中 main()函数的参数也可以为main()函数的声明参数表：\n\n```powershell\nint main(int argc,char* argv[]){......[代码段]}\n```\nmain()函数的参数表用于从命令行接受参数。\n其中 argc 是命令行参数的个数，字符串数组 argv 用于保存接收到的字符串\n（**注意：argv 字符数组中的每个元素在命令行输入时是以空格区分的，所以输入时不同参数需以空格隔开加以区分**）\n\n验证编写的程序是否符合预期，需要在 cmd 或者 powershell（windows）窗口执行生成的 \".exe\"文件，下面用一个简单的例子来更好的解释 main()参数的一般用法。\n\n<!-- more -->\n\n***\n\n#### 需求：\n编写一个程序 hello，对命令行输入的一个或者多个名字显示问候语（要求使用带参数的 main() 函数实现）\n\n例如：\n*命令行输入：\nhello Ron\n则输出为：\nHello Ron！\n如果输入：\nhello Harry Ron Hermione\n则输出：\nHello Harry！\nHello Ron！\nHello Hermione！*\n\n***\n\n#### 源代码\n\n```powershell\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc,char* argv[])\n{\n    for(int i = 1;i <argc;i++)\n        cout << \"Hello \" << argv[i] << \"!\" << endl;\n\n    return 0;\n}\n\n```\n\n输入样例一：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200422122516984.png)\n输出：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200422122358658.png)\n样例输入二：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200422122613144.png)\n输出：\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200422122646452.png)\n\n---\n\n","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>C++中 main()函数的参数也可以为main()函数的声明参数表：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main(int argc,char* argv[])&#123;......[代码段]&#125;</span><br></pre></td></tr></table></figure>\n<p>main()函数的参数表用于从命令行接受参数。<br>其中 argc 是命令行参数的个数，字符串数组 argv 用于保存接收到的字符串<br>（<strong>注意：argv 字符数组中的每个元素在命令行输入时是以空格区分的，所以输入时不同参数需以空格隔开加以区分</strong>）</p>\n<p>验证编写的程序是否符合预期，需要在 cmd 或者 powershell（windows）窗口执行生成的 “.exe”文件，下面用一个简单的例子来更好的解释 main()参数的一般用法。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h4 id=\"需求：\"><a href=\"#需求：\" class=\"headerlink\" title=\"需求：\"></a>需求：</h4><p>编写一个程序 hello，对命令行输入的一个或者多个名字显示问候语（要求使用带参数的 main() 函数实现）</p>\n<p>例如：<br><em>命令行输入：<br>hello Ron<br>则输出为：<br>Hello Ron！<br>如果输入：<br>hello Harry Ron Hermione<br>则输出：<br>Hello Harry！<br>Hello Ron！<br>Hello Hermione！</em></p>\n<hr>\n<h4 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#include &lt;iostream&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(int argc,char* argv[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(int i = <span class=\"number\">1</span>;i &lt;argc;i++)</span><br><span class=\"line\">        cout &lt;&lt; <span class=\"string\">\"Hello \"</span> &lt;&lt; argv[<span class=\"type\">i</span>] &lt;&lt; <span class=\"string\">\"!\"</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输入样例一：<br><img src=\"https://img-blog.csdnimg.cn/20200422122516984.png\" alt=\"在这里插入图片描述\"><br>输出：<br><img src=\"https://img-blog.csdnimg.cn/20200422122358658.png\" alt=\"在这里插入图片描述\"><br>样例输入二：<br><img src=\"https://img-blog.csdnimg.cn/20200422122613144.png\" alt=\"在这里插入图片描述\"><br>输出：<br><img src=\"https://img-blog.csdnimg.cn/20200422122646452.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n","slug":"main函数参数的简单使用","updated":"2020-04-22T07:29:21.589Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/22/main%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/","excerpt":"写在前面C++中 main()函数的参数也可以为main()函数的声明参数表： 1int main(int argc,char* argv[])&#123;......[代码段]&#125; main()函数的参数表用于从命令行接受参数。其中 argc 是命令行参数的个数，字符串数组 argv 用于保存接收到的字符串（注意：argv 字符数组中的每个元素在命令行输入时是以空格区分的，所以输入时不同参数需以空格隔开加以区分） 验证编写的程序是否符合预期，需要在 cmd 或者 powershell（windows）窗口执行生成的 “.exe”文件，下面用一个简单的例子来更好的解释 main()参数的一般用法。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"语法","slug":"C/语法","permalink":"https://mt-procode.github.io/categories/C/%E8%AF%AD%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"语法","slug":"语法","permalink":"https://mt-procode.github.io/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"人民币值转换问题","date":"2020-04-14T03:33:51.000Z","path":"2020/04/14/人民币值转换问题/","text":"问题描述设计程序完成从阿拉伯数字到人民币风格的字符串转换，需完成的功能如下：1、 由用户输入并保存一个具有两位小数的金额，单位为元；2、 能够对用户输入的人民币金额进行输出；3、 能够将金额数值翻译成中文的表达方式进行输出；4、 程序不断读取用户输入，并给出两种输出，直到用户输入quit 结束执行。 注意事项：1、用户输入纯整数或者纯小数；2、用户输入0或者0.0或者0.00要求输出为‘’零‘’；3、输入不是数字串或者‘quit’或者输入051.42、01.00等都为非法输入；4、有多个零时只显示一个；5、只有整数部分时需要后缀‘整’字样；6、只有小数部分时整数部分的零应该省略。 问题分析输入：用户输入的需要转换的阿拉伯数字串或者终止程序执行的quit命令或者其它非法字符串输出：用户输入的待处理的字符串和（若用户输入的字符串符合处理条件）转换为RMB风格的数值表示结果主要处理过程：采用C风格的字符串接受用户输入判断是否满足处理要求； （1）满足处理条件：将用户输入的字符串数组分为整数部分和小数部分进行处理并输出字符串和处理结果； （2）结束标志‘quit’： 终止程序； （3）非法字符串：提示用户重新输入。 流程设计 程序实现和测试 主要模块1、用户输入判断模块：主要用于判断用户输入的字符串的格式（数字串、终止命令、非法字符串）2、数字串转化模块：主要用于将数字串转化为人民币风格的字符串 （整数部分转化、小数部分转化） 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122#include &lt;iostream&gt;#include &lt;string&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;math.h&gt;using namespace std;int main()&#123; &#x2F;&#x2F;初始化计量单位和RMB风格的数字表示 char measure[][4] &#x3D; &#123;&quot;元&quot;,&quot;拾&quot;,&quot;佰&quot;,&quot;仟&quot;,&quot;万&quot;,&quot;亿&quot;&#125;; char numchar[][4] &#x3D; &#123;&quot;零&quot;,&quot;壹&quot;,&quot;贰&quot;,&quot;叁&quot;,&quot;肆&quot;,&quot;伍&quot;,&quot;陆&quot;,&quot;柒&quot;,&quot;捌&quot;,&quot;玖&quot;&#125;;while(true)&#123; &#x2F;&#x2F;接收用户输入的字符串 int flag &#x3D; 1; char instr[30]; cin &gt;&gt; instr; char* p &#x3D; instr; if(*p &#x3D;&#x3D; &#39;0&#39; &amp;&amp; (*(p+1)!&#x3D;&#39;.&#39; &amp;&amp; *(p+1) !&#x3D;&#39;\\0&#39;)) flag &#x3D; 0; else while(*p)&#123; if(!isdigit(*p) &amp;&amp; *p !&#x3D;&#39;.&#39;)&#123; flag &#x3D; 0; break; &#125; p ++; &#125; if(flag &#x3D;&#x3D; 1)&#123; &#x2F;&#x2F;将输入的数字串转化为浮点型数据 long double num1 &#x3D; atof(instr); &#x2F;&#x2F;获得输入的整数部分 long int sector1 &#x3D; static_cast&lt;long int&gt;(num1); &#x2F;&#x2F;获得输入的小数部分 float sector2 &#x3D; num1 - sector1; &#x2F;&#x2F;判断是否是数字串 if(fabs(sector2) &lt; 1e-6 &amp;&amp; sector1 &#x3D;&#x3D; 0)&#123; cout &lt;&lt; &quot;零&quot; &lt;&lt; endl; continue; &#125; &#x2F;&#x2F;将存放转化数据的串初始化为空 string ostr &#x3D; &quot;&quot;; &#x2F;&#x2F;将整数部分再转化为字符串存放在temp字符串中 char temp[20]; ltoa(sector1,temp,10); p &#x3D; temp; int num &#x3D; strlen(temp);&#x2F;&#x2F;整数部分位数 for(int i &#x3D; 1;i &lt;&#x3D;num;i++)&#123; if(sector1 &#x3D;&#x3D; 0) break; &#x2F;&#x2F;定义k控制数字转换和计量单位的选择 int k &#x3D; (num - i) % 4; &#x2F;&#x2F;将正在处理的字符串的数字位转化为数值 int judgNum &#x3D; *p &amp; 15; &#x2F;&#x2F;数字转化部分 if(judgNum) ostr +&#x3D; numchar[judgNum]; else&#123; if(k &amp;&amp; (*(p+1)&amp;15)) ostr +&#x3D; &quot;零&quot;; &#125; &#x2F;&#x2F;计量单位转化 if(k)&#123; if(judgNum) ostr +&#x3D; measure[k]; &#125; else&#123; int j &#x3D; num - i; if(j) ostr +&#x3D; measure[j&#x2F;4 +3]; else ostr +&#x3D; &quot;元&quot;; &#125; p++; &#125; &#x2F;&#x2F;处理小数部分 if(fabs(sector2) &lt; 1e-6) ostr +&#x3D; &quot;整&quot;; else&#123; p &#x3D; instr; while(*p)&#123; if(*p &#x3D;&#x3D; &#39;.&#39;) break; p++; &#125; if(*(p+1)&#x3D;&#x3D;&#39;0&#39;) ostr &#x3D; ostr+ numchar[*(p+2) &amp; 15] + &quot;分&quot;; else&#123; ostr &#x3D; ostr + numchar[*(p+1)&amp;15] +&quot;角&quot; ; if(*(p+2)!&#x3D;&#39;\\0&#39; &amp;&amp; *(p+2) !&#x3D; &#39;0&#39;) ostr &#x3D; ostr + numchar[*(p+2)&amp;15] + &quot;分&quot;; &#125; &#125; &#x2F;&#x2F;输出源字符串和处理后字符串 cout &lt;&lt; &quot;primitive str: &quot; &lt;&lt; instr &lt;&lt; endl &lt;&lt; &quot;RMB: &quot; &lt;&lt; ostr &lt;&lt; endl; &#125; else&#123; if(!strcmp(instr,&quot;quit&quot;))&#123; cout &lt;&lt; &quot;program have been stopped!&quot; &lt;&lt; endl; break; &#125; else&#123; cout &lt;&lt; &quot;your&#39;s input is illegal,please input legal data! &quot; &lt;&lt; endl; &#125; &#125;&#125; return 0;&#125; 测试用例)","raw":"---\ntitle: 人民币值转换问题\ncopyright: true\ndate: 2020-04-14 11:33:51\ntags:\n\t- C++\n\t- 算法\ncategories: [C++,算法]\n---\n\n# 问题描述\n设计程序完成从阿拉伯数字到人民币风格的字符串转换，需完成的功能如下：\n1、 由用户输入并保存一个具有两位小数的金额，单位为元；\n2、 能够对用户输入的人民币金额进行输出；\n3、 能够将金额数值翻译成中文的表达方式进行输出；\n4、 程序不断读取用户输入，并给出两种输出，直到用户输入quit 结束执行。\n\n***注意事项：***\n1、用户输入纯整数或者纯小数；\n2、用户输入0或者0.0或者0.00要求输出为‘’零‘’；\n3、输入不是数字串或者‘quit’或者输入051.42、01.00等都为非法输入；\n4、有多个零时只显示一个；\n5、只有整数部分时需要后缀‘整’字样；\n6、只有小数部分时整数部分的零应该省略。\n\n<!-- more -->\n\n***\n\n## 问题分析\n**输入：**\n用户输入的需要转换的阿拉伯数字串或者终止程序执行的quit命令或者其它非法字符串\n**输出：**\n用户输入的待处理的字符串和（若用户输入的字符串符合处理条件）转换为RMB风格的数值表示结果\n**主要处理过程：**\n采用C风格的字符串接受用户输入判断是否满足处理要求；\n  （1）满足处理条件：将用户输入的字符串数组分为整数部分和小数部分进行处理并输出字符串和处理结果；\n  （2）结束标志‘quit’： 终止程序；\n  （3）非法字符串：提示用户重新输入。\n***\n## 流程设计\n![process](https://img-blog.csdnimg.cn/20200414112230406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n\n## 程序实现和测试\n<br><br>\n\n#### 主要模块\n**1、用户输入判断模块：**\n主要用于判断用户输入的字符串的格式\n（数字串、终止命令、非法字符串）\n**2、数字串转化模块：**\n主要用于将数字串转化为人民币风格的字符串\n                （整数部分转化、小数部分转化）<br><br>\n***\n#### 源代码\n```\n#include <iostream>\n#include <string>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nusing namespace std;\n\n\nint main()\n{\n    //初始化计量单位和RMB风格的数字表示\n    char measure[][4] = {\"元\",\"拾\",\"佰\",\"仟\",\"万\",\"亿\"};\n    char numchar[][4] = {\"零\",\"壹\",\"贰\",\"叁\",\"肆\",\"伍\",\"陆\",\"柒\",\"捌\",\"玖\"};\n\nwhile(true){\n    //接收用户输入的字符串\n    int flag = 1;\n    char instr[30];\n    cin >> instr;\n    char* p = instr;\n    if(*p == '0' && (*(p+1)!='.' && *(p+1) !='\\0'))\n        flag = 0;\n    else\n    while(*p){\n        if(!isdigit(*p) && *p !='.'){\n            flag = 0;\n            break;\n        }\n        p ++;\n    }\n\n    if(flag == 1){\n                //将输入的数字串转化为浮点型数据\n            long double num1 = atof(instr);\n            //获得输入的整数部分\n            long int sector1 = static_cast<long int>(num1);\n            //获得输入的小数部分\n            float sector2 = num1 - sector1;\n            //判断是否是数字串\n            if(fabs(sector2) < 1e-6 && sector1 == 0){\n                    cout << \"零\" << endl;\n                    continue;\n            }\n\n            //将存放转化数据的串初始化为空\n            string ostr = \"\";\n\n            //将整数部分再转化为字符串存放在temp字符串中\n            char temp[20];\n            ltoa(sector1,temp,10);\n            p = temp;\n            int num = strlen(temp);//整数部分位数\n\n            for(int i = 1;i <=num;i++){\n                if(sector1 == 0)\n                break;\n                //定义k控制数字转换和计量单位的选择\n                int k = (num - i) % 4;\n               //将正在处理的字符串的数字位转化为数值\n                int judgNum = *p & 15;\n\n                //数字转化部分\n                if(judgNum)\n                    ostr += numchar[judgNum];\n                else{\n                    if(k && (*(p+1)&15))\n                        ostr += \"零\";\n                }\n\n                //计量单位转化\n                if(k){\n                    if(judgNum)\n                        ostr += measure[k];\n                }\n                else{\n                    int j = num - i;\n                    if(j)\n                        ostr += measure[j/4 +3];\n                    else\n                        ostr += \"元\";\n                }\n                    p++;\n            }\n\n            //处理小数部分\n\n            if(fabs(sector2) < 1e-6)\n            ostr += \"整\";\n            else{\n                    p = instr;\n                    while(*p){\n                        if(*p == '.')\n                            break;\n                            p++;\n                    }\n                    if(*(p+1)=='0')\n                        ostr = ostr+ numchar[*(p+2) & 15] + \"分\";\n                    else{\n                        ostr = ostr + numchar[*(p+1)&15] +\"角\" ;\n                        if(*(p+2)!='\\0' && *(p+2) != '0')\n                            ostr = ostr + numchar[*(p+2)&15] + \"分\";\n                    }\n            }\n\n            //输出源字符串和处理后字符串\n            cout << \"primitive str: \" << instr << endl << \"RMB: \" << ostr << endl;\n\n    }\n    else{\n        if(!strcmp(instr,\"quit\")){\n            cout << \"program have been stopped!\" << endl;\n            break;\n        }\n        else{\n            cout << \"your's input is illegal,please input legal data! \" << endl;\n        }\n    }\n}\n\n    return 0;\n}\n\n```\n\n***\n\n#### 测试用例\n![test1](https://img-blog.csdnimg.cn/20200414112627103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)![test2](https://img-blog.csdnimg.cn/20200414112651874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n\n","content":"<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>设计程序完成从阿拉伯数字到人民币风格的字符串转换，需完成的功能如下：<br>1、 由用户输入并保存一个具有两位小数的金额，单位为元；<br>2、 能够对用户输入的人民币金额进行输出；<br>3、 能够将金额数值翻译成中文的表达方式进行输出；<br>4、 程序不断读取用户输入，并给出两种输出，直到用户输入quit 结束执行。</p>\n<p><strong><em>注意事项：</em></strong><br>1、用户输入纯整数或者纯小数；<br>2、用户输入0或者0.0或者0.00要求输出为‘’零‘’；<br>3、输入不是数字串或者‘quit’或者输入051.42、01.00等都为非法输入；<br>4、有多个零时只显示一个；<br>5、只有整数部分时需要后缀‘整’字样；<br>6、只有小数部分时整数部分的零应该省略。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p><strong>输入：</strong><br>用户输入的需要转换的阿拉伯数字串或者终止程序执行的quit命令或者其它非法字符串<br><strong>输出：</strong><br>用户输入的待处理的字符串和（若用户输入的字符串符合处理条件）转换为RMB风格的数值表示结果<br><strong>主要处理过程：</strong><br>采用C风格的字符串接受用户输入判断是否满足处理要求；<br>  （1）满足处理条件：将用户输入的字符串数组分为整数部分和小数部分进行处理并输出字符串和处理结果；<br>  （2）结束标志‘quit’： 终止程序；<br>  （3）非法字符串：提示用户重新输入。</p>\n<hr>\n<h2 id=\"流程设计\"><a href=\"#流程设计\" class=\"headerlink\" title=\"流程设计\"></a>流程设计</h2><p><img src=\"https://img-blog.csdnimg.cn/20200414112230406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"process\"></p>\n<hr>\n<h2 id=\"程序实现和测试\"><a href=\"#程序实现和测试\" class=\"headerlink\" title=\"程序实现和测试\"></a>程序实现和测试</h2><p><br><br></p>\n<h4 id=\"主要模块\"><a href=\"#主要模块\" class=\"headerlink\" title=\"主要模块\"></a>主要模块</h4><p><strong>1、用户输入判断模块：</strong><br>主要用于判断用户输入的字符串的格式<br>（数字串、终止命令、非法字符串）<br><strong>2、数字串转化模块：</strong><br>主要用于将数字串转化为人民币风格的字符串<br>                （整数部分转化、小数部分转化）<br><br></p>\n<hr>\n<h4 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;math.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F;初始化计量单位和RMB风格的数字表示</span><br><span class=\"line\">    char measure[][4] &#x3D; &#123;&quot;元&quot;,&quot;拾&quot;,&quot;佰&quot;,&quot;仟&quot;,&quot;万&quot;,&quot;亿&quot;&#125;;</span><br><span class=\"line\">    char numchar[][4] &#x3D; &#123;&quot;零&quot;,&quot;壹&quot;,&quot;贰&quot;,&quot;叁&quot;,&quot;肆&quot;,&quot;伍&quot;,&quot;陆&quot;,&quot;柒&quot;,&quot;捌&quot;,&quot;玖&quot;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">while(true)&#123;</span><br><span class=\"line\">    &#x2F;&#x2F;接收用户输入的字符串</span><br><span class=\"line\">    int flag &#x3D; 1;</span><br><span class=\"line\">    char instr[30];</span><br><span class=\"line\">    cin &gt;&gt; instr;</span><br><span class=\"line\">    char* p &#x3D; instr;</span><br><span class=\"line\">    if(*p &#x3D;&#x3D; &#39;0&#39; &amp;&amp; (*(p+1)!&#x3D;&#39;.&#39; &amp;&amp; *(p+1) !&#x3D;&#39;\\0&#39;))</span><br><span class=\"line\">        flag &#x3D; 0;</span><br><span class=\"line\">    else</span><br><span class=\"line\">    while(*p)&#123;</span><br><span class=\"line\">        if(!isdigit(*p) &amp;&amp; *p !&#x3D;&#39;.&#39;)&#123;</span><br><span class=\"line\">            flag &#x3D; 0;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        p ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if(flag &#x3D;&#x3D; 1)&#123;</span><br><span class=\"line\">                &#x2F;&#x2F;将输入的数字串转化为浮点型数据</span><br><span class=\"line\">            long double num1 &#x3D; atof(instr);</span><br><span class=\"line\">            &#x2F;&#x2F;获得输入的整数部分</span><br><span class=\"line\">            long int sector1 &#x3D; static_cast&lt;long int&gt;(num1);</span><br><span class=\"line\">            &#x2F;&#x2F;获得输入的小数部分</span><br><span class=\"line\">            float sector2 &#x3D; num1 - sector1;</span><br><span class=\"line\">            &#x2F;&#x2F;判断是否是数字串</span><br><span class=\"line\">            if(fabs(sector2) &lt; 1e-6 &amp;&amp; sector1 &#x3D;&#x3D; 0)&#123;</span><br><span class=\"line\">                    cout &lt;&lt; &quot;零&quot; &lt;&lt; endl;</span><br><span class=\"line\">                    continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#x2F;&#x2F;将存放转化数据的串初始化为空</span><br><span class=\"line\">            string ostr &#x3D; &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#x2F;&#x2F;将整数部分再转化为字符串存放在temp字符串中</span><br><span class=\"line\">            char temp[20];</span><br><span class=\"line\">            ltoa(sector1,temp,10);</span><br><span class=\"line\">            p &#x3D; temp;</span><br><span class=\"line\">            int num &#x3D; strlen(temp);&#x2F;&#x2F;整数部分位数</span><br><span class=\"line\"></span><br><span class=\"line\">            for(int i &#x3D; 1;i &lt;&#x3D;num;i++)&#123;</span><br><span class=\"line\">                if(sector1 &#x3D;&#x3D; 0)</span><br><span class=\"line\">                break;</span><br><span class=\"line\">                &#x2F;&#x2F;定义k控制数字转换和计量单位的选择</span><br><span class=\"line\">                int k &#x3D; (num - i) % 4;</span><br><span class=\"line\">               &#x2F;&#x2F;将正在处理的字符串的数字位转化为数值</span><br><span class=\"line\">                int judgNum &#x3D; *p &amp; 15;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#x2F;&#x2F;数字转化部分</span><br><span class=\"line\">                if(judgNum)</span><br><span class=\"line\">                    ostr +&#x3D; numchar[judgNum];</span><br><span class=\"line\">                else&#123;</span><br><span class=\"line\">                    if(k &amp;&amp; (*(p+1)&amp;15))</span><br><span class=\"line\">                        ostr +&#x3D; &quot;零&quot;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#x2F;&#x2F;计量单位转化</span><br><span class=\"line\">                if(k)&#123;</span><br><span class=\"line\">                    if(judgNum)</span><br><span class=\"line\">                        ostr +&#x3D; measure[k];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else&#123;</span><br><span class=\"line\">                    int j &#x3D; num - i;</span><br><span class=\"line\">                    if(j)</span><br><span class=\"line\">                        ostr +&#x3D; measure[j&#x2F;4 +3];</span><br><span class=\"line\">                    else</span><br><span class=\"line\">                        ostr +&#x3D; &quot;元&quot;;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                    p++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#x2F;&#x2F;处理小数部分</span><br><span class=\"line\"></span><br><span class=\"line\">            if(fabs(sector2) &lt; 1e-6)</span><br><span class=\"line\">            ostr +&#x3D; &quot;整&quot;;</span><br><span class=\"line\">            else&#123;</span><br><span class=\"line\">                    p &#x3D; instr;</span><br><span class=\"line\">                    while(*p)&#123;</span><br><span class=\"line\">                        if(*p &#x3D;&#x3D; &#39;.&#39;)</span><br><span class=\"line\">                            break;</span><br><span class=\"line\">                            p++;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    if(*(p+1)&#x3D;&#x3D;&#39;0&#39;)</span><br><span class=\"line\">                        ostr &#x3D; ostr+ numchar[*(p+2) &amp; 15] + &quot;分&quot;;</span><br><span class=\"line\">                    else&#123;</span><br><span class=\"line\">                        ostr &#x3D; ostr + numchar[*(p+1)&amp;15] +&quot;角&quot; ;</span><br><span class=\"line\">                        if(*(p+2)!&#x3D;&#39;\\0&#39; &amp;&amp; *(p+2) !&#x3D; &#39;0&#39;)</span><br><span class=\"line\">                            ostr &#x3D; ostr + numchar[*(p+2)&amp;15] + &quot;分&quot;;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#x2F;&#x2F;输出源字符串和处理后字符串</span><br><span class=\"line\">            cout &lt;&lt; &quot;primitive str: &quot; &lt;&lt; instr &lt;&lt; endl &lt;&lt; &quot;RMB: &quot; &lt;&lt; ostr &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else&#123;</span><br><span class=\"line\">        if(!strcmp(instr,&quot;quit&quot;))&#123;</span><br><span class=\"line\">            cout &lt;&lt; &quot;program have been stopped!&quot; &lt;&lt; endl;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">            cout &lt;&lt; &quot;your&#39;s input is illegal,please input legal data! &quot; &lt;&lt; endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h4 id=\"测试用例\"><a href=\"#测试用例\" class=\"headerlink\" title=\"测试用例\"></a>测试用例</h4><p><img src=\"https://img-blog.csdnimg.cn/20200414112627103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"test1\">)<img src=\"https://img-blog.csdnimg.cn/20200414112651874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"test2\"></p>\n","slug":"人民币值转换问题","updated":"2020-04-22T04:52:06.892Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/14/%E4%BA%BA%E6%B0%91%E5%B8%81%E5%80%BC%E8%BD%AC%E6%8D%A2%E9%97%AE%E9%A2%98/","excerpt":"问题描述设计程序完成从阿拉伯数字到人民币风格的字符串转换，需完成的功能如下：1、 由用户输入并保存一个具有两位小数的金额，单位为元；2、 能够对用户输入的人民币金额进行输出；3、 能够将金额数值翻译成中文的表达方式进行输出；4、 程序不断读取用户输入，并给出两种输出，直到用户输入quit 结束执行。 注意事项：1、用户输入纯整数或者纯小数；2、用户输入0或者0.0或者0.00要求输出为‘’零‘’；3、输入不是数字串或者‘quit’或者输入051.42、01.00等都为非法输入；4、有多个零时只显示一个；5、只有整数部分时需要后缀‘整’字样；6、只有小数部分时整数部分的零应该省略。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Cpp 数组和结构体","date":"2020-04-03T06:26:12.000Z","path":"2020/04/03/Cpp-数组和结构体/","text":"问题描述某位同学邀请k位朋友到家里做客。他拿出了巧克力招待盆友们。他一共有n块巧克力，其中每一块巧克力都是长方形。为了公平起见，这位同学需要从这n块巧克力中分出k块巧克力给盆友们。要求切出的巧克力要满足：1、形状是正方形，边长是整数，且是一整块。2、大小相同、朋友分得的巧克力能尽量的大。请设计算法求出满足要求的最大边长。（输入n，k，其中1 &lt;= n,k &lt;= 100000,且输入应该保证你的盆友们至少可以分得一块1*1的巧克力） 样例输入：2 106 55 6样例输出：2 源代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#include &lt;iostream&gt;using namespace std;const int numMax &#x3D; 50;&#x2F;&#x2F;规定最多有50块巧克力（可以根据需要指定）&#x2F;&#x2F;创建结构体数组，保存用户输入的巧克力的参数struct&#123; int width; int height; int area;&#125;cho[numMax];int main()&#123; int n,k; cout &lt;&lt; &quot;please input the amount of your chocolates:&quot; &lt;&lt; endl; cin &gt;&gt; n; cout &lt;&lt; &quot;please input the amount of your friends:&quot; &lt;&lt; endl; cin &gt;&gt; k; int minLength; &#x2F;&#x2F;接受用户的输入，同时计算出每块巧克力的大小，并求出可以切割的最大边长 for(int i &#x3D;0;i&lt;n;i++)&#123; cout &lt;&lt; &quot;please input the &quot; &lt;&lt; i+1 &lt;&lt; &quot; width and height:&quot; &lt;&lt; endl; cin &gt;&gt; cho[i].width &gt;&gt; cho[i].height; cho[i].area &#x3D; cho[i].height * cho[i].width; int temp &#x3D; cho[i].height &gt; cho[i].width ? cho[i].width : cho[i].height; if(i &#x3D;&#x3D; 0)&#123; minLength &#x3D; temp; &#125; else&#123; minLength &#x3D; minLength &gt; temp ? minLength : temp; &#125; &#125; cout &lt;&lt; &quot;maximum length is : &quot;; bool flag &#x3D; true; &#x2F;&#x2F;从获得的最大边长进行遍历，求得满足所有要求的最大边长 while(flag)&#123; int counts &#x3D; 0; for(int i&#x3D;0;i&lt;n;i++)&#123; counts +&#x3D; cho[i].area &#x2F; (minLength*minLength); if(counts &gt;&#x3D; k)&#123; flag &#x3D; false; &#125; &#125; if(flag &#x3D;&#x3D; true &amp;&amp; (minLength--) &#x3D;&#x3D; 1) break; &#125; cout &lt;&lt; minLength; return 0;&#125; 测试样例test1:test2:test3:","raw":"---\ntitle: Cpp 数组和结构体\ncopyright: true\ndate: 2020-04-03 14:26:12\n\n\ntags:\n\t- C++\n\t- 算法\ncategories: [C++,算法]\n---\n\n## 问题描述\n某位同学邀请k位朋友到家里做客。他拿出了巧克力招待盆友们。他一共有n块巧克力，其中每一块巧克力都是长方形。为了公平起见，这位同学需要从这n块巧克力中分出k块巧克力给盆友们。要求切出的巧克力要满足：\n1、形状是正方形，边长是整数，且是一整块。\n2、大小相同、朋友分得的巧克力能尽量的大。\n请设计算法求出满足要求的最大边长。\n（输入n，k，其中1 <= n,k <= 100000,且输入应该保证你的盆友们至少可以分得一块1*1的巧克力）\n\n样例输入：\n2 10\n6 5\n5 6\n样例输出：\n2\n\n<!-- more -->\n\n***\n\n## 源代码\n```\n#include <iostream>\n\nusing namespace std;\n\nconst int numMax = 50;//规定最多有50块巧克力（可以根据需要指定）\n\n//创建结构体数组，保存用户输入的巧克力的参数\nstruct{\n    int width;\n    int height;\n    int area;\n}cho[numMax];\n\nint main()\n{\n    int n,k;\n    cout << \"please input the amount of your chocolates:\" << endl;\n    cin >> n;\n    cout << \"please input the amount of your friends:\" << endl;\n    cin >> k;\n    int minLength;\n    //接受用户的输入，同时计算出每块巧克力的大小，并求出可以切割的最大边长\n    for(int i =0;i<n;i++){\n        cout << \"please input the \" << i+1 << \" width and height:\" << endl;\n        cin >> cho[i].width >> cho[i].height;\n        cho[i].area = cho[i].height * cho[i].width;\n        int temp = cho[i].height > cho[i].width ? cho[i].width : cho[i].height;\n        if(i == 0){\n            minLength = temp;\n        }\n        else{\n            minLength = minLength > temp ? minLength : temp;\n        }\n\n    }\n\n    cout << \"maximum length is : \";\n\n    bool flag = true;\n    //从获得的最大边长进行遍历，求得满足所有要求的最大边长\n    while(flag){\n        int counts = 0;\n        for(int i=0;i<n;i++){\n            counts += cho[i].area / (minLength*minLength);\n            if(counts >= k){\n                flag = false;\n            }\n        }\n        if(flag == true && (minLength--) == 1)\n            break;\n    }\n    cout << minLength;\n\n    return 0;\n}\n\n```\n\n---\n\n## 测试样例\ntest1:\n![1](https://img-blog.csdnimg.cn/20200403142316199.png)\ntest2:\n![2](https://img-blog.csdnimg.cn/20200403142333563.png)\ntest3:\n![3](https://img-blog.csdnimg.cn/20200403142347668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>某位同学邀请k位朋友到家里做客。他拿出了巧克力招待盆友们。他一共有n块巧克力，其中每一块巧克力都是长方形。为了公平起见，这位同学需要从这n块巧克力中分出k块巧克力给盆友们。要求切出的巧克力要满足：<br>1、形状是正方形，边长是整数，且是一整块。<br>2、大小相同、朋友分得的巧克力能尽量的大。<br>请设计算法求出满足要求的最大边长。<br>（输入n，k，其中1 &lt;= n,k &lt;= 100000,且输入应该保证你的盆友们至少可以分得一块1*1的巧克力）</p>\n<p>样例输入：<br>2 10<br>6 5<br>5 6<br>样例输出：<br>2</p>\n<a id=\"more\"></a>\n\n<hr>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">const int numMax &#x3D; 50;&#x2F;&#x2F;规定最多有50块巧克力（可以根据需要指定）</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;创建结构体数组，保存用户输入的巧克力的参数</span><br><span class=\"line\">struct&#123;</span><br><span class=\"line\">    int width;</span><br><span class=\"line\">    int height;</span><br><span class=\"line\">    int area;</span><br><span class=\"line\">&#125;cho[numMax];</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int n,k;</span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the amount of your chocolates:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the amount of your friends:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    cin &gt;&gt; k;</span><br><span class=\"line\">    int minLength;</span><br><span class=\"line\">    &#x2F;&#x2F;接受用户的输入，同时计算出每块巧克力的大小，并求出可以切割的最大边长</span><br><span class=\"line\">    for(int i &#x3D;0;i&lt;n;i++)&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;please input the &quot; &lt;&lt; i+1 &lt;&lt; &quot; width and height:&quot; &lt;&lt; endl;</span><br><span class=\"line\">        cin &gt;&gt; cho[i].width &gt;&gt; cho[i].height;</span><br><span class=\"line\">        cho[i].area &#x3D; cho[i].height * cho[i].width;</span><br><span class=\"line\">        int temp &#x3D; cho[i].height &gt; cho[i].width ? cho[i].width : cho[i].height;</span><br><span class=\"line\">        if(i &#x3D;&#x3D; 0)&#123;</span><br><span class=\"line\">            minLength &#x3D; temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">            minLength &#x3D; minLength &gt; temp ? minLength : temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;maximum length is : &quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    bool flag &#x3D; true;</span><br><span class=\"line\">    &#x2F;&#x2F;从获得的最大边长进行遍历，求得满足所有要求的最大边长</span><br><span class=\"line\">    while(flag)&#123;</span><br><span class=\"line\">        int counts &#x3D; 0;</span><br><span class=\"line\">        for(int i&#x3D;0;i&lt;n;i++)&#123;</span><br><span class=\"line\">            counts +&#x3D; cho[i].area &#x2F; (minLength*minLength);</span><br><span class=\"line\">            if(counts &gt;&#x3D; k)&#123;</span><br><span class=\"line\">                flag &#x3D; false;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if(flag &#x3D;&#x3D; true &amp;&amp; (minLength--) &#x3D;&#x3D; 1)</span><br><span class=\"line\">            break;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; minLength;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"测试样例\"><a href=\"#测试样例\" class=\"headerlink\" title=\"测试样例\"></a>测试样例</h2><p>test1:<br><img src=\"https://img-blog.csdnimg.cn/20200403142316199.png\" alt=\"1\"><br>test2:<br><img src=\"https://img-blog.csdnimg.cn/20200403142333563.png\" alt=\"2\"><br>test3:<br><img src=\"https://img-blog.csdnimg.cn/20200403142347668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"3\"></p>\n","slug":"Cpp-数组和结构体","updated":"2020-04-14T03:38:37.906Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/04/03/Cpp-%E6%95%B0%E7%BB%84%E5%92%8C%E7%BB%93%E6%9E%84%E4%BD%93/","excerpt":"问题描述某位同学邀请k位朋友到家里做客。他拿出了巧克力招待盆友们。他一共有n块巧克力，其中每一块巧克力都是长方形。为了公平起见，这位同学需要从这n块巧克力中分出k块巧克力给盆友们。要求切出的巧克力要满足：1、形状是正方形，边长是整数，且是一整块。2、大小相同、朋友分得的巧克力能尽量的大。请设计算法求出满足要求的最大边长。（输入n，k，其中1 &lt;= n,k &lt;= 100000,且输入应该保证你的盆友们至少可以分得一块1*1的巧克力） 样例输入：2 106 55 6样例输出：2","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"学生成绩管理小程序","date":"2020-03-31T05:14:46.000Z","path":"2020/03/31/学生成绩管理小程序/","text":"问题描述1、 可以存储学生的姓名、学号、性别和 A、B、C 三门课程的成绩；2、 能够对所有学生的姓名、学号、性别和三门课程的成绩进行显示；3、 能够根据学生三门课程的总成绩对学生的记录进行排序并输出；4、 能够输出每位有不及格课程的学生的学号、姓名和不及格课程的名字和成绩； 问题分析输入:用户输入要录入的学生人数用户输入要录入的学生信息（姓名、学号、性别和A、B、C课程成绩）用户选择相应功能的输入 输出:输出所有学生的所有信息输出按三门课程总成绩降序排序后的所有学生的所有信息输出每位有不及格课程的学生的学号、姓名和不及格课程的名字和成绩； 主要处理过程：根据用户输入建立链表存储学生信息按照三门课程总成绩降序排序并输出排序后的结果判断每名学生是否有课程不及格并输出判断结果为true的 学生的学号、姓名和不及格课程的名字和成绩 流程设计 模块介绍链表创建模块：采用尾插发创建单向链表封装成函数creatLink需要传入节点个数n，返回有n个 节点的链表的头指针，完成存储结构的创建 排序模块：封装成函数lowerOrder需要传入链表的头指针，对该链表进行降序排序 后，调用输出函数getMessage输出排序后的所有 学生信息 输出模块：封装成函数getMessage需要传入链表的头指针，输出该链表所有节点的 出指针域外的所有信息 输出不及格学生模块：封装成函数failStuMessage需要传入学生信息链表的头指针， 输出不及格学生的学号，姓名和不 及格课程的名字、成绩 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193#include &lt;iostream&gt;#include &lt;string.h&gt;#include &lt;new&gt;#include&lt;conio.h&gt;#include&lt;stdlib.h&gt;using namespace std;enum Gender &#123;Male,Female&#125;;&#x2F;&#x2F;初始化学生的信息（模拟用户输入情形）&#x2F;&#x2F;定义学生学号数组,这里只是不用重复输入，在结构体数组中读取即可（测试用）读者可将其改为接受用户输入char stuNo[5][20] &#x3D; &#123; &quot;2018117001&quot;, &quot;2018117002&quot;, &quot;2018117003&quot;, &quot;2018117004&quot;, &quot;2018117005&quot;, &#125;;&#x2F;&#x2F;定义学生姓名数组char stuName[5][20] &#x3D; &#123; &quot;Tom&quot;, &quot;Amy&quot;, &quot;Lily&quot;, &quot;Jack&quot;, &quot;Rose&quot;,&#125;;&#x2F;&#x2F;定义学生性别数组Gender stuSex[5] &#x3D; &#123;Male,Female,Female,Male,Female&#125;;&#x2F;&#x2F;定义学生三门课成绩数组double stuA[5] &#x3D; &#123;45.54,59.5,68.5,75.5,85.0&#125;;double stuB[5] &#x3D; &#123;55.5,87.6,45.26,98.5,35.4&#125;;double stuC[5] &#x3D; &#123;78.6,58.65,95.5,46.2,76.55&#125;;typedef struct Node&#123; char no[20]; &#x2F;&#x2F;学号 char name[20];&#x2F;&#x2F;姓名 Gender sex;&#x2F;&#x2F;性别 double scoreA;&#x2F;&#x2F;三门课成绩 double scoreB; double scoreC; struct Node* next;&#125;node,*link;&#x2F;&#x2F;创建单链表link createLink()&#123; &#x2F;&#x2F;创建头节点 link h &#x3D; new node; &#x2F;&#x2F;用尾指针r指向头结点 h -&gt;next &#x3D; NULL; link r &#x3D; h;&#x2F;&#x2F;尾插法 for(int i&#x3D;0;i&lt;5;i++)&#123; link n &#x3D; new node; n -&gt;next &#x3D; NULL; strcpy(n-&gt;no,stuNo[i]); strcpy(n-&gt;name,stuName[i]); n-&gt;sex &#x3D; stuSex[i]; n-&gt;scoreA &#x3D; stuA[i]; n-&gt;scoreB &#x3D; stuB[i]; n-&gt;scoreC &#x3D; stuC[i]; r -&gt;next &#x3D; n; r &#x3D; n; &#125; return h;&#125;&#x2F;&#x2F;显示所有学生信息void getMessage(link L)&#123; link p &#x3D; L-&gt;next; cout &lt;&lt; &quot;学号\\t\\t姓名\\t性别\\tA\\tB\\tC&quot; &lt;&lt; endl; while(p)&#123; cout &lt;&lt; p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\t&quot; ; if(p-&gt;sex &#x3D;&#x3D; 0) cout &lt;&lt; &quot;Male&quot;; else cout &lt;&lt; &quot;Female&quot;; cout&lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;scoreA&lt;&lt;&quot;\\t&quot; &lt;&lt;p-&gt;scoreB&lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;scoreC&lt;&lt;endl; p &#x3D; p-&gt;next; &#125; char answer; cout &lt;&lt; &quot;pressing any key to continue: &quot;; answer &#x3D; getch();&#125;&#x2F;&#x2F;总成绩降序排序并输出排序后学生的信息void lowerOrder(link L)&#123; link p &#x3D; L; &#x2F;&#x2F;这里使用选择排序法进行排序 &#x2F;&#x2F;区别是，这里的p，q，m始终指向应该指向元素的前一个元素，方便交换两个节点的位置 while(p-&gt;next)&#123; link m &#x3D; p; link q &#x3D; p-&gt;next; while(q-&gt;next)&#123; if((q-&gt;next-&gt;scoreA + q-&gt;next-&gt;scoreB + q-&gt;next-&gt;scoreC) &gt; (m-&gt;next-&gt;scoreA + m-&gt;next-&gt;scoreB + m-&gt;next-&gt;scoreC)) m &#x3D; q; q &#x3D; q-&gt;next; &#125; &#x2F;&#x2F;以下交换节点指针域的顺序不可改变，否则会进入死循环 link temp; temp &#x3D; p-&gt;next; p-&gt;next &#x3D; m-&gt;next; m-&gt;next &#x3D; temp; temp &#x3D; p-&gt;next-&gt;next; p-&gt;next-&gt;next &#x3D; m-&gt;next-&gt;next; m-&gt;next-&gt;next &#x3D; temp; p &#x3D; p-&gt;next; &#125; getMessage(L);&#125;void failStuMessage(link L)&#123; link p &#x3D; L-&gt;next; &#x2F;&#x2F;这里大量使用选择控制语句实现函数功能，读者可以采用更为简单的方法 while(p)&#123; if(p-&gt;scoreA &lt; 60)&#123; if(p-&gt;scoreB &lt; 60)&#123; if(p-&gt;scoreC &lt; 60)&#123; cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tA:&quot; &lt;&lt; p-&gt;scoreA &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt; &quot;\\tC:&quot; &lt;&lt;p-&gt;scoreC &lt;&lt;endl; &#125; else&#123; cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tA:&quot; &lt;&lt; p-&gt;scoreA &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt;endl; &#125; &#125; else&#123; if(p-&gt;scoreC &lt; 60) cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tA:&quot; &lt;&lt; p-&gt;scoreA &lt;&lt;&quot;\\tC:&quot; &lt;&lt; p-&gt;scoreC &lt;&lt;endl; &#125; &#125; else&#123; if(p-&gt;scoreB&lt;60)&#123; if(p-&gt;scoreC&lt;60)&#123; cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt; &quot;\\tC:&quot; &lt;&lt;p-&gt;scoreC &lt;&lt;endl; &#125; else&#123; cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt;endl; &#125; &#125; else&#123; if(p-&gt;scoreC&lt;60)&#123; cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tC:&quot; &lt;&lt; p-&gt;scoreC &lt;&lt;endl; &#125; &#125; &#125; p &#x3D; p-&gt;next; &#125; char answer; cout &lt;&lt; &quot;pressing any key to continue: &quot;; answer &#x3D; getch();&#125;int main()&#123; cout &lt;&lt; &quot;welcome to use the system!&quot; &lt;&lt;endl; cout &lt;&lt; &quot;pressing any keys to continue &quot;; char ch; ch &#x3D; getch(); system(&quot;cls&quot;);&#x2F;&#x2F;程序控制语句 do&#123; link L &#x3D; createLink(); cout &lt;&lt; &quot;A: Output all of the messages of students &quot;&lt;&lt; endl &lt;&lt; &quot;B:Output Low the order of which total score of three courses&quot;&lt;&lt; endl &lt;&lt; &quot;C:Output all of the failure students &quot;&lt;&lt; endl &lt;&lt; &quot;D:exit the system&quot; &lt;&lt; endl &lt;&lt; &quot;please select:&quot;; ch &#x3D; getch(); system(&quot;cls&quot;); switch(ch)&#123; case &#39;A&#39;:getMessage(L);break; case &#39;B&#39;:lowerOrder(L);break; case &#39;C&#39;:failStuMessage(L);break; default:break; &#125; system(&quot;cls&quot;); &#125;while(ch !&#x3D; &#39;D&#39;); cout &lt;&lt; &quot;Thanks to use,goodbye!&quot;; return 0;&#125; 功能测试Feature A： Feature B：Feature C:Feature D:","raw":"---\ntitle: 学生成绩管理小程序\ndate: 2020-03-31 13:14:46\ncopyright: true\ntoc: true\ncategories: [C++,算法]\ntags:\n\t- C++\n\t- 算法\n---\n\n\n\n<br>\n\n## 问题描述\n\n1、 可以存储学生的姓名、学号、性别和 A、B、C 三\n门课程的成绩；\n2、 能够对所有学生的姓名、学号、性别和三门课程的成绩进\n行显示；\n3、 能够根据学生三门课程的总成绩对学生的记录进行排序并\n输出；\n4、 能够输出每位有不及格课程的学生的学号、姓名和不及格\n课程的名字和成绩；\n\n<!-- more -->\n\n***\n## 问题分析\n**输入:**\n用户输入要录入的学生人数\n用户输入要录入的学生信息（姓名、学号、性别和A、B、C课程成绩）\n用户选择相应功能的输入\n\n**输出:**\n输出所有学生的所有信息\n输出按三门课程总成绩降序排序后的所有学生的所有信息\n输出每位有不及格课程的学生的学号、姓名和不及格课程的名字和成绩；\n\n**主要处理过程：**\n根据用户输入建立链表存储学生信息\n按照三门课程总成绩降序排序并输出排序后的结果\n判断每名学生是否有课程不及格并输出判断结果为true的\t学生的学号、姓名和不及格课程的名字和成绩\n***\n## 流程设计\n![process](https://img-blog.csdnimg.cn/20200330213958909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n## 模块介绍\n\n**链表创建模块：**\n采用尾插发创建单向链表封装成函数\ncreatLink需要传入节点个数n，返回有n个\t节点的链表的头指针，完成存储结构的创建\n\n**排序模块：**\n封装成函数lowerOrder\n需要传入链表的头指针，对该链表进行降序排序\t后，调用输出函数getMessage输出排序后的所有\t学生信息\n\n**输出模块：**\n封装成函数getMessage\n需要传入链表的头指针，输出该链表所有节点的\t出指针域外的所有信息\n\n**输出不及格学生模块：**\n封装成函数failStuMessage\n需要传入学生信息链表的头指针，\t输出不及格学生的学号，姓名和不\t及格课程的名字、成绩\n\n***\n## 源代码\n```\n#include <iostream>\n#include <string.h>\n#include <new>\n#include<conio.h>\n#include<stdlib.h>\n\nusing namespace std;\n\nenum Gender {Male,Female};\n\n//初始化学生的信息（模拟用户输入情形）\n//定义学生学号数组,这里只是不用重复输入，在结构体数组中读取即可（测试用）读者可将其改为接受用户输入\nchar stuNo[5][20] = {\n    \"2018117001\",\n    \"2018117002\",\n    \"2018117003\",\n    \"2018117004\",\n    \"2018117005\",\n    };\n//定义学生姓名数组\nchar stuName[5][20] = {\n    \"Tom\",\n    \"Amy\",\n    \"Lily\",\n    \"Jack\",\n    \"Rose\",\n};\n//定义学生性别数组\nGender stuSex[5] = {Male,Female,Female,Male,Female};\n//定义学生三门课成绩数组\ndouble stuA[5] = {45.54,59.5,68.5,75.5,85.0};\ndouble stuB[5] = {55.5,87.6,45.26,98.5,35.4};\ndouble stuC[5] = {78.6,58.65,95.5,46.2,76.55};\n\n\ntypedef struct Node{\n    char no[20]; //学号\n    char name[20];//姓名\n    Gender sex;//性别\n    double scoreA;//三门课成绩\n    double scoreB;\n    double scoreC;\n    struct Node* next;\n}node,*link;\n\n\n//创建单链表\nlink createLink(){\n    //创建头节点\n    link h = new node;\n    //用尾指针r指向头结点\n    h ->next = NULL;\n    link r = h;\n//尾插法\n    for(int i=0;i<5;i++){\n        link n = new node;\n        n ->next = NULL;\n        strcpy(n->no,stuNo[i]);\n        strcpy(n->name,stuName[i]);\n        n->sex = stuSex[i];\n        n->scoreA = stuA[i];\n        n->scoreB = stuB[i];\n        n->scoreC = stuC[i];\n        r ->next = n;\n        r = n;\n    }\n    return h;\n}\n\n//显示所有学生信息\nvoid getMessage(link L){\n    link p = L->next;\n    cout << \"学号\\t\\t姓名\\t性别\\tA\\tB\\tC\" << endl;\n    while(p){\n        cout << p->no << \"\\t\" << p->name << \"\\t\" ;\n        if(p->sex == 0)\n            cout << \"Male\";\n        else\n            cout << \"Female\";\n        cout<< \"\\t\" << p->scoreA<<\"\\t\" <<p->scoreB<< \"\\t\" << p->scoreC<<endl;\n        p = p->next;\n    }\n\n    char answer;\n    cout << \"pressing any key to continue: \";\n    answer = getch();\n}\n\n//总成绩降序排序并输出排序后学生的信息\nvoid lowerOrder(link L){\n    link p = L;\n    //这里使用选择排序法进行排序\n    //区别是，这里的p，q，m始终指向应该指向元素的前一个元素，方便交换两个节点的位置\n    while(p->next){\n        link m = p;\n        link q = p->next;\n        while(q->next){\n            if((q->next->scoreA + q->next->scoreB + q->next->scoreC) > (m->next->scoreA + m->next->scoreB + m->next->scoreC))\n                m = q;\n                q = q->next;\n        }\n\t\t//以下交换节点指针域的顺序不可改变，否则会进入死循环\n        link temp;\n        temp = p->next;\n        p->next = m->next;\n        m->next = temp;\n\n        temp = p->next->next;\n        p->next->next = m->next->next;\n        m->next->next = temp;\n\n        p = p->next;\n\n    }\n\n    getMessage(L);\n\n}\n\nvoid failStuMessage(link L){\n    link p = L->next;\n    //这里大量使用选择控制语句实现函数功能，读者可以采用更为简单的方法\n    while(p){\n        if(p->scoreA < 60){\n            if(p->scoreB < 60){\n                if(p->scoreC < 60){\n                    cout <<p->no << \"\\t\" << p->name << \"\\tA:\" << p->scoreA\n                    << \"\\tB:\" << p->scoreB << \"\\tC:\" <<p->scoreC <<endl;\n                }\n                else{\n                    cout <<p->no << \"\\t\" << p->name << \"\\tA:\" << p->scoreA\n                    << \"\\tB:\" << p->scoreB <<endl;\n                }\n            }\n            else{\n                    if(p->scoreC < 60)\n                    cout <<p->no << \"\\t\" << p->name << \"\\tA:\" << p->scoreA <<\"\\tC:\" << p->scoreC <<endl;\n            }\n        }\n        else{\n            if(p->scoreB<60){\n                if(p->scoreC<60){\n                    cout <<p->no << \"\\t\" << p->name << \"\\tB:\" << p->scoreB << \"\\tC:\" <<p->scoreC <<endl;\n                }\n                else{\n                    cout <<p->no << \"\\t\" << p->name << \"\\tB:\" << p->scoreB <<endl;\n                }\n            }\n            else{\n                if(p->scoreC<60){\n                    cout <<p->no << \"\\t\" << p->name << \"\\tC:\" << p->scoreC <<endl;\n                }\n            }\n        }\n        p = p->next;\n    }\n    char answer;\n    cout << \"pressing any key to continue: \";\n    answer = getch();\n}\n\n\n\nint main()\n{\n    cout << \"welcome to use the system!\" <<endl;\n    cout << \"pressing any keys to continue \";\n    char ch;\n    ch = getch();\n    system(\"cls\");\n//程序控制语句\n    do{\n             link L = createLink();\n            cout << \"A: Output all of the messages of students \"<<\n            endl << \"B:Output Low the order of which total score of three courses\"<<\n            endl << \"C:Output all of the failure students \"<<\n            endl << \"D:exit the system\" <<\n            endl << \"please select:\";\n\n            ch = getch();\n            system(\"cls\");\n            switch(ch){\n                case 'A':getMessage(L);break;\n                case 'B':lowerOrder(L);break;\n                case 'C':failStuMessage(L);break;\n                default:break;\n            }\n            system(\"cls\");\n    }while(ch != 'D');\n\n    cout << \"Thanks to use,goodbye!\";\n    return 0;\n}\n\n```\n\n## 功能测试\n**Feature A：**\n\n![A](https://img-blog.csdnimg.cn/20200330214912314.png)\n\n**Feature B：**\n![B](https://img-blog.csdnimg.cn/20200330214923338.png)\n**Feature C:**\n![C](https://img-blog.csdnimg.cn/2020033021493271.png)\n**Feature D:**\n\n![D](https://img-blog.csdnimg.cn/20200330214941225.png)\n\n\n","content":"<br>\n\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>1、 可以存储学生的姓名、学号、性别和 A、B、C 三<br>门课程的成绩；<br>2、 能够对所有学生的姓名、学号、性别和三门课程的成绩进<br>行显示；<br>3、 能够根据学生三门课程的总成绩对学生的记录进行排序并<br>输出；<br>4、 能够输出每位有不及格课程的学生的学号、姓名和不及格<br>课程的名字和成绩；</p>\n<a id=\"more\"></a>\n\n<hr>\n<h2 id=\"问题分析\"><a href=\"#问题分析\" class=\"headerlink\" title=\"问题分析\"></a>问题分析</h2><p><strong>输入:</strong><br>用户输入要录入的学生人数<br>用户输入要录入的学生信息（姓名、学号、性别和A、B、C课程成绩）<br>用户选择相应功能的输入</p>\n<p><strong>输出:</strong><br>输出所有学生的所有信息<br>输出按三门课程总成绩降序排序后的所有学生的所有信息<br>输出每位有不及格课程的学生的学号、姓名和不及格课程的名字和成绩；</p>\n<p><strong>主要处理过程：</strong><br>根据用户输入建立链表存储学生信息<br>按照三门课程总成绩降序排序并输出排序后的结果<br>判断每名学生是否有课程不及格并输出判断结果为true的    学生的学号、姓名和不及格课程的名字和成绩</p>\n<hr>\n<h2 id=\"流程设计\"><a href=\"#流程设计\" class=\"headerlink\" title=\"流程设计\"></a>流程设计</h2><p><img src=\"https://img-blog.csdnimg.cn/20200330213958909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"process\"></p>\n<h2 id=\"模块介绍\"><a href=\"#模块介绍\" class=\"headerlink\" title=\"模块介绍\"></a>模块介绍</h2><p><strong>链表创建模块：</strong><br>采用尾插发创建单向链表封装成函数<br>creatLink需要传入节点个数n，返回有n个    节点的链表的头指针，完成存储结构的创建</p>\n<p><strong>排序模块：</strong><br>封装成函数lowerOrder<br>需要传入链表的头指针，对该链表进行降序排序    后，调用输出函数getMessage输出排序后的所有    学生信息</p>\n<p><strong>输出模块：</strong><br>封装成函数getMessage<br>需要传入链表的头指针，输出该链表所有节点的    出指针域外的所有信息</p>\n<p><strong>输出不及格学生模块：</strong><br>封装成函数failStuMessage<br>需要传入学生信息链表的头指针，    输出不及格学生的学号，姓名和不    及格课程的名字、成绩</p>\n<hr>\n<h2 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;string.h&gt;</span><br><span class=\"line\">#include &lt;new&gt;</span><br><span class=\"line\">#include&lt;conio.h&gt;</span><br><span class=\"line\">#include&lt;stdlib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">enum Gender &#123;Male,Female&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;初始化学生的信息（模拟用户输入情形）</span><br><span class=\"line\">&#x2F;&#x2F;定义学生学号数组,这里只是不用重复输入，在结构体数组中读取即可（测试用）读者可将其改为接受用户输入</span><br><span class=\"line\">char stuNo[5][20] &#x3D; &#123;</span><br><span class=\"line\">    &quot;2018117001&quot;,</span><br><span class=\"line\">    &quot;2018117002&quot;,</span><br><span class=\"line\">    &quot;2018117003&quot;,</span><br><span class=\"line\">    &quot;2018117004&quot;,</span><br><span class=\"line\">    &quot;2018117005&quot;,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#x2F;&#x2F;定义学生姓名数组</span><br><span class=\"line\">char stuName[5][20] &#x3D; &#123;</span><br><span class=\"line\">    &quot;Tom&quot;,</span><br><span class=\"line\">    &quot;Amy&quot;,</span><br><span class=\"line\">    &quot;Lily&quot;,</span><br><span class=\"line\">    &quot;Jack&quot;,</span><br><span class=\"line\">    &quot;Rose&quot;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&#x2F;&#x2F;定义学生性别数组</span><br><span class=\"line\">Gender stuSex[5] &#x3D; &#123;Male,Female,Female,Male,Female&#125;;</span><br><span class=\"line\">&#x2F;&#x2F;定义学生三门课成绩数组</span><br><span class=\"line\">double stuA[5] &#x3D; &#123;45.54,59.5,68.5,75.5,85.0&#125;;</span><br><span class=\"line\">double stuB[5] &#x3D; &#123;55.5,87.6,45.26,98.5,35.4&#125;;</span><br><span class=\"line\">double stuC[5] &#x3D; &#123;78.6,58.65,95.5,46.2,76.55&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">typedef struct Node&#123;</span><br><span class=\"line\">    char no[20]; &#x2F;&#x2F;学号</span><br><span class=\"line\">    char name[20];&#x2F;&#x2F;姓名</span><br><span class=\"line\">    Gender sex;&#x2F;&#x2F;性别</span><br><span class=\"line\">    double scoreA;&#x2F;&#x2F;三门课成绩</span><br><span class=\"line\">    double scoreB;</span><br><span class=\"line\">    double scoreC;</span><br><span class=\"line\">    struct Node* next;</span><br><span class=\"line\">&#125;node,*link;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;创建单链表</span><br><span class=\"line\">link createLink()&#123;</span><br><span class=\"line\">    &#x2F;&#x2F;创建头节点</span><br><span class=\"line\">    link h &#x3D; new node;</span><br><span class=\"line\">    &#x2F;&#x2F;用尾指针r指向头结点</span><br><span class=\"line\">    h -&gt;next &#x3D; NULL;</span><br><span class=\"line\">    link r &#x3D; h;</span><br><span class=\"line\">&#x2F;&#x2F;尾插法</span><br><span class=\"line\">    for(int i&#x3D;0;i&lt;5;i++)&#123;</span><br><span class=\"line\">        link n &#x3D; new node;</span><br><span class=\"line\">        n -&gt;next &#x3D; NULL;</span><br><span class=\"line\">        strcpy(n-&gt;no,stuNo[i]);</span><br><span class=\"line\">        strcpy(n-&gt;name,stuName[i]);</span><br><span class=\"line\">        n-&gt;sex &#x3D; stuSex[i];</span><br><span class=\"line\">        n-&gt;scoreA &#x3D; stuA[i];</span><br><span class=\"line\">        n-&gt;scoreB &#x3D; stuB[i];</span><br><span class=\"line\">        n-&gt;scoreC &#x3D; stuC[i];</span><br><span class=\"line\">        r -&gt;next &#x3D; n;</span><br><span class=\"line\">        r &#x3D; n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return h;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;显示所有学生信息</span><br><span class=\"line\">void getMessage(link L)&#123;</span><br><span class=\"line\">    link p &#x3D; L-&gt;next;</span><br><span class=\"line\">    cout &lt;&lt; &quot;学号\\t\\t姓名\\t性别\\tA\\tB\\tC&quot; &lt;&lt; endl;</span><br><span class=\"line\">    while(p)&#123;</span><br><span class=\"line\">        cout &lt;&lt; p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\t&quot; ;</span><br><span class=\"line\">        if(p-&gt;sex &#x3D;&#x3D; 0)</span><br><span class=\"line\">            cout &lt;&lt; &quot;Male&quot;;</span><br><span class=\"line\">        else</span><br><span class=\"line\">            cout &lt;&lt; &quot;Female&quot;;</span><br><span class=\"line\">        cout&lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;scoreA&lt;&lt;&quot;\\t&quot; &lt;&lt;p-&gt;scoreB&lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;scoreC&lt;&lt;endl;</span><br><span class=\"line\">        p &#x3D; p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    char answer;</span><br><span class=\"line\">    cout &lt;&lt; &quot;pressing any key to continue: &quot;;</span><br><span class=\"line\">    answer &#x3D; getch();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;总成绩降序排序并输出排序后学生的信息</span><br><span class=\"line\">void lowerOrder(link L)&#123;</span><br><span class=\"line\">    link p &#x3D; L;</span><br><span class=\"line\">    &#x2F;&#x2F;这里使用选择排序法进行排序</span><br><span class=\"line\">    &#x2F;&#x2F;区别是，这里的p，q，m始终指向应该指向元素的前一个元素，方便交换两个节点的位置</span><br><span class=\"line\">    while(p-&gt;next)&#123;</span><br><span class=\"line\">        link m &#x3D; p;</span><br><span class=\"line\">        link q &#x3D; p-&gt;next;</span><br><span class=\"line\">        while(q-&gt;next)&#123;</span><br><span class=\"line\">            if((q-&gt;next-&gt;scoreA + q-&gt;next-&gt;scoreB + q-&gt;next-&gt;scoreC) &gt; (m-&gt;next-&gt;scoreA + m-&gt;next-&gt;scoreB + m-&gt;next-&gt;scoreC))</span><br><span class=\"line\">                m &#x3D; q;</span><br><span class=\"line\">                q &#x3D; q-&gt;next;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t&#x2F;&#x2F;以下交换节点指针域的顺序不可改变，否则会进入死循环</span><br><span class=\"line\">        link temp;</span><br><span class=\"line\">        temp &#x3D; p-&gt;next;</span><br><span class=\"line\">        p-&gt;next &#x3D; m-&gt;next;</span><br><span class=\"line\">        m-&gt;next &#x3D; temp;</span><br><span class=\"line\"></span><br><span class=\"line\">        temp &#x3D; p-&gt;next-&gt;next;</span><br><span class=\"line\">        p-&gt;next-&gt;next &#x3D; m-&gt;next-&gt;next;</span><br><span class=\"line\">        m-&gt;next-&gt;next &#x3D; temp;</span><br><span class=\"line\"></span><br><span class=\"line\">        p &#x3D; p-&gt;next;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    getMessage(L);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void failStuMessage(link L)&#123;</span><br><span class=\"line\">    link p &#x3D; L-&gt;next;</span><br><span class=\"line\">    &#x2F;&#x2F;这里大量使用选择控制语句实现函数功能，读者可以采用更为简单的方法</span><br><span class=\"line\">    while(p)&#123;</span><br><span class=\"line\">        if(p-&gt;scoreA &lt; 60)&#123;</span><br><span class=\"line\">            if(p-&gt;scoreB &lt; 60)&#123;</span><br><span class=\"line\">                if(p-&gt;scoreC &lt; 60)&#123;</span><br><span class=\"line\">                    cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tA:&quot; &lt;&lt; p-&gt;scoreA</span><br><span class=\"line\">                    &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt; &quot;\\tC:&quot; &lt;&lt;p-&gt;scoreC &lt;&lt;endl;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else&#123;</span><br><span class=\"line\">                    cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tA:&quot; &lt;&lt; p-&gt;scoreA</span><br><span class=\"line\">                    &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt;endl;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else&#123;</span><br><span class=\"line\">                    if(p-&gt;scoreC &lt; 60)</span><br><span class=\"line\">                    cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tA:&quot; &lt;&lt; p-&gt;scoreA &lt;&lt;&quot;\\tC:&quot; &lt;&lt; p-&gt;scoreC &lt;&lt;endl;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else&#123;</span><br><span class=\"line\">            if(p-&gt;scoreB&lt;60)&#123;</span><br><span class=\"line\">                if(p-&gt;scoreC&lt;60)&#123;</span><br><span class=\"line\">                    cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt; &quot;\\tC:&quot; &lt;&lt;p-&gt;scoreC &lt;&lt;endl;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                else&#123;</span><br><span class=\"line\">                    cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tB:&quot; &lt;&lt; p-&gt;scoreB &lt;&lt;endl;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else&#123;</span><br><span class=\"line\">                if(p-&gt;scoreC&lt;60)&#123;</span><br><span class=\"line\">                    cout &lt;&lt;p-&gt;no &lt;&lt; &quot;\\t&quot; &lt;&lt; p-&gt;name &lt;&lt; &quot;\\tC:&quot; &lt;&lt; p-&gt;scoreC &lt;&lt;endl;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        p &#x3D; p-&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    char answer;</span><br><span class=\"line\">    cout &lt;&lt; &quot;pressing any key to continue: &quot;;</span><br><span class=\"line\">    answer &#x3D; getch();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout &lt;&lt; &quot;welcome to use the system!&quot; &lt;&lt;endl;</span><br><span class=\"line\">    cout &lt;&lt; &quot;pressing any keys to continue &quot;;</span><br><span class=\"line\">    char ch;</span><br><span class=\"line\">    ch &#x3D; getch();</span><br><span class=\"line\">    system(&quot;cls&quot;);</span><br><span class=\"line\">&#x2F;&#x2F;程序控制语句</span><br><span class=\"line\">    do&#123;</span><br><span class=\"line\">             link L &#x3D; createLink();</span><br><span class=\"line\">            cout &lt;&lt; &quot;A: Output all of the messages of students &quot;&lt;&lt;</span><br><span class=\"line\">            endl &lt;&lt; &quot;B:Output Low the order of which total score of three courses&quot;&lt;&lt;</span><br><span class=\"line\">            endl &lt;&lt; &quot;C:Output all of the failure students &quot;&lt;&lt;</span><br><span class=\"line\">            endl &lt;&lt; &quot;D:exit the system&quot; &lt;&lt;</span><br><span class=\"line\">            endl &lt;&lt; &quot;please select:&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">            ch &#x3D; getch();</span><br><span class=\"line\">            system(&quot;cls&quot;);</span><br><span class=\"line\">            switch(ch)&#123;</span><br><span class=\"line\">                case &#39;A&#39;:getMessage(L);break;</span><br><span class=\"line\">                case &#39;B&#39;:lowerOrder(L);break;</span><br><span class=\"line\">                case &#39;C&#39;:failStuMessage(L);break;</span><br><span class=\"line\">                default:break;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            system(&quot;cls&quot;);</span><br><span class=\"line\">    &#125;while(ch !&#x3D; &#39;D&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;Thanks to use,goodbye!&quot;;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"功能测试\"><a href=\"#功能测试\" class=\"headerlink\" title=\"功能测试\"></a>功能测试</h2><p><strong>Feature A：</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200330214912314.png\" alt=\"A\"></p>\n<p><strong>Feature B：</strong><br><img src=\"https://img-blog.csdnimg.cn/20200330214923338.png\" alt=\"B\"><br><strong>Feature C:</strong><br><img src=\"https://img-blog.csdnimg.cn/2020033021493271.png\" alt=\"C\"><br><strong>Feature D:</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200330214941225.png\" alt=\"D\"></p>\n","slug":"学生成绩管理小程序","updated":"2020-04-05T03:08:59.438Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/03/31/%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E5%B0%8F%E7%A8%8B%E5%BA%8F/","excerpt":"问题描述1、 可以存储学生的姓名、学号、性别和 A、B、C 三门课程的成绩；2、 能够对所有学生的姓名、学号、性别和三门课程的成绩进行显示；3、 能够根据学生三门课程的总成绩对学生的记录进行排序并输出；4、 能够输出每位有不及格课程的学生的学号、姓名和不及格课程的名字和成绩；","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Cpp 指针和引用的区别","date":"2020-03-31T05:13:03.000Z","path":"2020/03/31/Cpp-指针和引用的区别/","text":"指针、引用程序实践源代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include &lt;iostream&gt;using namespace std;void maopapOrder(int arr[])&#123; for(int i&#x3D;0;i&lt;2;i++)&#123; for(int j&#x3D;0;j&lt;2-i;j++)&#123; if(arr[j]&gt;arr[j+1])&#123; int temp &#x3D; arr[j]; arr[j] &#x3D; arr[j+1]; arr[j+1] &#x3D; temp; &#125; &#125; &#125;&#125;void orderMethod1(int a,int b,int c)&#123; int arr[3] &#x3D; &#123;a,b,c&#125;; maopapOrder(arr); a &#x3D; arr[0]; b &#x3D; arr[1]; c &#x3D; arr[2]; cout &lt;&lt; &quot;inside int type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt; &quot; &quot; &lt;&lt; c &lt;&lt; endl;&#125;void orderMethod2(int* a,int* b,int* c)&#123; int arr[3] &#x3D; &#123;*a,*b,*c&#125;; maopapOrder(arr); *a &#x3D; arr[0]; *b &#x3D; arr[1]; *c &#x3D; arr[2]; cout &lt;&lt; &quot;inside int* type : &quot; &lt;&lt; *a &lt;&lt; &quot; &quot; &lt;&lt; *b &lt;&lt; &quot; &quot; &lt;&lt; *c &lt;&lt; endl;&#125;void orderMethod3(int&amp; x,int&amp; y,int&amp; z)&#123; int arr[3] &#x3D; &#123;x,y,z&#125;; maopapOrder(arr); x &#x3D; arr[0]; y &#x3D; arr[1]; z &#x3D; arr[2]; cout &lt;&lt; &quot;inside int&amp; type : &quot; &lt;&lt; x &lt;&lt; &quot; &quot; &lt;&lt; y &lt;&lt; &quot; &quot; &lt;&lt; z &lt;&lt; endl;&#125;int main()&#123; int a &#x3D; 0; int b &#x3D; 0; int c &#x3D; 0; cout &lt;&lt; &quot;please input three integer values:&quot; &lt;&lt; endl; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c; orderMethod1(a,b,c); cout &lt;&lt; &quot;outside int type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b&lt;&lt; &quot; &quot; &lt;&lt; c &lt;&lt; endl; cout &lt;&lt; &quot;-----------------------------------------&quot; &lt;&lt; endl;&#x2F;* orderMethod2(&amp;a,&amp;b,&amp;c); cout &lt;&lt; &quot;outside int* type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b&lt;&lt; &quot; &quot; &lt;&lt; c &lt;&lt; endl; cout &lt;&lt; &quot;-----------------------------------------&quot; &lt;&lt; endl;*&#x2F; orderMethod3(a,b,c); cout &lt;&lt; &quot;outside int&amp; type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b&lt;&lt; &quot; &quot; &lt;&lt; c &lt;&lt; endl; cout &lt;&lt; &quot;-----------------------------------------&quot; &lt;&lt; endl; return 0;&#125; 输出结果： 指针： 引用： 结果分析从定义上讲指针是一个变量，变量中保存的是某个对象的地址，指向内存中的某个存储单元。引用实际上与它所绑定的变量共用一块内存空间，是它绑定的那个变量的一个别名。从使用规则上讲指针可以有多级指针，而引用只能有一级指针可以不初始化，指向NULL，而引用在使用时必须初始化。从作为函数参数传递上值得注意的是，二者皆可达到通过函数中的操作修改原变量值的效果，只是：指针作为函数参数时，要求变量将地址传入，对指针的指向值的修改就是对原变量值的修改。引用作为函数参数时，可以理解为就是将原变量传入（因为二者共用一块内存空间），对引用的修改当然也可以等效到引用绑定的原变量上。 但是，引用本身不需要开辟空间，所以在运行的时空效率上更好。","raw":"---\ntitle: Cpp 指针和引用的区别\ndate: 2020-03-31 13:13:03\ncopyright: true\ntoc: true\ncategories: [C++,语法]\ntags:\n\t- C++\n\t- 语法\n---\n\n\n\n<br>\n\n## 指针、引用程序实践\n\n**源代码**\n\n\n\n<!-- more -->\n\n\n\n```\n#include <iostream>\n\nusing namespace std;\n\nvoid maopapOrder(int arr[]){\n\n        for(int i=0;i<2;i++){\n        for(int j=0;j<2-i;j++){\n            if(arr[j]>arr[j+1]){\n                int temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n}\n\nvoid orderMethod1(int a,int b,int c){\n    int arr[3] = {a,b,c};\n    maopapOrder(arr);\n    a = arr[0];\n    b = arr[1];\n    c = arr[2];\n    cout << \"inside int type : \" << a << \" \" << b <<  \" \" << c << endl;\n\n}\n\nvoid orderMethod2(int* a,int* b,int* c){\n    int arr[3] = {*a,*b,*c};\n    maopapOrder(arr);\n    *a = arr[0];\n    *b = arr[1];\n    *c = arr[2];\n\n    cout << \"inside int* type : \" << *a << \" \" << *b <<  \" \" << *c << endl;\n\n}\n\nvoid orderMethod3(int& x,int& y,int& z){\n    int arr[3] = {x,y,z};\n    maopapOrder(arr);\n    x = arr[0];\n    y = arr[1];\n    z = arr[2];\n\n    cout << \"inside int& type : \" << x << \" \" << y <<  \" \" << z << endl;\n\n}\n\n\n\nint main()\n{\n    int a = 0;\n    int b = 0;\n    int c = 0;\n\n    cout << \"please input three integer values:\" << endl;\n\n    cin >> a >> b >> c;\n\n    orderMethod1(a,b,c);\n    cout << \"outside int type : \" << a << \" \" << b<<  \" \" << c << endl;\n    cout << \"-----------------------------------------\" << endl;\n/*\n    orderMethod2(&a,&b,&c);\n    cout << \"outside int* type : \" << a << \" \" << b<<  \" \" << c << endl;\n    cout << \"-----------------------------------------\" << endl;\n*/\n    orderMethod3(a,b,c);\n    cout << \"outside int& type : \" << a << \" \" << b<<  \" \" << c << endl;\n    cout << \"-----------------------------------------\" << endl;\n\n\n\n\n\n\n\n    return 0;\n}\n\n```\n\n**输出结果：**\n\n*指针：*\n![指针](https://img-blog.csdnimg.cn/20200330155413637.png)\n\n*引用：*\n\n![引用](https://img-blog.csdnimg.cn/2020033015550671.png)\n\n## 结果分析\n**从定义上讲**\n指针是一个变量，变量中保存的是某个对象的地址，指向内存中的某个存储单元。\n引用实际上与它所绑定的变量共用一块内存空间，是它绑定的那个变量的一个别名。\n**从使用规则上讲**\n指针可以有多级指针，而引用只能有一级\n指针可以不初始化，指向NULL，而引用在使用时必须初始化。\n**从作为函数参数传递上**\n值得注意的是，二者皆可达到通过函数中的操作修改原变量值的效果，只是：\n指针作为函数参数时，要求变量将地址传入，对指针的指向值的修改就是对原变量值的修改。\n引用作为函数参数时，可以理解为就是将原变量传入（因为二者共用一块内存空间），对引用的修改当然也可以等效到引用绑定的原变量上。\n\n但是，***引用本身不需要开辟空间，所以在运行的时空效率上更好。***\n\n","content":"<br>\n\n<h2 id=\"指针、引用程序实践\"><a href=\"#指针、引用程序实践\" class=\"headerlink\" title=\"指针、引用程序实践\"></a>指针、引用程序实践</h2><p><strong>源代码</strong></p>\n<a id=\"more\"></a>\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">void maopapOrder(int arr[])&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        for(int i&#x3D;0;i&lt;2;i++)&#123;</span><br><span class=\"line\">        for(int j&#x3D;0;j&lt;2-i;j++)&#123;</span><br><span class=\"line\">            if(arr[j]&gt;arr[j+1])&#123;</span><br><span class=\"line\">                int temp &#x3D; arr[j];</span><br><span class=\"line\">                arr[j] &#x3D; arr[j+1];</span><br><span class=\"line\">                arr[j+1] &#x3D; temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void orderMethod1(int a,int b,int c)&#123;</span><br><span class=\"line\">    int arr[3] &#x3D; &#123;a,b,c&#125;;</span><br><span class=\"line\">    maopapOrder(arr);</span><br><span class=\"line\">    a &#x3D; arr[0];</span><br><span class=\"line\">    b &#x3D; arr[1];</span><br><span class=\"line\">    c &#x3D; arr[2];</span><br><span class=\"line\">    cout &lt;&lt; &quot;inside int type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt;  &quot; &quot; &lt;&lt; c &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void orderMethod2(int* a,int* b,int* c)&#123;</span><br><span class=\"line\">    int arr[3] &#x3D; &#123;*a,*b,*c&#125;;</span><br><span class=\"line\">    maopapOrder(arr);</span><br><span class=\"line\">    *a &#x3D; arr[0];</span><br><span class=\"line\">    *b &#x3D; arr[1];</span><br><span class=\"line\">    *c &#x3D; arr[2];</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;inside int* type : &quot; &lt;&lt; *a &lt;&lt; &quot; &quot; &lt;&lt; *b &lt;&lt;  &quot; &quot; &lt;&lt; *c &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void orderMethod3(int&amp; x,int&amp; y,int&amp; z)&#123;</span><br><span class=\"line\">    int arr[3] &#x3D; &#123;x,y,z&#125;;</span><br><span class=\"line\">    maopapOrder(arr);</span><br><span class=\"line\">    x &#x3D; arr[0];</span><br><span class=\"line\">    y &#x3D; arr[1];</span><br><span class=\"line\">    z &#x3D; arr[2];</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;inside int&amp; type : &quot; &lt;&lt; x &lt;&lt; &quot; &quot; &lt;&lt; y &lt;&lt;  &quot; &quot; &lt;&lt; z &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int a &#x3D; 0;</span><br><span class=\"line\">    int b &#x3D; 0;</span><br><span class=\"line\">    int c &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;please input three integer values:&quot; &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class=\"line\"></span><br><span class=\"line\">    orderMethod1(a,b,c);</span><br><span class=\"line\">    cout &lt;&lt; &quot;outside int type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b&lt;&lt;  &quot; &quot; &lt;&lt; c &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; &quot;-----------------------------------------&quot; &lt;&lt; endl;</span><br><span class=\"line\">&#x2F;*</span><br><span class=\"line\">    orderMethod2(&amp;a,&amp;b,&amp;c);</span><br><span class=\"line\">    cout &lt;&lt; &quot;outside int* type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b&lt;&lt;  &quot; &quot; &lt;&lt; c &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; &quot;-----------------------------------------&quot; &lt;&lt; endl;</span><br><span class=\"line\">*&#x2F;</span><br><span class=\"line\">    orderMethod3(a,b,c);</span><br><span class=\"line\">    cout &lt;&lt; &quot;outside int&amp; type : &quot; &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b&lt;&lt;  &quot; &quot; &lt;&lt; c &lt;&lt; endl;</span><br><span class=\"line\">    cout &lt;&lt; &quot;-----------------------------------------&quot; &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>输出结果：</strong></p>\n<p><em>指针：</em><br><img src=\"https://img-blog.csdnimg.cn/20200330155413637.png\" alt=\"指针\"></p>\n<p><em>引用：</em></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020033015550671.png\" alt=\"引用\"></p>\n<h2 id=\"结果分析\"><a href=\"#结果分析\" class=\"headerlink\" title=\"结果分析\"></a>结果分析</h2><p><strong>从定义上讲</strong><br>指针是一个变量，变量中保存的是某个对象的地址，指向内存中的某个存储单元。<br>引用实际上与它所绑定的变量共用一块内存空间，是它绑定的那个变量的一个别名。<br><strong>从使用规则上讲</strong><br>指针可以有多级指针，而引用只能有一级<br>指针可以不初始化，指向NULL，而引用在使用时必须初始化。<br><strong>从作为函数参数传递上</strong><br>值得注意的是，二者皆可达到通过函数中的操作修改原变量值的效果，只是：<br>指针作为函数参数时，要求变量将地址传入，对指针的指向值的修改就是对原变量值的修改。<br>引用作为函数参数时，可以理解为就是将原变量传入（因为二者共用一块内存空间），对引用的修改当然也可以等效到引用绑定的原变量上。</p>\n<p>但是，<strong><em>引用本身不需要开辟空间，所以在运行的时空效率上更好。</em></strong></p>\n","slug":"Cpp-指针和引用的区别","updated":"2020-04-05T03:09:29.201Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/03/31/Cpp-%E6%8C%87%E9%92%88%E5%92%8C%E5%BC%95%E7%94%A8%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"指针、引用程序实践源代码","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"语法","slug":"C/语法","permalink":"https://mt-procode.github.io/categories/C/%E8%AF%AD%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"语法","slug":"语法","permalink":"https://mt-procode.github.io/tags/%E8%AF%AD%E6%B3%95/"}]},{"title":"约瑟夫环问题","date":"2020-03-31T05:07:57.000Z","path":"2020/03/31/约瑟夫环问题/","text":"问题描述N个人在一起做游戏，他们制定了一下规则：1、首先，所有参加游戏的人按顺序编号为1、2、3…N； 2、接下来每个人心里产生一个数字，这个数字称为序号为 N的人的密码P； 3、所有参加游戏的人按照编号站成一个圈，为游戏设置初始密码K，从编号为 1的人这里开始报数，报到 K的人退出队伍，然后将自己心中的密码 K2说出来，由下一个人继续从 1开始报数，报到 K2的人退出队伍，以此类推；4、当只剩下一个人时，游戏结束。在用户输入了人数N、每个人的密码P和初始密码K的情况下，自动完成上面的游戏过程，输出先后离开队伍的人的序号序列，最后输出剩下的人的编号 采用数组实现 问题描述输入：人数N（规定最大人数为100）每个人的密码key初始密码K 输出：先后离去的人的编号numNo最后剩下的人的编号numNo 处理过程： 提示并存储用户输入的人的总数N 提示并存储用户输入的初始密码K 提示并存储用户输入的每一个人的密码key 遍历用户存储的人的密码的同时计数器自增 满足条件时进行相关操作，输出离开的人的编号 循环退出后输出最后剩下的人的编号 退出程序 流程设计 模块介绍存储：采用int类型的值存储人数N，初始密码K采用结构体数组存储每个人的编号personNo、密码personKey和未离开的人数personNum 实现：循环遍历数组的每个元素，符合条件的元素输出，直至数组中只有一个有效元素，再输出这个元素 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869#include &lt;iostream&gt;#define NUM_MAX 100using namespace std;&#x2F;&#x2F;用结构体数组存放参与游戏的人的信息struct person&#123; int personNo[NUM_MAX]; int personKey[NUM_MAX]; int personNum;&#125;person;int main()&#123; int N,K,i &#x3D; 0; &#x2F;&#x2F;接受用户输入的人的数量 cout &lt;&lt; &quot;please input the amount of people:&quot; &lt;&lt; endl; cin &gt;&gt; N; &#x2F;&#x2F;判断用户输入是否合法 if(N &gt; 100 || N &lt;&#x3D; 0)&#123; cout &lt;&lt; &quot;please input the range of number is 1 to 100 !&quot; &lt;&lt; endl; return 0; &#125; &#x2F;&#x2F;根据用户输入的信息初始化结构体数组 for(;i &lt; N;i ++)&#123; cout &lt;&lt; &quot;please input the &quot; &lt;&lt; i + 1 &lt;&lt; &quot; person&#39;s key:&quot; &lt;&lt; endl; cin &gt;&gt; person.personKey[i]; person.personNo[i] &#x3D; i + 1; &#125; person.personNum &#x3D; N; &#x2F;&#x2F;接受用户输入的初始密码 cout &lt;&lt; &quot;please input the primitive key:&quot; &lt;&lt; endl; cin &gt;&gt; K; int counts &#x3D; 1; i &#x3D; 0; &#x2F;&#x2F;剩下一人时退出循环 while(person.personNum !&#x3D; 1)&#123; &#x2F;&#x2F;报的号码与密码一致并且这个人还未退出游戏时，此人离开游戏，密码为此人密码，标志置零。人数自减一，从1开始报数 if(counts &#x3D;&#x3D; K &amp;&amp; person.personNo[i] !&#x3D; 0)&#123; cout &lt;&lt; &quot;the person&#39;s No left is: &quot; &lt;&lt; person.personNo[i] &lt;&lt;endl; K &#x3D; person.personKey[i]; person.personNo[i] &#x3D; 0; person.personNum --; counts &#x3D; 1; &#125;&#x2F;&#x2F;报的号码与密码不一样并且此人还未退出游戏时，继续报数 else if(person.personNo[i] !&#x3D; 0)&#123; counts ++; &#125;&#x2F;&#x2F;控制报数循环进行 i &#x3D; (i + 1) % N; &#125; i &#x3D; 0;&#x2F;&#x2F;依据标志判断此人是否是最后剩下的人 for(;i &lt; N;i ++)&#123; if(person.personNo[i] !&#x3D; 0)&#123; cout &lt;&lt; &quot;Last one is: &quot; &lt;&lt; person.personNo[i] &lt;&lt;endl; break; &#125; &#125; return 0;&#125; 测试样例1.personNum最小值： 2.Illegal input： 3.用例1： ) 用例2： 用例3： 采用链表实现由于篇幅的原因，此处只粘贴源代码读者可自行测试（笔者亲测可行，如果发现问题请在评论区指出或者私信笔者，笔者将感激不尽） 源代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110#include &lt;iostream&gt;#include &lt;malloc.h&gt;using namespace std;&#x2F;&#x2F;指针节点结构体数组typedef struct linkNode&#123; int personNo; int personKey; linkNode* next; linkNode* pre;&#125;node,*Link;&#x2F;&#x2F;创建双向的课循环的链表Link createLink(int n)&#123; &#x2F;&#x2F;h设置为链表的头指针，然后执行相应的初始化 node* h &#x3D; (node*)malloc(sizeof(node)); h -&gt;next &#x3D; NULL; &#x2F;&#x2F;创建链表时应该先创建一个始终指向链表末尾的指针，并且这个指针目前应该 &#x2F;&#x2F;指向头指针的,所以初始化的时候应该将头指针的地址赋值给末尾指针r node* r; r &#x3D; h; for(int i &#x3D; 0;i &lt; n;i ++)&#123; &#x2F;&#x2F;这里为新的节点申请内存空间 node* n &#x3D; (node*)malloc(sizeof(node)); &#x2F;&#x2F;给新的节点赋值 n -&gt;personNo &#x3D; i + 1; &#x2F;&#x2F;输入每个人的key cout &lt;&lt; &quot;please input the &quot; &lt;&lt; i + 1 &lt;&lt; &quot; person&#39;s key:&quot; &lt;&lt; endl; cin &gt;&gt; n -&gt;personKey; &#x2F;&#x2F;新的节点此时应该是链表的最后一个节点，所以它的next指针应该指向空 n -&gt;next &#x3D; h -&gt;next; &#x2F;&#x2F;新节点的pre指针指向上一个元素 n -&gt;pre &#x3D; r; &#x2F;&#x2F;现在将尾指针的next指针指向这个新的节点，也就是将这两个节点连接起来 r -&gt;next &#x3D; n; &#x2F;&#x2F;最后，再将尾指针r指向这个新的节点 r &#x3D; n; &#125; &#x2F;&#x2F;双循环链表 h-&gt;next-&gt;pre &#x3D; r; &#x2F;&#x2F;循环结束后，返回这个链表的头指针h即可 return h;&#125;int main()&#123; int N,K; cout &lt;&lt; &quot;please input the amount of people:&quot; &lt;&lt; endl; cin &gt;&gt; N; if(N &lt;&#x3D;0) cout &lt;&lt; &quot;your input is illegal！&quot; &lt;&lt; endl; Link L &#x3D; createLink(N); cout &lt;&lt; &quot;please input the primitive key:&quot; &lt;&lt; endl; cin &gt;&gt; K; int counts &#x3D; 1; node* t &#x3D; L -&gt;next; node * p &#x3D; L -&gt;next;&#x2F;&#x2F;剩余人数为1时退出循环 while( N !&#x3D; 1)&#123; if(counts &#x3D;&#x3D; K)&#123; if(p -&gt;personNo &#x3D;&#x3D; t -&gt;personNo)&#123; t &#x3D; p -&gt;next; &#125; cout &lt;&lt; &quot;the No of person&#39;s left: &quot; &lt;&lt; p-&gt;personNo &lt;&lt; endl; K &#x3D; p -&gt;personKey; node* s &#x3D; p; s -&gt;pre -&gt;next &#x3D; s-&gt;next; s -&gt;next -&gt;pre &#x3D; s-&gt;pre; &#x2F;&#x2F;最后释放被删除节点的空间就行 free(s); counts &#x3D; 1; N --; &#125; else counts ++; p &#x3D; p -&gt;next; &#125; cout &lt;&lt; &quot;the last one:&quot; &lt;&lt; t -&gt;personNo &lt;&lt; endl; return 0;&#125;","raw":"---\ntitle: 约瑟夫环问题\ndate: 2020-03-31 13:07:57\ncopyright: true\ntoc: true\ncategories: [C++,算法]\ntags:\n\t- C++\n\t- 算法\n\t\n---\n\n\n\n<br>\n\n## 问题描述\nN个人在一起做游戏，他们制定了一下规则：\n1、首先，所有参加游戏的人按顺序编号为1、2、3…N； 2、接下来每个人心里产生一个数字，这个数字称为序号为 N的人的密码P； 3、所有参加游戏的人按照编号站成一个圈，为游戏设置初始密码K，从编\n号为 1的人这里开始报数，报到 K的人退出队伍，然后将自己心中的密码 K2说出\n来，由下一个人继续从 1开始报数，报到 K2的人退出队伍，以此类推；\n4、当只剩下一个人时，游戏结束。\n在用户输入了人数N、每个人的密码P和初始\n密码K的情况下，自动完成上面的游戏过程，输出先后离开队伍的人的序号序列，最后输出剩下的人的编号\n\n<!-- more -->\n\n***\n\n### 采用数组实现\n<br>\n\n#### 问题描述\n**输入：**\n人数N（规定最大人数为100）\n每个人的密码key\n初始密码K\n\n**输出：**\n先后离去的人的编号numNo\n最后剩下的人的编号numNo\n\n**处理过程：**\n  提示并存储用户输入的人的总数N\n  提示并存储用户输入的初始密码K\n  提示并存储用户输入的每一个人的密码key\n  遍历用户存储的人的密码的同时计数器自增\n  满足条件时进行相关操作，输出离开的人的编号\n  循环退出后输出最后剩下的人的编号\n  退出程序\n\n---\n\n#### 流程设计\n<br>\n\n![process](https://img-blog.csdnimg.cn/20200330151730884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n***\n\n#### 模块介绍\n**存储：**\n采用int类型的值存储人数N，初始密码K\n采用结构体数组存储每个人的编号personNo、密码\npersonKey和未离开的人数personNum\n\n**实现：**\n循环遍历数组的每个元素，符合条件的元素输出，直\n至数组中只有一个有效元素，再输出这个元素\n\n***\n\n#### 源代码\n```\n#include <iostream>\n#define NUM_MAX 100\nusing namespace std;\n\n//用结构体数组存放参与游戏的人的信息\nstruct person{\n    int personNo[NUM_MAX];\n    int personKey[NUM_MAX];\n    int personNum;\n}person;\n\nint main()\n{\n    int N,K,i = 0;\n\t//接受用户输入的人的数量\n    cout << \"please input the amount of people:\" << endl;\n    cin >> N;\n    //判断用户输入是否合法\n    if(N > 100 || N <= 0){\n        cout << \"please input the range of number is 1 to 100 !\" << endl;\n        return 0;\n    }\n\t//根据用户输入的信息初始化结构体数组\n    for(;i < N;i ++){\n        cout << \"please input the \" << i + 1 << \" person's key:\" << endl;\n        cin >> person.personKey[i];\n\n        person.personNo[i] = i + 1;\n\n    }\n\n    person.personNum = N;\n\t//接受用户输入的初始密码\n    cout << \"please input the primitive key:\" << endl;\n    cin >> K;\n\n    int counts = 1;\n    i = 0;\n\n\t//剩下一人时退出循环\n    while(person.personNum != 1){\n    //报的号码与密码一致并且这个人还未退出游戏时，此人离开游戏，密码为此人密码，标志置零。人数自减一，从1开始报数\n        if(counts == K && person.personNo[i] != 0){\n            cout << \"the person's No left is: \" << person.personNo[i] <<endl;\n            K = person.personKey[i];\n            person.personNo[i] = 0;\n            person.personNum --;\n            counts = 1;\n        }\n//报的号码与密码不一样并且此人还未退出游戏时，继续报数\n        else if(person.personNo[i] != 0){\n            counts ++;\n        }\n//控制报数循环进行\n        i = (i + 1) % N;\n    }\n\n    i = 0;\n//依据标志判断此人是否是最后剩下的人\n    for(;i < N;i ++){\n        if(person.personNo[i] != 0){\n            cout << \"Last one is: \" << person.personNo[i] <<endl;\n            break;\n        }\n\n    }\n\n    return 0;\n}\n\n```\n\n#### 测试样例\n\n1.personNum最小值：\n![test1](https://img-blog.csdnimg.cn/20200330153119951.png)\n\n2.Illegal input：\n\n![test2](https://img-blog.csdnimg.cn/2020033015313590.png)\n![test3](https://img-blog.csdnimg.cn/20200330153155651.png)\n\n3.用例1：\n\n![test4](https://img-blog.csdnimg.cn/20200330153213536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)![test5](https://img-blog.csdnimg.cn/20200330153234966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n用例2：\n![test6](https://img-blog.csdnimg.cn/20200330153255196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n用例3：\n![test7](https://img-blog.csdnimg.cn/20200330153311920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n***\n\n### 采用链表实现\n*由于篇幅的原因，此处只粘贴源代码读者可自行测试（笔者亲测可行，如果发现问题请在评论区指出或者私信笔者，笔者将感激不尽）*\n<br>\n\n#### 源代码\n\n```\n#include <iostream>\n#include <malloc.h>\n\nusing namespace std;\n\n//指针节点结构体数组\ntypedef struct linkNode{\n    int personNo;\n    int personKey;\n    linkNode* next;\n    linkNode* pre;\n}node,*Link;\n\n//创建双向的课循环的链表\nLink createLink(int n){\n\n    //h设置为链表的头指针，然后执行相应的初始化\n    node* h = (node*)malloc(sizeof(node));\n    h ->next = NULL;\n\n    //创建链表时应该先创建一个始终指向链表末尾的指针，并且这个指针目前应该\n    //指向头指针的,所以初始化的时候应该将头指针的地址赋值给末尾指针r\n    node* r;\n    r = h;\n\n    for(int i = 0;i < n;i ++){\n        //这里为新的节点申请内存空间\n        node* n = (node*)malloc(sizeof(node));\n        //给新的节点赋值\n        n ->personNo = i + 1;\n        //输入每个人的key\n        cout << \"please input the \" << i + 1 << \" person's key:\" << endl;\n        cin >> n ->personKey;\n        //新的节点此时应该是链表的最后一个节点，所以它的next指针应该指向空\n        n ->next = h ->next;\n        //新节点的pre指针指向上一个元素\n        n ->pre = r;\n        //现在将尾指针的next指针指向这个新的节点，也就是将这两个节点连接起来\n        r ->next = n;\n        //最后，再将尾指针r指向这个新的节点\n        r = n;\n\n    }\n\n    //双循环链表\n    h->next->pre = r;\n\n\n    //循环结束后，返回这个链表的头指针h即可\n    return h;\n}\n\n\n\nint main()\n{\n      int N,K;\n\n    cout << \"please input the amount of people:\" << endl;\n    cin >> N;\n\n    if(N <=0)\n        cout << \"your input is illegal！\" << endl;\n\n    Link L = createLink(N);\n\n\n    cout << \"please input the primitive key:\" << endl;\n    cin >> K;\n\n    int counts = 1;\n\n    node* t = L ->next;\n    node * p = L ->next;\n\n//剩余人数为1时退出循环\n    while( N != 1){\n        if(counts == K){\n            if(p ->personNo == t ->personNo){\n                t = p ->next;\n            }\n\n\n            cout << \"the No of person's left: \" << p->personNo << endl;\n            K = p ->personKey;\n\n\n            node* s = p;\n\n            s ->pre ->next = s->next;\n            s ->next ->pre = s->pre;\n            //最后释放被删除节点的空间就行\n            free(s);\n\n            counts = 1;\n            N --;\n        }\n        else\n        counts ++;\n\n        p = p ->next;\n    }\n\n\n    cout << \"the last one:\" << t ->personNo << endl;\n\n\n\n    return 0;\n}\n\n```\n\n\n\n","content":"<br>\n\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>N个人在一起做游戏，他们制定了一下规则：<br>1、首先，所有参加游戏的人按顺序编号为1、2、3…N； 2、接下来每个人心里产生一个数字，这个数字称为序号为 N的人的密码P； 3、所有参加游戏的人按照编号站成一个圈，为游戏设置初始密码K，从编<br>号为 1的人这里开始报数，报到 K的人退出队伍，然后将自己心中的密码 K2说出<br>来，由下一个人继续从 1开始报数，报到 K2的人退出队伍，以此类推；<br>4、当只剩下一个人时，游戏结束。<br>在用户输入了人数N、每个人的密码P和初始<br>密码K的情况下，自动完成上面的游戏过程，输出先后离开队伍的人的序号序列，最后输出剩下的人的编号</p>\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"采用数组实现\"><a href=\"#采用数组实现\" class=\"headerlink\" title=\"采用数组实现\"></a>采用数组实现</h3><br>\n\n<h4 id=\"问题描述-1\"><a href=\"#问题描述-1\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h4><p><strong>输入：</strong><br>人数N（规定最大人数为100）<br>每个人的密码key<br>初始密码K</p>\n<p><strong>输出：</strong><br>先后离去的人的编号numNo<br>最后剩下的人的编号numNo</p>\n<p><strong>处理过程：</strong><br>  提示并存储用户输入的人的总数N<br>  提示并存储用户输入的初始密码K<br>  提示并存储用户输入的每一个人的密码key<br>  遍历用户存储的人的密码的同时计数器自增<br>  满足条件时进行相关操作，输出离开的人的编号<br>  循环退出后输出最后剩下的人的编号<br>  退出程序</p>\n<hr>\n<h4 id=\"流程设计\"><a href=\"#流程设计\" class=\"headerlink\" title=\"流程设计\"></a>流程设计</h4><br>\n\n<p><img src=\"https://img-blog.csdnimg.cn/20200330151730884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"process\"></p>\n<hr>\n<h4 id=\"模块介绍\"><a href=\"#模块介绍\" class=\"headerlink\" title=\"模块介绍\"></a>模块介绍</h4><p><strong>存储：</strong><br>采用int类型的值存储人数N，初始密码K<br>采用结构体数组存储每个人的编号personNo、密码<br>personKey和未离开的人数personNum</p>\n<p><strong>实现：</strong><br>循环遍历数组的每个元素，符合条件的元素输出，直<br>至数组中只有一个有效元素，再输出这个元素</p>\n<hr>\n<h4 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#define NUM_MAX 100</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;用结构体数组存放参与游戏的人的信息</span><br><span class=\"line\">struct person&#123;</span><br><span class=\"line\">    int personNo[NUM_MAX];</span><br><span class=\"line\">    int personKey[NUM_MAX];</span><br><span class=\"line\">    int personNum;</span><br><span class=\"line\">&#125;person;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    int N,K,i &#x3D; 0;</span><br><span class=\"line\">\t&#x2F;&#x2F;接受用户输入的人的数量</span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the amount of people:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    cin &gt;&gt; N;</span><br><span class=\"line\">    &#x2F;&#x2F;判断用户输入是否合法</span><br><span class=\"line\">    if(N &gt; 100 || N &lt;&#x3D; 0)&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;please input the range of number is 1 to 100 !&quot; &lt;&lt; endl;</span><br><span class=\"line\">        return 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t&#x2F;&#x2F;根据用户输入的信息初始化结构体数组</span><br><span class=\"line\">    for(;i &lt; N;i ++)&#123;</span><br><span class=\"line\">        cout &lt;&lt; &quot;please input the &quot; &lt;&lt; i + 1 &lt;&lt; &quot; person&#39;s key:&quot; &lt;&lt; endl;</span><br><span class=\"line\">        cin &gt;&gt; person.personKey[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        person.personNo[i] &#x3D; i + 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    person.personNum &#x3D; N;</span><br><span class=\"line\">\t&#x2F;&#x2F;接受用户输入的初始密码</span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the primitive key:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    cin &gt;&gt; K;</span><br><span class=\"line\"></span><br><span class=\"line\">    int counts &#x3D; 1;</span><br><span class=\"line\">    i &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#x2F;&#x2F;剩下一人时退出循环</span><br><span class=\"line\">    while(person.personNum !&#x3D; 1)&#123;</span><br><span class=\"line\">    &#x2F;&#x2F;报的号码与密码一致并且这个人还未退出游戏时，此人离开游戏，密码为此人密码，标志置零。人数自减一，从1开始报数</span><br><span class=\"line\">        if(counts &#x3D;&#x3D; K &amp;&amp; person.personNo[i] !&#x3D; 0)&#123;</span><br><span class=\"line\">            cout &lt;&lt; &quot;the person&#39;s No left is: &quot; &lt;&lt; person.personNo[i] &lt;&lt;endl;</span><br><span class=\"line\">            K &#x3D; person.personKey[i];</span><br><span class=\"line\">            person.personNo[i] &#x3D; 0;</span><br><span class=\"line\">            person.personNum --;</span><br><span class=\"line\">            counts &#x3D; 1;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#x2F;&#x2F;报的号码与密码不一样并且此人还未退出游戏时，继续报数</span><br><span class=\"line\">        else if(person.personNo[i] !&#x3D; 0)&#123;</span><br><span class=\"line\">            counts ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#x2F;&#x2F;控制报数循环进行</span><br><span class=\"line\">        i &#x3D; (i + 1) % N;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    i &#x3D; 0;</span><br><span class=\"line\">&#x2F;&#x2F;依据标志判断此人是否是最后剩下的人</span><br><span class=\"line\">    for(;i &lt; N;i ++)&#123;</span><br><span class=\"line\">        if(person.personNo[i] !&#x3D; 0)&#123;</span><br><span class=\"line\">            cout &lt;&lt; &quot;Last one is: &quot; &lt;&lt; person.personNo[i] &lt;&lt;endl;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"测试样例\"><a href=\"#测试样例\" class=\"headerlink\" title=\"测试样例\"></a>测试样例</h4><p>1.personNum最小值：<br><img src=\"https://img-blog.csdnimg.cn/20200330153119951.png\" alt=\"test1\"></p>\n<p>2.Illegal input：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020033015313590.png\" alt=\"test2\"><br><img src=\"https://img-blog.csdnimg.cn/20200330153155651.png\" alt=\"test3\"></p>\n<p>3.用例1：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200330153213536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"test4\">)<img src=\"https://img-blog.csdnimg.cn/20200330153234966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"test5\"></p>\n<p>用例2：<br><img src=\"https://img-blog.csdnimg.cn/20200330153255196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"test6\"></p>\n<p>用例3：<br><img src=\"https://img-blog.csdnimg.cn/20200330153311920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"test7\"></p>\n<hr>\n<h3 id=\"采用链表实现\"><a href=\"#采用链表实现\" class=\"headerlink\" title=\"采用链表实现\"></a>采用链表实现</h3><p><em>由于篇幅的原因，此处只粘贴源代码读者可自行测试（笔者亲测可行，如果发现问题请在评论区指出或者私信笔者，笔者将感激不尽）</em><br><br></p>\n<h4 id=\"源代码-1\"><a href=\"#源代码-1\" class=\"headerlink\" title=\"源代码\"></a>源代码</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;malloc.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;指针节点结构体数组</span><br><span class=\"line\">typedef struct linkNode&#123;</span><br><span class=\"line\">    int personNo;</span><br><span class=\"line\">    int personKey;</span><br><span class=\"line\">    linkNode* next;</span><br><span class=\"line\">    linkNode* pre;</span><br><span class=\"line\">&#125;node,*Link;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;创建双向的课循环的链表</span><br><span class=\"line\">Link createLink(int n)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;h设置为链表的头指针，然后执行相应的初始化</span><br><span class=\"line\">    node* h &#x3D; (node*)malloc(sizeof(node));</span><br><span class=\"line\">    h -&gt;next &#x3D; NULL;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;创建链表时应该先创建一个始终指向链表末尾的指针，并且这个指针目前应该</span><br><span class=\"line\">    &#x2F;&#x2F;指向头指针的,所以初始化的时候应该将头指针的地址赋值给末尾指针r</span><br><span class=\"line\">    node* r;</span><br><span class=\"line\">    r &#x3D; h;</span><br><span class=\"line\"></span><br><span class=\"line\">    for(int i &#x3D; 0;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        &#x2F;&#x2F;这里为新的节点申请内存空间</span><br><span class=\"line\">        node* n &#x3D; (node*)malloc(sizeof(node));</span><br><span class=\"line\">        &#x2F;&#x2F;给新的节点赋值</span><br><span class=\"line\">        n -&gt;personNo &#x3D; i + 1;</span><br><span class=\"line\">        &#x2F;&#x2F;输入每个人的key</span><br><span class=\"line\">        cout &lt;&lt; &quot;please input the &quot; &lt;&lt; i + 1 &lt;&lt; &quot; person&#39;s key:&quot; &lt;&lt; endl;</span><br><span class=\"line\">        cin &gt;&gt; n -&gt;personKey;</span><br><span class=\"line\">        &#x2F;&#x2F;新的节点此时应该是链表的最后一个节点，所以它的next指针应该指向空</span><br><span class=\"line\">        n -&gt;next &#x3D; h -&gt;next;</span><br><span class=\"line\">        &#x2F;&#x2F;新节点的pre指针指向上一个元素</span><br><span class=\"line\">        n -&gt;pre &#x3D; r;</span><br><span class=\"line\">        &#x2F;&#x2F;现在将尾指针的next指针指向这个新的节点，也就是将这两个节点连接起来</span><br><span class=\"line\">        r -&gt;next &#x3D; n;</span><br><span class=\"line\">        &#x2F;&#x2F;最后，再将尾指针r指向这个新的节点</span><br><span class=\"line\">        r &#x3D; n;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;双循环链表</span><br><span class=\"line\">    h-&gt;next-&gt;pre &#x3D; r;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;循环结束后，返回这个链表的头指针h即可</span><br><span class=\"line\">    return h;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      int N,K;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the amount of people:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    cin &gt;&gt; N;</span><br><span class=\"line\"></span><br><span class=\"line\">    if(N &lt;&#x3D;0)</span><br><span class=\"line\">        cout &lt;&lt; &quot;your input is illegal！&quot; &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    Link L &#x3D; createLink(N);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the primitive key:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    cin &gt;&gt; K;</span><br><span class=\"line\"></span><br><span class=\"line\">    int counts &#x3D; 1;</span><br><span class=\"line\"></span><br><span class=\"line\">    node* t &#x3D; L -&gt;next;</span><br><span class=\"line\">    node * p &#x3D; L -&gt;next;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;剩余人数为1时退出循环</span><br><span class=\"line\">    while( N !&#x3D; 1)&#123;</span><br><span class=\"line\">        if(counts &#x3D;&#x3D; K)&#123;</span><br><span class=\"line\">            if(p -&gt;personNo &#x3D;&#x3D; t -&gt;personNo)&#123;</span><br><span class=\"line\">                t &#x3D; p -&gt;next;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            cout &lt;&lt; &quot;the No of person&#39;s left: &quot; &lt;&lt; p-&gt;personNo &lt;&lt; endl;</span><br><span class=\"line\">            K &#x3D; p -&gt;personKey;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            node* s &#x3D; p;</span><br><span class=\"line\"></span><br><span class=\"line\">            s -&gt;pre -&gt;next &#x3D; s-&gt;next;</span><br><span class=\"line\">            s -&gt;next -&gt;pre &#x3D; s-&gt;pre;</span><br><span class=\"line\">            &#x2F;&#x2F;最后释放被删除节点的空间就行</span><br><span class=\"line\">            free(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            counts &#x3D; 1;</span><br><span class=\"line\">            N --;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else</span><br><span class=\"line\">        counts ++;</span><br><span class=\"line\"></span><br><span class=\"line\">        p &#x3D; p -&gt;next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;the last one:&quot; &lt;&lt; t -&gt;personNo &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","slug":"约瑟夫环问题","updated":"2020-04-05T03:10:03.381Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/03/31/%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF%E9%97%AE%E9%A2%98/","excerpt":"问题描述N个人在一起做游戏，他们制定了一下规则：1、首先，所有参加游戏的人按顺序编号为1、2、3…N； 2、接下来每个人心里产生一个数字，这个数字称为序号为 N的人的密码P； 3、所有参加游戏的人按照编号站成一个圈，为游戏设置初始密码K，从编号为 1的人这里开始报数，报到 K的人退出队伍，然后将自己心中的密码 K2说出来，由下一个人继续从 1开始报数，报到 K2的人退出队伍，以此类推；4、当只剩下一个人时，游戏结束。在用户输入了人数N、每个人的密码P和初始密码K的情况下，自动完成上面的游戏过程，输出先后离开队伍的人的序号序列，最后输出剩下的人的编号","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"如何找出int数组中只出现一次的两个元素（其它所有元素都出现了两次）？","date":"2020-03-31T05:04:39.000Z","path":"2020/03/31/如何找出int数组中只出现一次的两个元素（其它所有元素都出现了两次）？/","text":"问题描述在一个int类型的数组中除有两个元素各出现了一次外，其它元素都出现了两次，最好能保证最好的时空效率。 算法一回溯算法： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include &lt;iostream&gt;using namespace std;int main()&#123; int len &#x3D; 0; &#x2F;&#x2F;接受用户输入的数组长度 cout &lt;&lt; &quot;please input the array length: &quot; ; cin &gt;&gt; len; int a[len]; &#x2F;&#x2F;接受用户输入的数组元素 cout &lt;&lt; &quot;please the array&#39;s elements:&quot; &lt;&lt; endl; for(int i &#x3D; 0;i &lt; len;i++)&#123; cin &gt;&gt; a[i]; &#125; int temp &#x3D; 0;&#x2F;&#x2F;正在检测的数组元素下标 int i &#x3D; 0;&#x2F;&#x2F;记录待检测数组元素下标 while(temp &lt; len)&#123; &#x2F;*如果temp元素与i相等并且temp不等于i（因为初始值中temp &#x3D; i） 或者temp元素已经检测过*&#x2F; if((a[temp] &#x3D;&#x3D; a[i] &amp;&amp; temp !&#x3D; i) || a[temp] &#x3D;&#x3D; -1)&#123; &#x2F;*标记已经检测过的元素，这个标记是int数组中被限定输入的值 读者可以根据需要指定，这里为了方便说明采用‘-1’标记*&#x2F; a[temp] &#x3D; -1; a[i] &#x3D; -1; i &#x3D; ++temp; &#125; &#x2F;&#x2F;i大于数组长度后，表示正在检测的元素只出现了一次 else if (i &gt;&#x3D; len)&#123; cout &lt;&lt; a[temp] &lt;&lt; &quot; &quot;; i &#x3D; ++temp; &#125; &#x2F;&#x2F;不满足上述分支条件，i指向下一个元素 else i ++; &#125; return 0;&#125; 测试结果：test1:test2:test3: 评价： 空间复杂度为O(1)，时间复杂度上大于 O(n)小于等于O(n^2),空间上达到要求，时间上未达到要求，需要改进算法。 算法二位运算算法： 1234567891011121314151617181920212223242526272829303132333435363738394041#include &lt;iostream&gt;using namespace std;int main()&#123; &#x2F;&#x2F;初始化待检测数组 int arr[8] &#x3D; &#123;2,5,5,2,3,6,4,6&#125;; int num &#x3D; 0; &#x2F;&#x2F;找出数组中只出现过一次的元素的异或值 for(int i &#x3D; 0;i &lt; 8;i ++)&#123; num &#x3D; num ^ arr[i]; &#125; cout &lt;&lt; &quot;num:&quot; &lt;&lt; num &lt;&lt; endl; int temp &#x3D; 1; &#x2F;*从最低位开始找出两个元素第一次不同的位，即num中从最低位第一次出现1的地方*&#x2F; while((temp &amp; num) &#x3D;&#x3D; 0)&#123; temp &lt;&lt;&#x3D; 1; &#125; cout &lt;&lt; &quot;temp:&quot; &lt;&lt; temp &lt;&lt; endl; int num1 &#x3D; 0; int num2 &#x3D; 0;&#x2F;&#x2F;用按位与运算将这两个数分开，分别按位异或，（一个数自己与自己异或为0） for(int i &#x3D; 0;i &lt; 8;i ++)&#123; if((temp &amp; arr[i]) &#x3D;&#x3D; 0) num1 ^&#x3D; arr[i]; else num2 ^&#x3D; arr[i]; &#125; cout &lt;&lt; &quot;num1:&quot; &lt;&lt; num1 &lt;&lt;endl; cout &lt;&lt; &quot;num2:&quot; &lt;&lt; num2 &lt;&lt; endl; return 0;&#125; 测试结果： test1:读者可以自行设计测试样例进行测试 评价：由于只遍历了一遍数组的元素，故时间复杂度为o(n)空间复杂度为o(1),符合题目要求 —-end—","raw":"---\ntitle: 如何找出int数组中只出现一次的两个元素（其它所有元素都出现了两次）？\ndate: 2020-03-31 13:04:39\ncopyright: true\ntoc: true\ncategories: [C++,算法]\ntags:\n\t- C++\n\t- 算法\n---\n\n# \n<br>\n\n## 问题描述\n在一个int类型的数组中除有两个元素各出现了一次外，其它元素都出现了两次，最好能保证最好的时空效率。\n\n<!-- more -->\n\n***\n\n### *算法一*\n回溯算法：\n\n```\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\n    int len = 0;\n    //接受用户输入的数组长度\n    cout << \"please input the array length: \" ;\n    cin >> len;\n\n    int a[len];\n\n\t//接受用户输入的数组元素\n    cout << \"please the array's elements:\" << endl;\n    for(int i = 0;i < len;i++){\n        cin >> a[i];\n    }\n\n\n    int temp = 0;//正在检测的数组元素下标\n    int i = 0;//记录待检测数组元素下标\n\n    while(temp < len){\n\t\t/*如果temp元素与i相等并且temp不等于i（因为初始值中temp = i）\n\t\t或者temp元素已经检测过*/\n        if((a[temp] == a[i] && temp != i) || a[temp] == -1){\n            /*标记已经检测过的元素，这个标记是int数组中被限定输入的值\n            读者可以根据需要指定，这里为了方便说明采用‘-1’标记*/\n            a[temp] = -1;\n            a[i] = -1;\n            i = ++temp;\n        }\n        //i大于数组长度后，表示正在检测的元素只出现了一次\n        else if (i >= len){\n            cout << a[temp] << \" \";\n            i = ++temp;\n        }\n        //不满足上述分支条件，i指向下一个元素\n        else\n            i ++;\n    }\n\n\n    return 0;\n}\n\n```\n\n***\n\n**测试结果：**\n<br>\n*test1:*\n![result1](https://img-blog.csdnimg.cn/20200330140155338.png)\n*test2:*\n![result2](https://img-blog.csdnimg.cn/20200330140725722.png)\n*test3:*\n![result3](https://img-blog.csdnimg.cn/20200330140858375.png)\n***\n\n**评价：**\n\n空间复杂度为O(1)，时间复杂度上大于 O(n)小于等于O(n^2),\n空间上达到要求，时间上未达到要求，需要改进算法。\n\n***\n\n\n### *算法二*\n\n位运算算法：\n```\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n\t//初始化待检测数组\n    int arr[8] = {2,5,5,2,3,6,4,6};\n\n    int num = 0;\n\n\t//找出数组中只出现过一次的元素的异或值\n    for(int i = 0;i < 8;i ++){\n        num = num ^ arr[i];\n    }\n\n    cout << \"num:\" << num << endl;\n\n    int temp = 1;\n\t/*从最低位开始找出两个元素第一次不同的位，即num中从最低位第一次出现1的地方*/\n    while((temp & num) == 0){\n        temp <<= 1;\n    }\n\n    cout << \"temp:\" << temp << endl;\n\n    int num1 = 0;\n    int num2 = 0;\n\n//用按位与运算将这两个数分开，分别按位异或，（一个数自己与自己异或为0）\n    for(int i = 0;i < 8;i ++){\n        if((temp & arr[i]) == 0)\n            num1 ^= arr[i];\n        else\n            num2 ^= arr[i];\n    }\n\n    cout << \"num1:\" << num1 <<endl;\n    cout << \"num2:\" << num2 << endl;\n    return 0;\n}\n\n```\n\n**测试结果：**\n\n<br>\n\n*test1:*\n![result1](https://img-blog.csdnimg.cn/20200330144347453.png)\n读者可以自行设计测试样例进行测试\n\n**评价：**\n由于只遍历了一遍数组的元素，故时间复杂度为o(n)\n空间复杂度为o(1),符合题目要求\n\n\n<br><br>\n----end---\n\n\n\n","content":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><br>\n\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>在一个int类型的数组中除有两个元素各出现了一次外，其它元素都出现了两次，最好能保证最好的时空效率。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"算法一\"><a href=\"#算法一\" class=\"headerlink\" title=\"算法一\"></a><em>算法一</em></h3><p>回溯算法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int len &#x3D; 0;</span><br><span class=\"line\">    &#x2F;&#x2F;接受用户输入的数组长度</span><br><span class=\"line\">    cout &lt;&lt; &quot;please input the array length: &quot; ;</span><br><span class=\"line\">    cin &gt;&gt; len;</span><br><span class=\"line\"></span><br><span class=\"line\">    int a[len];</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#x2F;&#x2F;接受用户输入的数组元素</span><br><span class=\"line\">    cout &lt;&lt; &quot;please the array&#39;s elements:&quot; &lt;&lt; endl;</span><br><span class=\"line\">    for(int i &#x3D; 0;i &lt; len;i++)&#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    int temp &#x3D; 0;&#x2F;&#x2F;正在检测的数组元素下标</span><br><span class=\"line\">    int i &#x3D; 0;&#x2F;&#x2F;记录待检测数组元素下标</span><br><span class=\"line\"></span><br><span class=\"line\">    while(temp &lt; len)&#123;</span><br><span class=\"line\">\t\t&#x2F;*如果temp元素与i相等并且temp不等于i（因为初始值中temp &#x3D; i）</span><br><span class=\"line\">\t\t或者temp元素已经检测过*&#x2F;</span><br><span class=\"line\">        if((a[temp] &#x3D;&#x3D; a[i] &amp;&amp; temp !&#x3D; i) || a[temp] &#x3D;&#x3D; -1)&#123;</span><br><span class=\"line\">            &#x2F;*标记已经检测过的元素，这个标记是int数组中被限定输入的值</span><br><span class=\"line\">            读者可以根据需要指定，这里为了方便说明采用‘-1’标记*&#x2F;</span><br><span class=\"line\">            a[temp] &#x3D; -1;</span><br><span class=\"line\">            a[i] &#x3D; -1;</span><br><span class=\"line\">            i &#x3D; ++temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#x2F;&#x2F;i大于数组长度后，表示正在检测的元素只出现了一次</span><br><span class=\"line\">        else if (i &gt;&#x3D; len)&#123;</span><br><span class=\"line\">            cout &lt;&lt; a[temp] &lt;&lt; &quot; &quot;;</span><br><span class=\"line\">            i &#x3D; ++temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        &#x2F;&#x2F;不满足上述分支条件，i指向下一个元素</span><br><span class=\"line\">        else</span><br><span class=\"line\">            i ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><strong>测试结果：</strong><br><br><br><em>test1:</em><br><img src=\"https://img-blog.csdnimg.cn/20200330140155338.png\" alt=\"result1\"><br><em>test2:</em><br><img src=\"https://img-blog.csdnimg.cn/20200330140725722.png\" alt=\"result2\"><br><em>test3:</em><br><img src=\"https://img-blog.csdnimg.cn/20200330140858375.png\" alt=\"result3\"></p>\n<hr>\n<p><strong>评价：</strong></p>\n<p>空间复杂度为O(1)，时间复杂度上大于 O(n)小于等于O(n^2),<br>空间上达到要求，时间上未达到要求，需要改进算法。</p>\n<hr>\n<h3 id=\"算法二\"><a href=\"#算法二\" class=\"headerlink\" title=\"算法二\"></a><em>算法二</em></h3><p>位运算算法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t&#x2F;&#x2F;初始化待检测数组</span><br><span class=\"line\">    int arr[8] &#x3D; &#123;2,5,5,2,3,6,4,6&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    int num &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#x2F;&#x2F;找出数组中只出现过一次的元素的异或值</span><br><span class=\"line\">    for(int i &#x3D; 0;i &lt; 8;i ++)&#123;</span><br><span class=\"line\">        num &#x3D; num ^ arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;num:&quot; &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    int temp &#x3D; 1;</span><br><span class=\"line\">\t&#x2F;*从最低位开始找出两个元素第一次不同的位，即num中从最低位第一次出现1的地方*&#x2F;</span><br><span class=\"line\">    while((temp &amp; num) &#x3D;&#x3D; 0)&#123;</span><br><span class=\"line\">        temp &lt;&lt;&#x3D; 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;temp:&quot; &lt;&lt; temp &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    int num1 &#x3D; 0;</span><br><span class=\"line\">    int num2 &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;用按位与运算将这两个数分开，分别按位异或，（一个数自己与自己异或为0）</span><br><span class=\"line\">    for(int i &#x3D; 0;i &lt; 8;i ++)&#123;</span><br><span class=\"line\">        if((temp &amp; arr[i]) &#x3D;&#x3D; 0)</span><br><span class=\"line\">            num1 ^&#x3D; arr[i];</span><br><span class=\"line\">        else</span><br><span class=\"line\">            num2 ^&#x3D; arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; &quot;num1:&quot; &lt;&lt; num1 &lt;&lt;endl;</span><br><span class=\"line\">    cout &lt;&lt; &quot;num2:&quot; &lt;&lt; num2 &lt;&lt; endl;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>测试结果：</strong></p>\n<br>\n\n<p><em>test1:</em><br><img src=\"https://img-blog.csdnimg.cn/20200330144347453.png\" alt=\"result1\"><br>读者可以自行设计测试样例进行测试</p>\n<p><strong>评价：</strong><br>由于只遍历了一遍数组的元素，故时间复杂度为o(n)<br>空间复杂度为o(1),符合题目要求</p>\n<p><br><br><br>—-end—</p>\n","slug":"如何找出int数组中只出现一次的两个元素（其它所有元素都出现了两次）？","updated":"2020-04-05T03:10:51.119Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/03/31/%E5%A6%82%E4%BD%95%E6%89%BE%E5%87%BAint%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%88%E5%85%B6%E5%AE%83%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E5%87%BA%E7%8E%B0%E4%BA%86%E4%B8%A4%E6%AC%A1%EF%BC%89%EF%BC%9F/","excerpt":"问题描述在一个int类型的数组中除有两个元素各出现了一次外，其它元素都出现了两次，最好能保证最好的时空效率。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"蒙特卡洛算法应用 --- 估算圆周率","date":"2020-03-31T04:49:51.000Z","path":"2020/03/31/蒙特卡洛算法应用之计算圆周率/","text":"写在前面 Monte Carlo method，也称为统计模拟方法，是一个针对计算机处理能力设计的利用概率统计理论解决一些较为复杂的计算问题的巧妙算法，是解决某些问题的唯一可行算法，下面将利用蒙特卡洛算法粗略计算圆周率的值。 问题模型 源代码1234567891011121314151617181920212223242526272829303132333435#include &lt;iostream&gt;#include &lt;cmath&gt;#include &lt;cstdlib&gt;#include &lt;ctime&gt;#include &lt;iomanip&gt;using namespace std;int main()&#123; &#x2F;&#x2F;初始化随机数生成器 unsigned seed; seed &#x3D; time(0); srand(seed); &#x2F;&#x2F;初始化计数器 int i,counts &#x3D; 0; &#x2F;&#x2F;定义随机次数、正方形边长 const int times &#x3D; 100000; const int lenth &#x3D; 500; for(i &#x3D; 0;i &lt; times;i ++)&#123; int value1 &#x3D; (rand()%(lenth))+1; int value2 &#x3D; (rand()%(lenth))+1; if(abs(pow(pow((value1 - lenth &#x2F; 2),2) + pow((value2 - lenth &#x2F; 2),2) ,0.5)) &lt;&#x3D; (lenth &#x2F; 2)) counts ++; &#125; cout &lt;&lt; ((long double)counts &#x2F; times) * 4 &lt;&lt; endl; return 0;&#125; 运行结果 test1: test2:test3: -end-","raw":"---\ntitle: 蒙特卡洛算法应用 --- 估算圆周率\ndate: 2020-03-31 12:49:51\ncopyright: true\ntoc: true\ncategories: [C++,算法]\ntags:\n\t- C++\n\t- 算法\n\t\n---\n\n# \n\n<br>\n\n## 写在前面\n  Monte Carlo method，也称为统计模拟方法，是一个针对计算机处理能力设计的利用概率统计理论解决一些较为复杂的计算问题的巧妙算法，是解决某些问题的唯一可行算法，下面将利用蒙特卡洛算法粗略计算圆周率的值。\n\n<!-- more -->\n\n---\n### 问题模型\n![design](https://img-blog.csdnimg.cn/20200330132258383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70)\n\n---\n### 源代码\n```\n#include <iostream>\n#include <cmath>\n#include <cstdlib>\n#include <ctime>\n#include <iomanip>\n\nusing namespace std;\n\nint main()\n{\n    //初始化随机数生成器\n    unsigned seed;\n    seed = time(0);\n    srand(seed);\n\n    //初始化计数器\n    int i,counts = 0;\n\n    //定义随机次数、正方形边长\n    const int times = 100000;\n    const int lenth = 500;\n\n    for(i = 0;i < times;i ++){\n        int value1 = (rand()%(lenth))+1;\n        int value2 = (rand()%(lenth))+1;\n\n        if(abs(pow(pow((value1 - lenth / 2),2) + pow((value2 - lenth / 2),2) ,0.5)) <= (lenth / 2))\n            counts ++;\n    }\n\n\n    cout << ((long double)counts / times) * 4 << endl;\n\n    return 0;\n}\n```\n\n***\n\n### 运行结果\n<br>\n\n*test1:*\n ![result1](https://img-blog.csdnimg.cn/20200330132649386.png)\n*test2:*\n![result2](https://img-blog.csdnimg.cn/20200330132844594.png)\n*test3:*\n![result3](https://img-blog.csdnimg.cn/20200330133126272.png)\n\n\n\n-end-\n\n","content":"<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><br>\n\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>  Monte Carlo method，也称为统计模拟方法，是一个针对计算机处理能力设计的利用概率统计理论解决一些较为复杂的计算问题的巧妙算法，是解决某些问题的唯一可行算法，下面将利用蒙特卡洛算法粗略计算圆周率的值。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h3 id=\"问题模型\"><a href=\"#问题模型\" class=\"headerlink\" title=\"问题模型\"></a>问题模型</h3><p><img src=\"https://img-blog.csdnimg.cn/20200330132258383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"design\"></p>\n<hr>\n<h3 id=\"源代码\"><a href=\"#源代码\" class=\"headerlink\" title=\"源代码\"></a>源代码</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;iostream&gt;</span><br><span class=\"line\">#include &lt;cmath&gt;</span><br><span class=\"line\">#include &lt;cstdlib&gt;</span><br><span class=\"line\">#include &lt;ctime&gt;</span><br><span class=\"line\">#include &lt;iomanip&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &#x2F;&#x2F;初始化随机数生成器</span><br><span class=\"line\">    unsigned seed;</span><br><span class=\"line\">    seed &#x3D; time(0);</span><br><span class=\"line\">    srand(seed);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;初始化计数器</span><br><span class=\"line\">    int i,counts &#x3D; 0;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#x2F;&#x2F;定义随机次数、正方形边长</span><br><span class=\"line\">    const int times &#x3D; 100000;</span><br><span class=\"line\">    const int lenth &#x3D; 500;</span><br><span class=\"line\"></span><br><span class=\"line\">    for(i &#x3D; 0;i &lt; times;i ++)&#123;</span><br><span class=\"line\">        int value1 &#x3D; (rand()%(lenth))+1;</span><br><span class=\"line\">        int value2 &#x3D; (rand()%(lenth))+1;</span><br><span class=\"line\"></span><br><span class=\"line\">        if(abs(pow(pow((value1 - lenth &#x2F; 2),2) + pow((value2 - lenth &#x2F; 2),2) ,0.5)) &lt;&#x3D; (lenth &#x2F; 2))</span><br><span class=\"line\">            counts ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; ((long double)counts &#x2F; times) * 4 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h3><br>\n\n<p><em>test1:</em><br> <img src=\"https://img-blog.csdnimg.cn/20200330132649386.png\" alt=\"result1\"><br><em>test2:</em><br><img src=\"https://img-blog.csdnimg.cn/20200330132844594.png\" alt=\"result2\"><br><em>test3:</em><br><img src=\"https://img-blog.csdnimg.cn/20200330133126272.png\" alt=\"result3\"></p>\n<p>-end-</p>\n","slug":"蒙特卡洛算法应用之计算圆周率","updated":"2020-04-05T03:11:06.072Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/03/31/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E7%AE%97%E6%B3%95%E5%BA%94%E7%94%A8%E4%B9%8B%E8%AE%A1%E7%AE%97%E5%9C%86%E5%91%A8%E7%8E%87/","excerpt":"写在前面 Monte Carlo method，也称为统计模拟方法，是一个针对计算机处理能力设计的利用概率统计理论解决一些较为复杂的计算问题的巧妙算法，是解决某些问题的唯一可行算法，下面将利用蒙特卡洛算法粗略计算圆周率的值。","categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"MarkDown的简单使用及介绍","date":"2020-03-31T03:57:30.000Z","path":"2020/03/31/MarkDown的简单使用及介绍/","text":"MarkDown是什么？MarkDown是一种纯文本的标记语言，创始人是约翰·格鲁伯。它旨在使用最简洁的语法使文本具有一定的格式，以此来代替复杂的排版方式，因此深受推崇和使用。 MarkDown可以做什么？由于MarkDown的轻量、简洁、易用的特点，所以很多人拿它来完成博客的创作。或者用于编写一些说明性的帮助文档。一般采用 “.md” 的文件格式显示。 MarkDown常用的编辑器有哪些？ Windows、Linux平台都支持MarkDown的编辑器：VSCode、Atom、HBuilderX、Typora、MarkdownPad2、RStudio iOS平台支持的MarkDown编辑器Byword MarkDown的怎样使用？编辑文本数据的语法、效果及注意事项一：标题效果实现1、用”#”标记语法： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 效果： 注意事项： MarkDown目前只支持1~6阶的标题定义，所以超出6阶范围的不会呈现出相应的效果； 例如：####### 七级标题 会得到如下的显示： ####### 七级标题 以此类推，8、9……都不会显示相应的效果，只会被当做普通文本处理。 2、用”=”或”-“标记语法： 1234一级标题&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;二级标题----------- 效果： 注意事项： “=” 或 “-“ 至少要使用一个； 二：正文文字效果实现1、加斜、加粗、加粗加斜、删除 语法： 1234*这是加斜后的字体***这是加粗后的字体*****这是加斜加粗后的字体***~~这是删除后的文字~~ 效果： 这是加斜后的字体这是加粗后的字体这是加斜加粗后的字体这是删除后的文字 2、分割线 语法： 123---分割线1***分割线2__分割线3 效果： 分割线1 分割线2 分割线3 3、换行 使用html语法 “&lt;br&gt;换行 连续输入两个或两个以上空格再按回车键 4、首行缩进 英文缩进：&amp;ensp;&amp;ensp;(代表缩进两个英文字符) 中文缩进：&amp;emsp;&amp;emsp;(代表缩进两个中文字符) 说明： 通常一个中文字符=两个英文字符，所以这里的&amp;emsp;等于两个&amp;ensp;作用。这里只写出了较为常用的方式，读者对于实际情况可以自由使用以上两种缩进方式。 5、特殊字符的显示 在MarkDown中，例如”&quot;、”*”等一些特殊字符往往被赋予了特殊的意义（如前面的加粗、加斜等效果的实现中有”*“这种特殊字符的参与）,因此无法直接输入输出,基于这种情况，可以使用反转义字符”&quot;来显示特殊字符 例如：“\\*“ 可以输出 “*“,”\\\\“ 可以输出 “\\“ 等，以此类推，所有特殊字符都可以通过在它的前面添加反转义字符”\\“来实现。 6、字体类型、大小、颜色 语法： 12345 &lt;font face&#x3D;&quot;楷体&quot;&gt;我是楷体字&lt;&#x2F;font&gt;&lt;br&gt; &lt;font size&#x3D;20&gt;我是20号字&lt;&#x2F;font&gt;&lt;br&gt; &lt;font color&#x3D;#FFCC00&gt;我是橙色字&lt;&#x2F;font&gt; &lt;br&gt;( #FFCC00 为颜色的16进制代码)&lt;br&gt; &lt;font color&#x3D;#0099ff size&#x3D;20 face&#x3D;&quot;楷体&quot;&gt;楷体&lt;&#x2F;font&gt;&lt;br&gt;效果： 我是楷体字 我是20号字 我是橙色字 ( #FFCC00 为颜色的16进制代码) 楷体 引用数据的语法、效果语法： 123&gt;这是被引用的话1&gt;&gt;这是被引用的话2&gt;&gt;&gt;这是被引用的话3 效果： 这是被引用的话1 这是被引用的话2 这是被引用的话3 插入数据的语法、效果及注意事项一：插入表格1、插入无序列表语法： 123* 无序列表+ 无序列表- 无序列表 效果： 无序列表 无序列表 无序列表 注意事项：上述三种符号都可以实现无序列表的效果，注意符号和列表内容之间要以空格隔开。 2、插入有序列表语法： 1231. 有序列表2. 有序列表3. 有序列表 效果： 有序列表 有序列表 有序列表 注意事项：“.”与列表内容要以空格隔开 3、插入绘制表格语法： 1234表头|表头|表头|:-:|:-:|:-:|内容|内容|内容内容|内容|内容 效果：表头|表头|表头|:-:|:-:|:-:|内容|内容|内容内容|内容|内容 注意：文字默认居左两边加：表示文字居中右边加：表示文字居右两边的 | 可以省略 二：插入代码插入单行代码语法： 1&#96;&lt;?php echo &#39;hello https:&#x2F;&#x2F;tool.lu&#x2F;&#39;;&#96; 在 ` ` 中间插入你想插入的代码即可 效果：&lt;?php echo &#39;hello https://tool.lu/&#39;; 插入 多行代码/代码块 语法： 在 ```插入代码块```中间插入你想插入的代码即可或者直接按Tab键也可。（注意：输入```后一定要按回车，再输入内容，输完之后还要再按一次回车，然后输入```）。效果： 12345&lt;?phpdate_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);echo &#39;hello https:&#x2F;&#x2F;tool.lu&#x2F;&#39;; 三：插入超链接超链接语法： 1[百度](http:&#x2F;&#x2F;www.baidu.com) 效果： 百度 []里面填超链接的名字，后面紧跟的()里面填链接的网址即可 四：插入图片语法： 1![兔斯基](https:&#x2F;&#x2F;images.pexels.com&#x2F;photos&#x2F;2025870&#x2F;pexels-photo-2025870.jpeg?cs&#x3D;srgb&amp;dl&#x3D;pexels-2025870.jpg&amp;fm&#x3D;jpg&#x3D;20*20) 兔斯基 []里面填图片的名字，后面紧跟的()里面填图片的网址即可 以上就是分享的全部内容","raw":"---\ntitle: MarkDown的简单使用及介绍\ndate: 2020-03-31 11:57:30\ncopyright: true\ntoc: true\ncategories: [编辑器]\ntags:\n\t- 编辑器\n---\n<br>\n\n---\n\n# MarkDown是什么？\nMarkDown是一种纯文本的标记语言，创始人是约翰·格鲁伯。它旨在使用最简洁的语法使文本具有一定的格式，以此来代替复杂的排版方式，因此深受推崇和使用。\n\n<!-- more -->\n\n---\n\n\n# MarkDown可以做什么？\n由于MarkDown的轻量、简洁、易用的特点，所以很多人拿它来完成博客的创作。\n或者用于编写一些说明性的帮助文档。一般采用 \".md\" 的文件格式显示。\n\n---\n\n# MarkDown常用的编辑器有哪些？\n<br>\n\n* Windows、Linux平台都支持MarkDown的编辑器：<br>\n[VSCode](https://code.visualstudio.com/)、[Atom](https://atom.io/)、[HBuilderX](https://www.dcloud.io/)、[Typora](https://www.typora.io/)、[MarkdownPad2](http://markdownpad.com/)、[RStudio](https://rstudio.com/)\n\n\n<br>\n\n* iOS平台支持的MarkDown编辑器\n[Byword](https://www.bywordapp.com/ )\n\n---\n\n\n# MarkDown的怎样使用？\n#### 编辑文本数据的语法、效果及注意事项\n##### 一：标题效果实现\n###### 1、用\"#\"标记\n\n*语法：*\n```\n# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n```\n---\n\n*效果：*\n\n![效果](https://img-blog.csdnimg.cn/20200312112717928.png)\n\n---\n*注意事项：*\n*  MarkDown目前只支持1~6阶的标题定义，所以超出6阶范围的不会呈现出相应的效果；\n\n---\n例如：\n`####### 七级标题`\n\n会得到如下的显示：\n\n####### 七级标题\n\n* 以此类推，8、9……都不会显示相应的效果，只会被当做普通文本处理。\n\n---\n###### 2、用\"=\"或\"-\"标记\n\n*语法：*\n```\n一级标题\n===========\n二级标题\n-----------\n```\n*效果：*\n\n![效果](https://img-blog.csdnimg.cn/20200312112817734.png)\n\n---\n*注意事项：*\n*  \"=\" 或 \"-\" 至少要使用一个；\n\n---\n##### 二：正文文字效果实现\n1、加斜、加粗、加粗加斜、删除  \n\n*语法：*\n```\n*这是加斜后的字体*\n**这是加粗后的字体**\n***这是加斜加粗后的字体***\n~~这是删除后的文字~~\n```\n*效果：*\n\n*这是加斜后的字体*\n**这是加粗后的字体**\n***这是加斜加粗后的字体***\n~~这是删除后的文字~~\n\n---\n2、分割线  \n     \n*语法：*\n```\n---分割线1\n***分割线2\n__分割线3\n```\n*效果：*      \n\n\n\n---\n分割线1\n***\n分割线2\n___\n分割线3\n***\n\n   3、换行\n   * 使用html语法 \"<br\\>换行\n   * 连续输入两个或两个以上空格再按回车键\n   * **\n\n   4、首行缩进\n   * 英文缩进：\\&ensp;\\&ensp;(代表缩进两个英文字符)\n   * 中文缩进：\\&emsp;\\&emsp;(代表缩进两个中文字符)\n\n    <br> *说明：*\n      通常一个中文字符=两个英文字符，所以这里的<br>\\&emsp;等于两个\\&ensp;作用。这里只写出了较为常用的方式，读者对于实际情况可以自由使用以上两种缩进方式。\n***\n   5、特殊字符的显示\n  <br>在MarkDown中，例如\"\\\"、\"*\"等一些特殊字符往往被赋予了特殊的意义（如前面的加粗、加斜等效果的实现中有\"\\*\"这种特殊字符的参与）,因此无法直接输入输出,基于这种情况，可以使用反转义字符\"\\\"来显示特殊字符<br><br>\n  例如：<br>\"\\\\\\*\" 可以输出 \"\\*\",\"\\\\\\\\\" 可以输出 \"\\\\\" 等，以此类推，所有特殊字符都可以通过在它的前面添加反转义字符\"\\\\\"来实现。\n\n---\n  6、字体类型、大小、颜色<br>\n  *语法：*\n  ```\n   <font face=\"楷体\">我是楷体字</font><br>\n  <font size=20>我是20号字</font><br>\n <font color=#FFCC00>我是橙色字</font> <br>\n( #FFCC00 为颜色的16进制代码)<br>\n <font color=#0099ff size=20 face=\"楷体\">楷体</font><br>\n  ```\n*效果：*\n<br>\n  <font face=\"楷体\">我是楷体字</font><br>\n  <font size=20>我是20号字</font><br>\n <font color=#FFCC00>我是橙色字</font> <br>\n( #FFCC00 为颜色的16进制代码)<br>\n <font color=#0099ff size=20 face=\"楷体\">楷体</font><br>\n\n---\n\n#### 引用数据的语法、效果\n*语法：*\n```\n>这是被引用的话1\n>>这是被引用的话2\n>>>这是被引用的话3\n```\n\n\n*效果：*\n>这是被引用的话1\n>>这是被引用的话2\n>>\n>>>这是被引用的话3\n\n***\n\n#### 插入数据的语法、效果及注意事项\n##### 一：插入表格\n###### 1、插入无序列表\n*语法：*\n```\n* 无序列表\n+ 无序列表\n- 无序列表\n```\n*效果：*\n* 无序列表\n+ 无序列表\n- 无序列表\n\n*注意事项：*\n上述三种符号都可以实现无序列表的效果，注意符号和列表内容之间要以空格隔开。\n\n---\n###### 2、插入有序列表\n*语法：*\n```\n1. 有序列表\n2. 有序列表\n3. 有序列表\n```\n*效果：*\n1. 有序列表\n2. 有序列表\n3. 有序列表\n\n*注意事项：*\n\".\"与列表内容要以空格隔开\n\n---\n\n###### 3、插入绘制表格\n*语法：*\n```\n表头|表头|表头\n|:-:|:-:|:-:|\n内容|内容|内容\n内容|内容|内容\n\n```\n\n*效果：*\n表头|表头|表头\n|:-:|:-:|:-:|\n内容|内容|内容\n内容|内容|内容\n\n*注意：*\n文字默认居左\n两边加：表示文字居中\n右边加：表示文字居右\n两边的 | 可以省略\n\n##### 二：插入代码\n*插入单行代码语法：*\n\n```\n`<?php echo 'hello https://tool.lu/';`\n```\n在 \\` ` 中间插入你想插入的代码即可\n\n*效果：*\n`<?php echo 'hello https://tool.lu/';`\n\n---\n*插入 多行代码/代码块 语法：*\n\n\n在 \\```插入代码块```中间插入你想插入的代码即可\n或者直接按Tab键也可。\n（注意：输入\\`\\`\\`后一定要按回车，再输入内容，输完之后还要再按一次回车，然后输入\\`\\`\\`）。<br>\n*效果：*\n\n```\n<?php\n\ndate_default_timezone_set('Asia/Shanghai');\n\necho 'hello https://tool.lu/';\n```\n---\n\n##### 三：插入超链接\n*超链接语法：*\n```\n[百度](http://www.baidu.com)\n```\n*效果：*\n\n[百度](http://www.baidu.com)\n\n[]里面填超链接的名字，后面紧跟的()里面填链接的网址即可\n\n---\n##### 四：插入图片\n*语法：*\n```\n![兔斯基](https://images.pexels.com/photos/2025870/pexels-photo-2025870.jpeg?cs=srgb&dl=pexels-2025870.jpg&fm=jpg=20*20)\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/2020031119123859.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70 )兔斯基\n\n\n[]里面填图片的名字，后面紧跟的()里面填图片的网址即可\n\n---\n以上就是分享的全部内容\n\n\n","content":"<br>\n\n<hr>\n<h1 id=\"MarkDown是什么？\"><a href=\"#MarkDown是什么？\" class=\"headerlink\" title=\"MarkDown是什么？\"></a>MarkDown是什么？</h1><p>MarkDown是一种纯文本的标记语言，创始人是约翰·格鲁伯。它旨在使用最简洁的语法使文本具有一定的格式，以此来代替复杂的排版方式，因此深受推崇和使用。</p>\n<a id=\"more\"></a>\n\n<hr>\n<h1 id=\"MarkDown可以做什么？\"><a href=\"#MarkDown可以做什么？\" class=\"headerlink\" title=\"MarkDown可以做什么？\"></a>MarkDown可以做什么？</h1><p>由于MarkDown的轻量、简洁、易用的特点，所以很多人拿它来完成博客的创作。<br>或者用于编写一些说明性的帮助文档。一般采用 “.md” 的文件格式显示。</p>\n<hr>\n<h1 id=\"MarkDown常用的编辑器有哪些？\"><a href=\"#MarkDown常用的编辑器有哪些？\" class=\"headerlink\" title=\"MarkDown常用的编辑器有哪些？\"></a>MarkDown常用的编辑器有哪些？</h1><br>\n\n<ul>\n<li>Windows、Linux平台都支持MarkDown的编辑器：<br><br><a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">VSCode</a>、<a href=\"https://atom.io/\" target=\"_blank\" rel=\"noopener\">Atom</a>、<a href=\"https://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">HBuilderX</a>、<a href=\"https://www.typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a>、<a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"noopener\">MarkdownPad2</a>、<a href=\"https://rstudio.com/\" target=\"_blank\" rel=\"noopener\">RStudio</a></li>\n</ul>\n<br>\n\n<ul>\n<li>iOS平台支持的MarkDown编辑器<br><a href=\"https://www.bywordapp.com/\" target=\"_blank\" rel=\"noopener\">Byword</a></li>\n</ul>\n<hr>\n<h1 id=\"MarkDown的怎样使用？\"><a href=\"#MarkDown的怎样使用？\" class=\"headerlink\" title=\"MarkDown的怎样使用？\"></a>MarkDown的怎样使用？</h1><h4 id=\"编辑文本数据的语法、效果及注意事项\"><a href=\"#编辑文本数据的语法、效果及注意事项\" class=\"headerlink\" title=\"编辑文本数据的语法、效果及注意事项\"></a>编辑文本数据的语法、效果及注意事项</h4><h5 id=\"一：标题效果实现\"><a href=\"#一：标题效果实现\" class=\"headerlink\" title=\"一：标题效果实现\"></a>一：标题效果实现</h5><h6 id=\"1、用”-”标记\"><a href=\"#1、用”-”标记\" class=\"headerlink\" title=\"1、用”#”标记\"></a>1、用”#”标记</h6><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 一级标题</span><br><span class=\"line\">## 二级标题</span><br><span class=\"line\">### 三级标题</span><br><span class=\"line\">#### 四级标题</span><br><span class=\"line\">##### 五级标题</span><br><span class=\"line\">###### 六级标题</span><br></pre></td></tr></table></figure>\n<hr>\n<p><em>效果：</em></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200312112717928.png\" alt=\"效果\"></p>\n<hr>\n<p><em>注意事项：</em></p>\n<ul>\n<li>MarkDown目前只支持1~6阶的标题定义，所以超出6阶范围的不会呈现出相应的效果；</li>\n</ul>\n<hr>\n<p>例如：<br><code>####### 七级标题</code></p>\n<p>会得到如下的显示：</p>\n<p>####### 七级标题</p>\n<ul>\n<li>以此类推，8、9……都不会显示相应的效果，只会被当做普通文本处理。</li>\n</ul>\n<hr>\n<h6 id=\"2、用”-”或”-“标记\"><a href=\"#2、用”-”或”-“标记\" class=\"headerlink\" title=\"2、用”=”或”-“标记\"></a>2、用”=”或”-“标记</h6><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一级标题</span><br><span class=\"line\">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class=\"line\">二级标题</span><br><span class=\"line\">-----------</span><br></pre></td></tr></table></figure>\n<p><em>效果：</em></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200312112817734.png\" alt=\"效果\"></p>\n<hr>\n<p><em>注意事项：</em></p>\n<ul>\n<li>“=” 或 “-“ 至少要使用一个；</li>\n</ul>\n<hr>\n<h5 id=\"二：正文文字效果实现\"><a href=\"#二：正文文字效果实现\" class=\"headerlink\" title=\"二：正文文字效果实现\"></a>二：正文文字效果实现</h5><p>1、加斜、加粗、加粗加斜、删除  </p>\n<p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*这是加斜后的字体*</span><br><span class=\"line\">**这是加粗后的字体**</span><br><span class=\"line\">***这是加斜加粗后的字体***</span><br><span class=\"line\">~~这是删除后的文字~~</span><br></pre></td></tr></table></figure>\n<p><em>效果：</em></p>\n<p><em>这是加斜后的字体</em><br><strong>这是加粗后的字体</strong><br><strong><em>这是加斜加粗后的字体</em></strong><br><del>这是删除后的文字</del></p>\n<hr>\n<p>2、分割线  </p>\n<p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---分割线1</span><br><span class=\"line\">***分割线2</span><br><span class=\"line\">__分割线3</span><br></pre></td></tr></table></figure>\n<p><em>效果：</em>      </p>\n<hr>\n<p>分割线1</p>\n<hr>\n<p>分割线2</p>\n<hr>\n<p>分割线3</p>\n<hr>\n<p>   3、换行</p>\n<ul>\n<li>使用html语法 “&lt;br&gt;换行</li>\n<li>连续输入两个或两个以上空格再按回车键</li>\n</ul>\n<hr>\n<p>   4、首行缩进</p>\n<ul>\n<li><p>英文缩进：&amp;ensp;&amp;ensp;(代表缩进两个英文字符)</p>\n</li>\n<li><p>中文缩进：&amp;emsp;&amp;emsp;(代表缩进两个中文字符)</p>\n<p><br> <em>说明：</em><br> 通常一个中文字符=两个英文字符，所以这里的<br>&amp;emsp;等于两个&amp;ensp;作用。这里只写出了较为常用的方式，读者对于实际情况可以自由使用以上两种缩进方式。</p>\n</li>\n</ul>\n<hr>\n<p>   5、特殊字符的显示<br>  <br>在MarkDown中，例如”&quot;、”*”等一些特殊字符往往被赋予了特殊的意义（如前面的加粗、加斜等效果的实现中有”*“这种特殊字符的参与）,因此无法直接输入输出,基于这种情况，可以使用反转义字符”&quot;来显示特殊字符<br><br><br>  例如：<br>“\\*“ 可以输出 “*“,”\\\\“ 可以输出 “\\“ 等，以此类推，所有特殊字符都可以通过在它的前面添加反转义字符”\\“来实现。</p>\n<hr>\n<p>  6、字体类型、大小、颜色<br><br>  <em>语法：</em><br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &lt;font face&#x3D;&quot;楷体&quot;&gt;我是楷体字&lt;&#x2F;font&gt;&lt;br&gt;</span><br><span class=\"line\">  &lt;font size&#x3D;20&gt;我是20号字&lt;&#x2F;font&gt;&lt;br&gt;</span><br><span class=\"line\"> &lt;font color&#x3D;#FFCC00&gt;我是橙色字&lt;&#x2F;font&gt; &lt;br&gt;</span><br><span class=\"line\">( #FFCC00 为颜色的16进制代码)&lt;br&gt;</span><br><span class=\"line\"> &lt;font color&#x3D;#0099ff size&#x3D;20 face&#x3D;&quot;楷体&quot;&gt;楷体&lt;&#x2F;font&gt;&lt;br&gt;</span><br></pre></td></tr></table></figure><br><em>效果：</em><br><br><br>  <font face=\"楷体\">我是楷体字</font><br><br>  <font size=20>我是20号字</font><br><br> <font color=#FFCC00>我是橙色字</font> <br><br>( #FFCC00 为颜色的16进制代码)<br><br> <font color=#0099ff size=20 face=\"楷体\">楷体</font><br></p>\n<hr>\n<h4 id=\"引用数据的语法、效果\"><a href=\"#引用数据的语法、效果\" class=\"headerlink\" title=\"引用数据的语法、效果\"></a>引用数据的语法、效果</h4><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;这是被引用的话1</span><br><span class=\"line\">&gt;&gt;这是被引用的话2</span><br><span class=\"line\">&gt;&gt;&gt;这是被引用的话3</span><br></pre></td></tr></table></figure>\n\n\n<p><em>效果：</em></p>\n<blockquote>\n<p>这是被引用的话1</p>\n<blockquote>\n<p>这是被引用的话2</p>\n<blockquote>\n<p>这是被引用的话3</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h4 id=\"插入数据的语法、效果及注意事项\"><a href=\"#插入数据的语法、效果及注意事项\" class=\"headerlink\" title=\"插入数据的语法、效果及注意事项\"></a>插入数据的语法、效果及注意事项</h4><h5 id=\"一：插入表格\"><a href=\"#一：插入表格\" class=\"headerlink\" title=\"一：插入表格\"></a>一：插入表格</h5><h6 id=\"1、插入无序列表\"><a href=\"#1、插入无序列表\" class=\"headerlink\" title=\"1、插入无序列表\"></a>1、插入无序列表</h6><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 无序列表</span><br><span class=\"line\">+ 无序列表</span><br><span class=\"line\">- 无序列表</span><br></pre></td></tr></table></figure>\n<p><em>效果：</em></p>\n<ul>\n<li>无序列表</li>\n</ul>\n<ul>\n<li>无序列表</li>\n</ul>\n<ul>\n<li>无序列表</li>\n</ul>\n<p><em>注意事项：</em><br>上述三种符号都可以实现无序列表的效果，注意符号和列表内容之间要以空格隔开。</p>\n<hr>\n<h6 id=\"2、插入有序列表\"><a href=\"#2、插入有序列表\" class=\"headerlink\" title=\"2、插入有序列表\"></a>2、插入有序列表</h6><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 有序列表</span><br><span class=\"line\">2. 有序列表</span><br><span class=\"line\">3. 有序列表</span><br></pre></td></tr></table></figure>\n<p><em>效果：</em></p>\n<ol>\n<li>有序列表</li>\n<li>有序列表</li>\n<li>有序列表</li>\n</ol>\n<p><em>注意事项：</em><br>“.”与列表内容要以空格隔开</p>\n<hr>\n<h6 id=\"3、插入绘制表格\"><a href=\"#3、插入绘制表格\" class=\"headerlink\" title=\"3、插入绘制表格\"></a>3、插入绘制表格</h6><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">|:-:|:-:|:-:|</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br></pre></td></tr></table></figure>\n\n<p><em>效果：</em><br>表头|表头|表头<br>|:-:|:-:|:-:|<br>内容|内容|内容<br>内容|内容|内容</p>\n<p><em>注意：</em><br>文字默认居左<br>两边加：表示文字居中<br>右边加：表示文字居右<br>两边的 | 可以省略</p>\n<h5 id=\"二：插入代码\"><a href=\"#二：插入代码\" class=\"headerlink\" title=\"二：插入代码\"></a>二：插入代码</h5><p><em>插入单行代码语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#96;&lt;?php echo &#39;hello https:&#x2F;&#x2F;tool.lu&#x2F;&#39;;&#96;</span><br></pre></td></tr></table></figure>\n<p>在 ` ` 中间插入你想插入的代码即可</p>\n<p><em>效果：</em><br><code>&lt;?php echo &#39;hello https://tool.lu/&#39;;</code></p>\n<hr>\n<p><em>插入 多行代码/代码块 语法：</em></p>\n<p>在 ```插入代码块```中间插入你想插入的代码即可<br>或者直接按Tab键也可。<br>（注意：输入```后一定要按回车，再输入内容，输完之后还要再按一次回车，然后输入```）。<br><br><em>效果：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">date_default_timezone_set(&#39;Asia&#x2F;Shanghai&#39;);</span><br><span class=\"line\"></span><br><span class=\"line\">echo &#39;hello https:&#x2F;&#x2F;tool.lu&#x2F;&#39;;</span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"三：插入超链接\"><a href=\"#三：插入超链接\" class=\"headerlink\" title=\"三：插入超链接\"></a>三：插入超链接</h5><p><em>超链接语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[百度](http:&#x2F;&#x2F;www.baidu.com)</span><br></pre></td></tr></table></figure>\n<p><em>效果：</em></p>\n<p><a href=\"http://www.baidu.com\" target=\"_blank\" rel=\"noopener\">百度</a></p>\n<p>[]里面填超链接的名字，后面紧跟的()里面填链接的网址即可</p>\n<hr>\n<h5 id=\"四：插入图片\"><a href=\"#四：插入图片\" class=\"headerlink\" title=\"四：插入图片\"></a>四：插入图片</h5><p><em>语法：</em></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![兔斯基](https:&#x2F;&#x2F;images.pexels.com&#x2F;photos&#x2F;2025870&#x2F;pexels-photo-2025870.jpeg?cs&#x3D;srgb&amp;dl&#x3D;pexels-2025870.jpg&amp;fm&#x3D;jpg&#x3D;20*20)</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2020031119123859.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNzQ1Njg1,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">兔斯基</p>\n<p>[]里面填图片的名字，后面紧跟的()里面填图片的网址即可</p>\n<hr>\n<p>以上就是分享的全部内容</p>\n","slug":"MarkDown的简单使用及介绍","updated":"2020-04-05T03:08:11.919Z","comments":true,"link":"","permalink":"https://mt-procode.github.io/2020/03/31/MarkDown%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%E5%8F%8A%E4%BB%8B%E7%BB%8D/","excerpt":"MarkDown是什么？MarkDown是一种纯文本的标记语言，创始人是约翰·格鲁伯。它旨在使用最简洁的语法使文本具有一定的格式，以此来代替复杂的排版方式，因此深受推崇和使用。","categories":[{"name":"编辑器","slug":"编辑器","permalink":"https://mt-procode.github.io/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"}],"tags":[{"name":"编辑器","slug":"编辑器","permalink":"https://mt-procode.github.io/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"}]}],"categories":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/categories/C/"},{"name":"cmd","slug":"cmd","permalink":"https://mt-procode.github.io/categories/cmd/"},{"name":"语法","slug":"C/语法","permalink":"https://mt-procode.github.io/categories/C/%E8%AF%AD%E6%B3%95/"},{"name":"算法","slug":"C/算法","permalink":"https://mt-procode.github.io/categories/C/%E7%AE%97%E6%B3%95/"},{"name":"编辑器","slug":"编辑器","permalink":"https://mt-procode.github.io/categories/%E7%BC%96%E8%BE%91%E5%99%A8/"}],"tags":[{"name":"C++","slug":"C","permalink":"https://mt-procode.github.io/tags/C/"},{"name":"数据结构","slug":"数据结构","permalink":"https://mt-procode.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"算法","slug":"算法","permalink":"https://mt-procode.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"类","slug":"类","permalink":"https://mt-procode.github.io/tags/%E7%B1%BB/"},{"name":"语法","slug":"语法","permalink":"https://mt-procode.github.io/tags/%E8%AF%AD%E6%B3%95/"},{"name":"cmd","slug":"cmd","permalink":"https://mt-procode.github.io/tags/cmd/"},{"name":"编辑器","slug":"编辑器","permalink":"https://mt-procode.github.io/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"}]}